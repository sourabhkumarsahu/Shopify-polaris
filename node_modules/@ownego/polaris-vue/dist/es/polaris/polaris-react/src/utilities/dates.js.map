{"version":3,"file":"dates.js","sources":["../../../../../../polaris/polaris-react/src/utilities/dates.ts"],"sourcesContent":["export interface Range {\n  start: Date;\n  end: Date;\n}\n\nexport type Week = (Date | null)[];\n\nconst WEEK_LENGTH = 7;\n\nexport function getWeeksForMonth(\n  month: number,\n  year: number,\n  weekStartsOn = 0,\n): Week[] {\n  const firstOfMonth = new Date(year, month, 1);\n  const firstDayOfWeek = firstOfMonth.getDay();\n  const weeks: Week[] = [[]];\n\n  let currentWeek = weeks[0];\n  let currentDate = firstOfMonth;\n\n  const orderedWeekday = getOrderedWeekdays(weekStartsOn);\n  for (let i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {\n    currentWeek.push(null);\n  }\n\n  while (currentDate.getMonth() === month) {\n    if (currentWeek.length === WEEK_LENGTH) {\n      currentWeek = [];\n      weeks.push(currentWeek);\n    }\n\n    currentWeek.push(currentDate);\n    currentDate = new Date(year, month, currentDate.getDate() + 1);\n  }\n\n  while (currentWeek.length < 7) {\n    currentWeek.push(null);\n  }\n\n  return weeks;\n}\n\nexport function dateIsInRange(day: Date | null, range: Range) {\n  if (day == null) {\n    return false;\n  }\n\n  const {start, end} = range;\n\n  return Boolean(start && day > start && end && day < end);\n}\n\nexport function dateIsSelected(day: Date | null, range: Range) {\n  if (day == null) {\n    return false;\n  }\n  const {start, end} = range;\n\n  return Boolean(\n    (start && isSameDay(start, day)) || (end && isSameDay(end, day)),\n  );\n}\n\nexport function isSameDay(day1: Date, day2: Date) {\n  return (\n    day1.getDate() === day2.getDate() &&\n    day1.getMonth() === day2.getMonth() &&\n    day1.getFullYear() === day2.getFullYear()\n  );\n}\n\nexport function getNewRange(range: Range | undefined, selected: Date): Range {\n  if (range == null) {\n    return {start: selected, end: selected};\n  }\n\n  const {start, end} = range;\n\n  if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {\n    return {start: selected, end: selected};\n  }\n\n  if (start) {\n    if (isDateBefore(selected, start)) {\n      return {start: selected, end: selected};\n    }\n    return {start, end: selected};\n  }\n\n  if (end) {\n    if (isDateBefore(selected, end)) {\n      return {start: selected, end};\n    }\n    return {start: start || end, end: selected};\n  }\n\n  return {start: selected, end: selected};\n}\n\nexport function getNextDisplayMonth(month: number): number {\n  if (month === 11) {\n    return 0;\n  }\n  return month + 1;\n}\n\nexport function getNextDisplayYear(month: number, year: number): number {\n  if (month === 11) {\n    return year + 1;\n  }\n  return year;\n}\n\nexport function getPreviousDisplayMonth(month: number): number {\n  if (month === 0) {\n    return 11;\n  }\n  return month - 1;\n}\n\nexport function getPreviousDisplayYear(month: number, year: number): number {\n  if (month === 0) {\n    return year - 1;\n  }\n  return year;\n}\n\nexport function isDateAfter(date: Date, dateToCompare: Date) {\n  return date.getTime() > dateToCompare.getTime();\n}\n\nexport function isDateBefore(date: Date, dateToCompare: Date) {\n  return date.getTime() < dateToCompare.getTime();\n}\n\nexport function isDateDisabled(date: Date, datesToCompare: Date[]) {\n  return datesToCompare.some((dateToCompare) => {\n    return date.getTime() === dateToCompare.getTime();\n  });\n}\n\nconst WEEKDAYS: number[] = [0, 1, 2, 3, 4, 5, 6];\n\nexport function getOrderedWeekdays(weekStartsOn: number): number[] {\n  const weekDays = [...WEEKDAYS];\n  const restOfDays = weekDays.splice(weekStartsOn);\n  return [...restOfDays, ...weekDays];\n}\n"],"names":[],"mappings":"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"}