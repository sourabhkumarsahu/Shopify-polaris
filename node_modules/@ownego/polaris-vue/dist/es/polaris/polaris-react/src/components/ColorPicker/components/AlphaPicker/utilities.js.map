{"version":3,"file":"utilities.js","sources":["../../../../../../../../../polaris/polaris-react/src/components/ColorPicker/components/AlphaPicker/utilities.ts"],"sourcesContent":["import {clamp} from '../../../../utilities/clamp';\n\nconst VERTICAL_PADDING = 13;\n\nexport function calculateDraggerY(\n  alpha: number,\n  sliderHeight: number,\n  draggerHeight: number,\n) {\n  const offset = offsetForAlpha(alpha, sliderHeight, draggerHeight);\n  return clamp(offset, 0, sliderHeight);\n}\n\nexport function alphaForDraggerY(y: number, sliderHeight: number) {\n  const offsetY = clamp(y, 0, sliderHeight);\n  return alphaForOffset(offsetY, sliderHeight);\n}\n\nexport function alphaForOffset(offset: number, sliderHeight: number): number {\n  const selectionHeight = offset - VERTICAL_PADDING;\n  const slidableArea = sliderHeight - VERTICAL_PADDING * 2;\n  return clamp(1 - selectionHeight / slidableArea, 0, 1);\n}\n\nfunction offsetForAlpha(\n  alpha: number,\n  sliderHeight: number,\n  draggerHeight: number,\n) {\n  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);\n  return clamp(\n    (1 - alpha) * slidableArea + VERTICAL_PADDING,\n    0,\n    sliderHeight - draggerHeight,\n  );\n}\n"],"names":[],"mappings":";AAEA,MAAM,mBAAmB;AAET,SAAA,kBACd,OACA,cACA,eACA;AACA,QAAM,SAAS,eAAe,OAAO,cAAc,aAAa;AACzD,SAAA,MAAM,QAAQ,GAAG,YAAY;AACtC;AAEgB,SAAA,iBAAiB,GAAW,cAAsB;AAChE,QAAM,UAAU,MAAM,GAAG,GAAG,YAAY;AACjC,SAAA,eAAe,SAAS,YAAY;AAC7C;AAEgB,SAAA,eAAe,QAAgB,cAA8B;AAC3E,QAAM,kBAAkB,SAAS;AAC3B,QAAA,eAAe,eAAe,mBAAmB;AACvD,SAAO,MAAM,IAAI,kBAAkB,cAAc,GAAG,CAAC;AACvD;AAEA,SAAS,eACP,OACA,cACA,eACA;AACM,QAAA,eAAe,gBAAgB,gBAAgB;AAC9C,SAAA;AAAA,KACJ,IAAI,SAAS,eAAe;AAAA,IAC7B;AAAA,IACA,eAAe;AAAA,EAAA;AAEnB;"}