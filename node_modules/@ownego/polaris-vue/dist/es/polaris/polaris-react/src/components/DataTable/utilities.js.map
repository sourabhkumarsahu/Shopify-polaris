{"version":3,"file":"utilities.js","sources":["../../../../../../../polaris/polaris-react/src/components/DataTable/utilities.ts"],"sourcesContent":["import type {ColumnVisibilityData, DataTableState} from './types';\n\ninterface TableMeasurements {\n  firstVisibleColumnIndex: number;\n  tableLeftVisibleEdge: number;\n  tableRightVisibleEdge: number;\n}\n\nexport function measureColumn(tableData: TableMeasurements) {\n  return function (column: HTMLElement, index: number): ColumnVisibilityData {\n    const {\n      firstVisibleColumnIndex,\n      tableLeftVisibleEdge: tableStart,\n      tableRightVisibleEdge: tableEnd,\n    } = tableData;\n\n    const leftEdge = column.offsetLeft;\n    const rightEdge = leftEdge + column.offsetWidth;\n    const isVisibleLeft = isEdgeVisible(leftEdge, tableStart, tableEnd, 'left');\n    const isVisibleRight = isEdgeVisible(\n      rightEdge,\n      tableStart,\n      tableEnd,\n      'right',\n    );\n    const isVisible = isVisibleLeft || isVisibleRight;\n    const width = column.offsetWidth;\n\n    if (isVisible) {\n      tableData.firstVisibleColumnIndex = Math.min(\n        firstVisibleColumnIndex,\n        index,\n      );\n    }\n    return {leftEdge, rightEdge, isVisible, width, index};\n  };\n}\n\nexport function isEdgeVisible(\n  position: number,\n  start: number,\n  end: number,\n  edgeType: string,\n) {\n  const minVisiblePixels = 30;\n\n  return (\n    position >= start + (edgeType === 'left' ? 0 : minVisiblePixels) &&\n    position <= end - minVisiblePixels\n  );\n}\n\nexport function getPrevAndCurrentColumns(\n  tableData: TableMeasurements,\n  columnData: DataTableState['columnVisibilityData'],\n) {\n  const {firstVisibleColumnIndex} = tableData;\n  const previousColumnIndex = Math.max(firstVisibleColumnIndex - 1, 0);\n  const previousColumn = columnData[previousColumnIndex];\n  const currentColumn = columnData[firstVisibleColumnIndex];\n\n  return {previousColumn, currentColumn};\n}\n"],"names":[],"mappings":"AAQO,SAAS,cAAc,WAA8B;AACnD,SAAA,SAAU,QAAqB,OAAqC;AACnE,UAAA;AAAA,MACJ;AAAA,MACA,sBAAsB;AAAA,MACtB,uBAAuB;AAAA,IACrB,IAAA;AAEJ,UAAM,WAAW,OAAO;AAClB,UAAA,YAAY,WAAW,OAAO;AACpC,UAAM,gBAAgB,cAAc,UAAU,YAAY,UAAU,MAAM;AAC1E,UAAM,iBAAiB;AAAA,MACrB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAEF,UAAM,YAAY,iBAAiB;AACnC,UAAM,QAAQ,OAAO;AAErB,QAAI,WAAW;AACb,gBAAU,0BAA0B,KAAK;AAAA,QACvC;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ;AACA,WAAO,EAAC,UAAU,WAAW,WAAW,OAAO,MAAK;AAAA,EAAA;AAExD;AAEO,SAAS,cACd,UACA,OACA,KACA,UACA;AACA,QAAM,mBAAmB;AAEzB,SACE,YAAY,SAAS,aAAa,SAAS,IAAI,qBAC/C,YAAY,MAAM;AAEtB;AAEgB,SAAA,yBACd,WACA,YACA;AACM,QAAA,EAAC,wBAA2B,IAAA;AAClC,QAAM,sBAAsB,KAAK,IAAI,0BAA0B,GAAG,CAAC;AAC7D,QAAA,iBAAiB,WAAW,mBAAmB;AAC/C,QAAA,gBAAgB,WAAW,uBAAuB;AAEjD,SAAA,EAAC,gBAAgB;AAC1B;"}