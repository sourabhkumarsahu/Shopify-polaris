function useHasSlot() {
  const hasSlot = (slot) => {
    if (!slot) {
      return false;
    }
    if (slot && slot()[0].children) {
      if (typeof slot()[0].children === "string") {
        return slot()[0].children !== "v-if";
      }
      if (Array.isArray(slot()[0].children)) {
        return slot()[0].children.length > 0;
      }
    }
    return true;
  };
  const hasContent = (node) => {
    return node.type.toString() !== "Symbol(v-cmt)";
  };
  const isSlotContainHtml = (slot) => {
    if (!slot) {
      return false;
    }
    if (slot().length > 1) {
      return true;
    }
    if (slot()[0] && slot()[0].type.toString() !== "Symbol(Text)" && slot()[0].type.toString() !== "Symbol(v-txt)" && slot()[0].type.toString() !== "Symbol()") {
      return true;
    }
    return false;
  };
  return {
    hasSlot,
    hasContent,
    isSlotContainHtml
  };
}
export {
  useHasSlot as u
};
//# sourceMappingURL=useHasSlot.js.map
