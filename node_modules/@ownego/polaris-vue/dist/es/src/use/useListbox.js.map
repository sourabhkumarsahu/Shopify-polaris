{"version":3,"file":"useListbox.js","sources":["../../../../src/use/useListbox.ts"],"sourcesContent":["import { type Ref, inject, ref } from 'vue';\nimport type { ComboboxListboxType } from '@/utilities/types';\n\nexport interface NavigableOption {\n  domId: string;\n  value: string;\n  element: HTMLElement;\n  disabled: boolean;\n  isAction?: boolean;\n  index?: number;\n}\n\nexport interface ListboxContextType {\n  onOptionSelect(option: NavigableOption): void;\n  setLoading(label?: string): void;\n}\n\nexport interface ComboboxListboxOptionType {\n  // Whether the option should visually support multiple selection\n  allowMultiple?: boolean;\n}\n\n\nexport function useListbox() {\n  const context = inject('listbox') as ListboxContextType;\n\n  return context;\n}\n\nexport function useWithinListbox() {\n  const context = inject<Ref<boolean>>('within-listbox', ref(false));\n\n  return context;\n}\n\nexport function useAction() {\n  const context = inject<boolean>('action', false);\n\n  return context;\n}\n\nexport function useComboboxListbox() {\n  const context = inject<ComboboxListboxType>('combobox-listbox', {});\n\n  return context;\n}\n\nexport function useComboboxListboxOption() {\n  const context = inject<ComboboxListboxOptionType>('combobox-listbox-option', { allowMultiple: false });\n\n  return context;\n}\n\nexport function useSection() {\n  const context = inject('section-context', '') as string;\n\n  return context;\n}\n"],"names":[],"mappings":";AAuBO,SAAS,aAAa;AACrB,QAAA,UAAU,OAAO,SAAS;AAEzB,SAAA;AACT;AAEO,SAAS,mBAAmB;AACjC,QAAM,UAAU,OAAqB,kBAAkB,IAAI,KAAK,CAAC;AAE1D,SAAA;AACT;AAEO,SAAS,YAAY;AACpB,QAAA,UAAU,OAAgB,UAAU,KAAK;AAExC,SAAA;AACT;AAEO,SAAS,qBAAqB;AACnC,QAAM,UAAU,OAA4B,oBAAoB,CAAE,CAAA;AAE3D,SAAA;AACT;AAEO,SAAS,2BAA2B;AACzC,QAAM,UAAU,OAAkC,2BAA2B,EAAE,eAAe,OAAO;AAE9F,SAAA;AACT;AAEO,SAAS,aAAa;AACrB,QAAA,UAAU,OAAO,mBAAmB,EAAE;AAErC,SAAA;AACT;"}