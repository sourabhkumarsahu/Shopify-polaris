import { ref, onMounted } from "vue";
import { s as styles } from "../components/LegacyCard/LegacyCard.vue_vue_type_script_setup_true_lang.js";
function useLegacyCardPaddingObserverRef() {
  const legacyCard = ref(null);
  onMounted(() => {
    const legacyCardNode = legacyCard.value;
    let firstSection;
    let lastSection;
    if (legacyCardNode) {
      const updateFirstAndLastSectionPadding = () => {
        var _a, _b;
        updatePadding(firstSection, "top", false);
        updatePadding(lastSection, "bottom", false);
        const currentElements = legacyCardNode.querySelectorAll(
          `.${styles.Section}, .${styles.Header}, .${styles.Footer}`
        );
        if (!(currentElements == null ? void 0 : currentElements.length)) return;
        const firstElement = currentElements[0];
        const lastElement = currentElements[currentElements.length - 1];
        if ((_a = legacyCardNode.firstElementChild) == null ? void 0 : _a.contains(firstElement)) {
          firstSection = firstElement;
          updatePadding(firstSection, "top", true);
        }
        if ((_b = legacyCardNode.lastElementChild) == null ? void 0 : _b.contains(lastElement)) {
          lastSection = lastElement;
          updatePadding(lastSection, "bottom", true);
        }
      };
      updateFirstAndLastSectionPadding();
      const observer = new MutationObserver(updateFirstAndLastSectionPadding);
      observer.observe(legacyCardNode, {
        childList: true,
        subtree: true
      });
      return () => {
        updatePadding(firstSection, "top", false);
        updatePadding(lastSection, "bottom", false);
        observer.disconnect();
      };
    }
  });
  return legacyCard;
}
function updatePadding(element, area, add) {
  if (!element || element.className.includes(styles["Section-flush"])) return;
  switch (area) {
    case "top":
      element.classList.toggle(
        styles.FirstSectionPadding,
        add
      );
      return;
    case "bottom":
      element.classList.toggle(
        styles.LastSectionPadding,
        add
      );
  }
}
export {
  useLegacyCardPaddingObserverRef as u
};
//# sourceMappingURL=useLegacyCard.js.map
