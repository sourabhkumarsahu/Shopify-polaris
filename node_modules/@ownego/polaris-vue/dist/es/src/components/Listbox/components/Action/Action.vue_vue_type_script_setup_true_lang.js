import { defineComponent, provide, computed, openBlock, createBlock, normalizeProps, guardReactiveProps, withCtx, createElementVNode, normalizeClass, createVNode, createElementBlock, unref, createCommentVNode, renderSlot } from "vue";
import { c as classNames } from "../../../../utilities/css.js";
import { _ as _sfc_main$1 } from "../Option/Option.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../TextOption/TextOption.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../../../Icon/Icon.vue_vue_type_script_setup_true_lang.js";
const Action = "Polaris-Listbox-Action";
const ActionDivider = "Polaris-Listbox-Action__ActionDivider";
const Icon = "Polaris-Listbox-Action__Icon";
const styles = {
  Action,
  ActionDivider,
  Icon
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Action",
  props: {
    value: {},
    accessibilityLabel: {},
    selected: { type: Boolean },
    disabled: { type: Boolean },
    divider: { type: Boolean },
    icon: {}
  },
  setup(__props) {
    provide("action", true);
    const props = __props;
    const className = computed(() => classNames(
      styles.Action,
      props.divider && styles.ActionDivider
    ));
    return (_ctx, _cache) => {
      return openBlock(), createBlock(_sfc_main$1, normalizeProps(guardReactiveProps(props)), {
        default: withCtx(() => [
          createElementVNode("div", {
            class: normalizeClass(className.value)
          }, [
            createVNode(_sfc_main$2, {
              selected: _ctx.selected,
              disabled: _ctx.disabled
            }, {
              default: withCtx(() => [
                _ctx.icon ? (openBlock(), createElementBlock("div", {
                  key: 0,
                  class: normalizeClass(unref(styles).Icon)
                }, [
                  createVNode(unref(_sfc_main$3), {
                    tone: "subdued",
                    source: _ctx.icon
                  }, null, 8, ["source"])
                ], 2)) : createCommentVNode("", true),
                renderSlot(_ctx.$slots, "default")
              ]),
              _: 3
            }, 8, ["selected", "disabled"])
          ], 2)
        ]),
        _: 3
      }, 16);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Action.vue_vue_type_script_setup_true_lang.js.map
