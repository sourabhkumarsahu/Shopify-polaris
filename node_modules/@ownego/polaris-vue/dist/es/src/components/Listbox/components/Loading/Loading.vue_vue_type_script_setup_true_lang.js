import { defineComponent, useSlots, watch, openBlock, createElementBlock, normalizeClass, unref, renderSlot, createVNode } from "vue";
import { c as useListbox } from "../../../../use/useListbox.js";
import { _ as _sfc_main$1 } from "../../../Spinner/Spinner.vue_vue_type_script_setup_true_lang.js";
const ListItem = "Polaris-Listbox-Loading__ListItem";
const Loading = "Polaris-Listbox-Loading";
const styles = {
  ListItem,
  Loading
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Loading",
  props: {
    accessibilityLabel: {}
  },
  setup(__props) {
    const props = __props;
    const slots = useSlots();
    const listboxContext = useListbox();
    const { setLoading } = listboxContext;
    watch(
      () => props.accessibilityLabel,
      () => {
        setLoading(props.accessibilityLabel);
        return () => setLoading(void 0);
      }
    );
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("li", {
        class: normalizeClass(unref(styles).ListItem),
        role: "presentation"
      }, [
        unref(slots).default ? renderSlot(_ctx.$slots, "default", { key: 0 }) : (openBlock(), createElementBlock("div", {
          key: 1,
          class: normalizeClass(unref(styles).Loading)
        }, [
          createVNode(unref(_sfc_main$1), {
            size: "small",
            accessibilityLabel: _ctx.accessibilityLabel
          }, null, 8, ["accessibilityLabel"])
        ], 2))
      ], 2);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Loading.vue_vue_type_script_setup_true_lang.js.map
