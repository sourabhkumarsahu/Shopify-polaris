import { defineComponent, useSlots, computed, provide, openBlock, createElementBlock, mergeProps, unref, renderSlot, createElementVNode, normalizeClass } from "vue";
import { c as classNames } from "../../../../utilities/css.js";
import { u as useId } from "../../../../use/useId.js";
import { a as listboxSectionDataSelector } from "../../../../../polaris/polaris-react/src/components/Listbox/components/Section/selectors.js";
const SectionGroup = "Polaris-Listbox-Section__SectionGroup";
const noDivider = "Polaris-Listbox-Section--noDivider";
const styles = {
  SectionGroup,
  noDivider
};
const _hoisted_1 = ["aria-labelledby"];
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Section",
  props: {
    divider: { type: Boolean, default: true }
  },
  setup(__props) {
    const props = __props;
    useSlots();
    const sectionId = String(useId());
    const className = computed(() => classNames(
      styles.Section,
      !props.divider && styles.noDivider
    ));
    provide("section-context", sectionId);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("li", mergeProps({ role: "presentation" }, unref(listboxSectionDataSelector)), [
        renderSlot(_ctx.$slots, "title"),
        createElementVNode("ul", {
          role: "group",
          "aria-labelledby": unref(sectionId),
          class: normalizeClass(className.value)
        }, [
          renderSlot(_ctx.$slots, "default")
        ], 10, _hoisted_1)
      ], 16);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Section.vue_vue_type_script_setup_true_lang.js.map
