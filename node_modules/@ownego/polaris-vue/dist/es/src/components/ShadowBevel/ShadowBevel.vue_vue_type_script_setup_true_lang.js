import { defineComponent, computed, openBlock, createBlock, resolveDynamicComponent, unref, normalizeStyle, withCtx, renderSlot } from "vue";
import { a as getResponsiveValue } from "../../utilities/css.js";
const ShadowBevel = "Polaris-ShadowBevel";
const styles = {
  ShadowBevel
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "ShadowBevel",
  props: {
    as: { default: "div" },
    boxShadow: {},
    borderRadius: {},
    zIndex: { default: "0" },
    bevel: { default: true }
  },
  setup(__props) {
    const props = __props;
    const style = computed(() => ({
      "--pc-shadow-bevel-z-index": props.zIndex,
      ...getResponsiveValue(
        "shadow-bevel",
        "content",
        mapResponsiveProp(props.bevel, (bevel) => bevel ? '""' : "none")
      ),
      ...getResponsiveValue(
        "shadow-bevel",
        "box-shadow",
        mapResponsiveProp(
          props.bevel,
          (bevel) => bevel ? `var(--p-shadow-${props.boxShadow})` : "none"
        )
      ),
      ...getResponsiveValue(
        "shadow-bevel",
        "border-radius",
        mapResponsiveProp(
          props.bevel,
          (bevel) => bevel ? `var(--p-border-radius-${props.borderRadius})` : "var(--p-border-radius-0)"
        )
      )
    }));
    function mapResponsiveProp(responsiveProp, callback) {
      if (typeof responsiveProp === "boolean") {
        return callback(responsiveProp);
      }
      return Object.fromEntries(
        Object.entries(responsiveProp).map(([breakpointsAlias, value]) => [
          breakpointsAlias,
          callback(value)
        ])
      );
    }
    return (_ctx, _cache) => {
      return openBlock(), createBlock(resolveDynamicComponent(_ctx.as), {
        className: unref(styles).ShadowBevel,
        style: normalizeStyle(style.value)
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["className", "style"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=ShadowBevel.vue_vue_type_script_setup_true_lang.js.map
