{"version":3,"file":"Text.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Text/Text.vue"],"sourcesContent":["<template lang=\"pug\">\ncomponent(\n  :is=\"element\",\n  :class=\"className\",\n  :id=\"id\",\n)\n  slot\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { classNames } from '@/utilities/css';\nimport type { VueNode } from '@/utilities/types';\nimport type {\n  Alignment,\n  Element,\n  Tone,\n  FontWeight,\n  Variant,\n  TextDecorationLine,\n} from './types';\nimport styles from '@polaris/components/Text/Text.module.css';\n\n/**\n * This component will not use children props because of slot method in vue can do the same thing\n */\nexport type TextProps = {\n  /** Adjust horizontal alignment of text */\n  alignment?: Alignment;\n  /** The element type */\n  as: Element;\n  /** Prevent text from overflowing */\n  breakWord?: boolean;\n  /** Adjust tone of text */\n  tone?: Tone;\n  /** Adjust weight of text */\n  fontWeight?: FontWeight;\n  /** HTML id attribute */\n  id?: string;\n  /** Use a numeric font variant with monospace appearance */\n  numeric?: boolean;\n  /** Truncate text overflow with ellipsis */\n  truncate?: boolean;\n  /** Typographic style of text */\n  variant?: Variant;\n  /** Visually hide the text */\n  visuallyHidden?: boolean;\n  /** Add a line-through to the text */\n  textDecorationLine?: TextDecorationLine;\n}\n\nexport type TextSlots = {\n  /** Text to display */\n  default: (_: VueNode) => null;\n}\n\nconst deprecatedVariants: {[V in Variant]?: Variant} = {\n  heading3xl: 'heading2xl',\n};\n\nconst props = withDefaults(defineProps<TextProps>(), {\n  numeric: false,\n  truncate: false,\n  visuallyHidden: false,\n});\n\ndefineSlots<TextSlots>();\n\nif (\n  process.env.NODE_ENV === 'development' &&\n  props.variant &&\n  Object.prototype.hasOwnProperty.call(deprecatedVariants, props.variant)\n) {\n  // eslint-disable-next-line no-console\n  console.warn(\n    `Deprecation: <Text variant=\"${props.variant}\" />. The value \"${props.variant}\" will be removed in a future major version of Polaris. Use \"${deprecatedVariants[props.variant]}\" instead.`,\n  );\n}\n\nconst className = computed(() => classNames(\n  styles.root,\n  props.variant && styles[props.variant],\n  props.fontWeight && styles[props.fontWeight],\n  (props.alignment || props.truncate) && styles.block,\n  props.alignment && styles[props.alignment],\n  props.breakWord && styles.breakWord,\n  props.tone && styles[props.tone],\n  props.numeric && styles.numeric,\n  props.truncate && styles.truncate,\n  props.visuallyHidden && styles.visuallyHidden,\n  props.textDecorationLine && styles[props.textDecorationLine],\n))\n\nconst element = computed(() => {\n  if (props.as) {\n    return props.as;\n  }\n\n  return props.visuallyHidden ? 'span' : 'p';\n});\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,UAAM,qBAAiD;AAAA,MACrD,YAAY;AAAA,IAAA;AAGd,UAAM,QAAQ;AAQd,QACE,QAAQ,IAAI,aAAa,iBACzB,MAAM,WACN,OAAO,UAAU,eAAe,KAAK,oBAAoB,MAAM,OAAO,GACtE;AAEQ,cAAA;AAAA,QACN,+BAA+B,MAAM,OAAO,oBAAoB,MAAM,OAAO,gEAAgE,mBAAmB,MAAM,OAAO,CAAC;AAAA,MAAA;AAAA,IAElL;AAEM,UAAA,YAAY,SAAS,MAAM;AAAA,MAC/B,OAAO;AAAA,MACP,MAAM,WAAW,OAAO,MAAM,OAAO;AAAA,MACrC,MAAM,cAAc,OAAO,MAAM,UAAU;AAAA,OAC1C,MAAM,aAAa,MAAM,aAAa,OAAO;AAAA,MAC9C,MAAM,aAAa,OAAO,MAAM,SAAS;AAAA,MACzC,MAAM,aAAa,OAAO;AAAA,MAC1B,MAAM,QAAQ,OAAO,MAAM,IAAI;AAAA,MAC/B,MAAM,WAAW,OAAO;AAAA,MACxB,MAAM,YAAY,OAAO;AAAA,MACzB,MAAM,kBAAkB,OAAO;AAAA,MAC/B,MAAM,sBAAsB,OAAO,MAAM,kBAAkB;AAAA,IAAA,CAC5D;AAEK,UAAA,UAAU,SAAS,MAAM;AAC7B,UAAI,MAAM,IAAI;AACZ,eAAO,MAAM;AAAA,MACf;AAEO,aAAA,MAAM,iBAAiB,SAAS;AAAA,IAAA,CACxC;;;;;;;;;;;;;;"}