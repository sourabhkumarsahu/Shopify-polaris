import { defineComponent, computed, openBlock, createBlock, resolveDynamicComponent, normalizeClass, withCtx, renderSlot } from "vue";
import { c as classNames } from "../../utilities/css.js";
const root = "Polaris-Text--root";
const block = "Polaris-Text--block";
const truncate = "Polaris-Text--truncate";
const visuallyHidden = "Polaris-Text--visuallyHidden";
const start = "Polaris-Text--start";
const center = "Polaris-Text--center";
const end = "Polaris-Text--end";
const justify = "Polaris-Text--justify";
const base = "Polaris-Text--base";
const inherit = "Polaris-Text--inherit";
const disabled = "Polaris-Text--disabled";
const success = "Polaris-Text--success";
const critical = "Polaris-Text--critical";
const caution = "Polaris-Text--caution";
const subdued = "Polaris-Text--subdued";
const magic = "Polaris-Text--magic";
const headingXs = "Polaris-Text--headingXs";
const headingSm = "Polaris-Text--headingSm";
const headingMd = "Polaris-Text--headingMd";
const headingLg = "Polaris-Text--headingLg";
const headingXl = "Polaris-Text--headingXl";
const heading2xl = "Polaris-Text--heading2xl";
const heading3xl = "Polaris-Text--heading3xl";
const bodyXs = "Polaris-Text--bodyXs";
const bodySm = "Polaris-Text--bodySm";
const bodyMd = "Polaris-Text--bodyMd";
const bodyLg = "Polaris-Text--bodyLg";
const regular = "Polaris-Text--regular";
const medium = "Polaris-Text--medium";
const semibold = "Polaris-Text--semibold";
const bold = "Polaris-Text--bold";
const numeric = "Polaris-Text--numeric";
const styles = {
  root,
  block,
  truncate,
  visuallyHidden,
  start,
  center,
  end,
  justify,
  base,
  inherit,
  disabled,
  success,
  critical,
  caution,
  subdued,
  magic,
  "magic-subdued": "Polaris-Text__magic--subdued",
  "text-inverse": "Polaris-Text__text--inverse",
  "text-inverse-secondary": "Polaris-Text--textInverseSecondary",
  headingXs,
  headingSm,
  headingMd,
  headingLg,
  headingXl,
  heading2xl,
  heading3xl,
  bodyXs,
  bodySm,
  bodyMd,
  bodyLg,
  regular,
  medium,
  semibold,
  bold,
  "break": "Polaris-Text--break",
  numeric,
  "line-through": "Polaris-Text__line--through"
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Text",
  props: {
    alignment: {},
    as: {},
    breakWord: { type: Boolean },
    tone: {},
    fontWeight: {},
    id: {},
    numeric: { type: Boolean, default: false },
    truncate: { type: Boolean, default: false },
    variant: {},
    visuallyHidden: { type: Boolean, default: false },
    textDecorationLine: {}
  },
  setup(__props) {
    const deprecatedVariants = {
      heading3xl: "heading2xl"
    };
    const props = __props;
    if (process.env.NODE_ENV === "development" && props.variant && Object.prototype.hasOwnProperty.call(deprecatedVariants, props.variant)) {
      console.warn(
        `Deprecation: <Text variant="${props.variant}" />. The value "${props.variant}" will be removed in a future major version of Polaris. Use "${deprecatedVariants[props.variant]}" instead.`
      );
    }
    const className = computed(() => classNames(
      styles.root,
      props.variant && styles[props.variant],
      props.fontWeight && styles[props.fontWeight],
      (props.alignment || props.truncate) && styles.block,
      props.alignment && styles[props.alignment],
      props.breakWord && styles.breakWord,
      props.tone && styles[props.tone],
      props.numeric && styles.numeric,
      props.truncate && styles.truncate,
      props.visuallyHidden && styles.visuallyHidden,
      props.textDecorationLine && styles[props.textDecorationLine]
    ));
    const element = computed(() => {
      if (props.as) {
        return props.as;
      }
      return props.visuallyHidden ? "span" : "p";
    });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(resolveDynamicComponent(element.value), {
        class: normalizeClass(className.value),
        id: _ctx.id
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class", "id"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Text.vue_vue_type_script_setup_true_lang.js.map
