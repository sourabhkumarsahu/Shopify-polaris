{"version":3,"file":"utilities.js","sources":["../../../../../src/components/Tabs/utilities.ts"],"sourcesContent":["import type { TabProps } from \"./types\";\n\nexport function getVisibleAndHiddenTabIndices(\n  tabs: TabProps[],\n  selected: number,\n  disclosureWidth: number,\n  tabWidths: number[],\n  containerWidth: number\n) {\n  const sumTabWidths = tabWidths.reduce((sum, width) => sum + width, 0);\n  const arrayOfTabIndices = tabs.map((_, index) => {\n    return index;\n  });\n\n  const visibleTabs: number[] = [];\n  const hiddenTabs: number[] = [];\n\n  if (containerWidth > sumTabWidths) {\n    visibleTabs.push(...arrayOfTabIndices);\n  } else {\n    visibleTabs.push(selected);\n\n    let tabListWidth = tabWidths[selected];\n\n    arrayOfTabIndices.forEach((currentTabIndex) => {\n      if (currentTabIndex !== selected) {\n        const currentTabWidth = tabWidths[currentTabIndex];\n\n        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {\n          hiddenTabs.push(currentTabIndex);\n          return;\n        }\n\n        visibleTabs.push(currentTabIndex);\n        tabListWidth += currentTabWidth;\n      }\n    });\n  }\n\n  return {\n    visibleTabs,\n    hiddenTabs,\n  };\n}\n"],"names":[],"mappings":"AAEO,SAAS,8BACd,MACA,UACA,iBACA,WACA,gBACA;AACM,QAAA,eAAe,UAAU,OAAO,CAAC,KAAK,UAAU,MAAM,OAAO,CAAC;AACpE,QAAM,oBAAoB,KAAK,IAAI,CAAC,GAAG,UAAU;AACxC,WAAA;AAAA,EAAA,CACR;AAED,QAAM,cAAwB,CAAA;AAC9B,QAAM,aAAuB,CAAA;AAE7B,MAAI,iBAAiB,cAAc;AACrB,gBAAA,KAAK,GAAG,iBAAiB;AAAA,EAAA,OAChC;AACL,gBAAY,KAAK,QAAQ;AAErB,QAAA,eAAe,UAAU,QAAQ;AAEnB,sBAAA,QAAQ,CAAC,oBAAoB;AAC7C,UAAI,oBAAoB,UAAU;AAC1B,cAAA,kBAAkB,UAAU,eAAe;AAE7C,YAAA,eAAe,mBAAmB,iBAAiB,iBAAiB;AACtE,qBAAW,KAAK,eAAe;AAC/B;AAAA,QACF;AAEA,oBAAY,KAAK,eAAe;AAChB,wBAAA;AAAA,MAClB;AAAA,IAAA,CACD;AAAA,EACH;AAEO,SAAA;AAAA,IACL;AAAA,IACA;AAAA,EAAA;AAEJ;"}