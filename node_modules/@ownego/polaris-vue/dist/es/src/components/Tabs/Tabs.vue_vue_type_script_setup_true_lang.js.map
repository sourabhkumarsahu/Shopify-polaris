{"version":3,"file":"Tabs.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Tabs/Tabs.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"styles.Outer\")\n  Box(:padding=\"{ md: '200' }\")\n    TabMeasurer(\n      :tabToFocus=\"state.tabToFocus\",\n      :selected=\"selected\",\n      :tabs=\"tabs\",\n      :siblingTabHasFocus=\"state.tabToFocus > -1\",\n      @measurement=\"handleMeasurement\",\n    )\n      activator\n    div(ref=\"scrollRef\", :class=\"wrapperClassNames\")\n      div(ref=\"wrapRef\", :class=\"styles.ButtonWrapper\")\n        ul(\n          :role=\"tabData.length > 0 ? 'tablist' : undefined\",\n          :class=\"classname\",\n          @focus=\"handleFocus\",\n          @blur=\"handleBlur\",\n          @keydown=\"handleKeyDown\",\n          @keyup=\"handleKeyPress\",\n          data-tabs-focus-catchment,\n        )\n          Tab(\n            v-for=\"tabIndex in tabData\",\n            v-bind=\"tabs[tabIndex]\",\n            ref=`${tabIndex === selected ? selectedTabRef : null}`,\n            :actions=\"tabs[tabIndex].actions\",\n            :key=\"`${tabIndex}-${tabs[tabIndex].id}`\",\n            :id=\"tabs[tabIndex].id\"\n            :panelID=\"hasSlot(slots.default) ? tabs[tabIndex].panelID || `${tabs[tabIndex].id}-panel` : undefined\",\n            :disabled=\"disabled || tabs[tabIndex].disabled\",\n            :siblingTabHasFocus=\"state.tabToFocus > -1\",\n            :focused=\"tabIndex === state.tabToFocus\",\n            :selected=\"tabIndex === selected\",\n            :accessibilityLabel=\"tabs[tabIndex].accessibilityLabel\"\n            :url=\"tabs[tabIndex].url\",\n            :content=\"tabs[tabIndex].content\",\n            :viewNames=\"viewNames\",\n            @tab-action=\"() => { handleTabClick(tabs[tabIndex].id) }\",\n            @toggle-modal=\"handleToggleModal\",\n            @toggle-popover=\"handleTogglePopover\",\n          )\n          li(\n            v-if=\"!(breakpoints.mdDown || tabsToShow.length === 0)\",\n            role=\"presentation\",\n            :class=\"disclosureTabClassName\",\n          )\n            Popover(\n              preferredPosition=\"below\",\n              preferredAlignment=\"left\",\n              autofocusTarget=\"first-node\",\n              :z-index-override=\"disclosureZIndexOverride\",\n              :active=\"disclosureActivatorVisible && state.showDisclosure\",\n              @close=\"handleClose\",\n            )\n              template(#activator)\n                activator\n              List(\n                :focusIndex=\"state.hiddenTabs.indexOf(state.tabToFocus)\",\n                :disclosureTabs=\"disclosureTabs\"\n                @click=\"handleListTabClick\",\n                @keypress=\"handleKeyPress\",\n              )\n        div(\n          v-if=\"canCreateNewView && tabsToShow.length > 0\",\n          :class=\"styles.NewTab\",\n        )\n          CreateViewModal(\n            :open=\"state.isNewViewModalActive\",\n            :viewNames=\"viewNames\",\n            @close=\"handleCloseNewViewModal\",\n            @click-primary-action=\"handleSaveNewViewModal\",\n          )\n            Tab(\n              v-if=\"disabled\",\n              :id=\"CREATE_NEW_VIEW_ID\",\n              :content=\"createViewA11yLabel\",\n              :actions=\"[]\",\n              :disabled=\"disabled\",\n              :tabIndexOverride=\"0\",\n              @toggle-popover=\"handleTogglePopover\",\n              @toggle-modal=\"handleToggleModal\",\n              @tab-action=\"handleClickNewTab\",\n              @focus=\"handleTabFocus\",\n            )\n              template(#icon)\n                Icon(\n                  :source=\"PlusIcon\",\n                  :accessibilityLabel=\"createViewA11yLabel\",\n                )\n            div(v-else)\n              Tooltip(\n                preferredPosition=\"above\",\n                :content=\"i18n.translate('Polaris.Tabs.newViewTooltip')\",\n                :hoverDelay=\"400\",\n                :z-index-override=\"disclosureZIndexOverride\",\n              )\n                Tab(\n                  :id=\"CREATE_NEW_VIEW_ID\",\n                  :content=\"createViewA11yLabel\",\n                  :actions=\"[]\",\n                  :disabled=\"disabled\",\n                  :tabIndexOverride=\"0\",\n                  @toggle-popover=\"handleTogglePopover\",\n                  @toggle-modal=\"handleToggleModal\",\n                  @tab-action=\"handleClickNewTab\",\n                  @focus=\"handleTabFocus\",\n                )\n                  template(#icon)\n                    Icon(\n                      :source=\"PlusIcon\",\n                      :accessibilityLabel=\"createViewA11yLabel\",\n                    )\n  template(\n    v-if=\"hasSlot(slots.default)\",\n    v-for=\"_tab, index in tabs\",\n  )\n    Panel(\n      v-if=\"selected === index\",\n      :key=\"tabs[index].id\",\n      :id=\"tabs[index].panelID || `${tabs[index].id}-panel`\",\n      :tabID=\"tabs[index].id\",\n    )\n      slot\n    Panel(\n      v-else,\n      hidden,\n      :key=\"index\",\n      :id=\"tabs[index].panelID || `${tabs[index].id}-panel`\",\n      :tabID=\"tabs[index].id\",\n    )\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  onMounted,\n  ref,\n  watch,\n  getCurrentInstance,\n  reactive,\n  computed,\n  h,\n} from 'vue';\nimport { useBreakpoints } from '@/use/useBreakpoints';\nimport useI18n from '@/use/useI18n';\nimport type { VueNode } from '@/utilities/types';\nimport { useHasSlot } from '@/use/useHasSlot';\nimport { Icon, Tooltip, Popover, Box, Text, UnstyledButton } from '@/components';\nimport { Tab, TabMeasurer, CreateViewModal, Panel, List } from './components';\nimport type { TabMeasurements, TabProps, TabsEvents } from './types';\nimport { getVisibleAndHiddenTabIndices } from './utilities';\nimport styles from '@polaris/components/Tabs/Tabs.module.css';\nimport ChevronDownIcon from '@icons/ChevronDownIcon.svg';\nimport PlusIcon from '@icons/PlusIcon.svg';\nimport { classNames } from '@/utilities/css';\n\nexport interface TabsState {\n  disclosureWidth: number;\n  tabWidths: number[];\n  visibleTabs: number[];\n  hiddenTabs: number[];\n  containerWidth: number;\n  showDisclosure: boolean;\n  tabToFocus: number;\n  isTabPopoverOpen: boolean;\n  isTabModalOpen: boolean;\n  isNewViewModalActive: boolean;\n  modalSubmitted: boolean;\n  isTabsFocused: boolean;\n}\n\nexport interface TabsProps {\n  /** The items that map to each Tab. */\n  tabs: TabProps[];\n  /** The index of the currently selected Tab. */\n  selected: number;\n  /** Whether the Tabs are disabled or not. */\n  disabled?: boolean;\n  /** Whether to show the add new view Tab. */\n  canCreateNewView?: boolean;\n  /** Label for the new view Tab. Will override the default of \"Create new view\" */\n  newViewAccessibilityLabel?: string;\n  /** Fit tabs to container */\n  fitted?: boolean;\n  /** Text to replace disclosures horizontal dots */\n  disclosureText?: string;\n  /** Override z-index of popovers and tooltips */\n  disclosureZIndexOverride?: number;\n}\nconst CREATE_NEW_VIEW_ID = 'create-new-view';\n\nconst props = defineProps<TabsProps>();\n\nconst slots = defineSlots<{\n  /** Content to display in tabs */\n  default?: (_?: VueNode) => any[];\n}>();\n\nconst emits = defineEmits<TabsEvents>();\n\nconst i18n = useI18n();\nconst breakpoints = useBreakpoints();\nconst currentInstance = getCurrentInstance();\nconst { hasSlot } = useHasSlot();\n\nconst scrollRef = ref<HTMLDivElement | null>(null);\nconst wrapRef = ref<HTMLDivElement | null>(null);\nconst selectedTabRef = ref<HTMLElement | null>(null);\n\nconst state = reactive<TabsState>({\n  disclosureWidth: 0,\n  containerWidth: Infinity,\n  tabWidths: [],\n  visibleTabs: [],\n  hiddenTabs: [],\n  showDisclosure: false,\n  tabToFocus: -1,\n  isNewViewModalActive: false,\n  modalSubmitted: false,\n  isTabsFocused: false,\n  isTabPopoverOpen: false,\n  isTabModalOpen: false,\n});\n\nconst prevModalOpen = ref<boolean>(false);\nconst prevPopoverOpen = ref<boolean>(false);\n\nconst createViewA11yLabel = computed(() => props.newViewAccessibilityLabel\n  || i18n.translate('Polaris.Tabs.newViewAccessibilityLabel'),\n);\n\nconst tabsToShow = computed(() => breakpoints.value.mdDown\n  ? [...state.visibleTabs, ...state.hiddenTabs]\n  : state.visibleTabs,\n);\n\nconst tabData = computed(() => tabsToShow.value\n  .sort((tabA, tabB) => tabA - tabB)\n  .filter((tabIndex) => props.tabs[tabIndex]),\n);\n\nconst disclosureActivatorVisible = computed(() =>\n  state.visibleTabs.length < props.tabs.length && !breakpoints.value.mdDown,\n);\n\nconst classname = computed(() => classNames(\n  styles.Tabs,\n  props.fitted && styles.fitted,\n  disclosureActivatorVisible.value && styles.fillSpace,\n));\n\nconst wrapperClassNames = computed(() => classNames(\n  styles.Wrapper,\n  props.canCreateNewView && styles.WrapperWithNewButton,\n));\n\nconst disclosureTabClassName = computed(() => classNames(\n  styles.DisclosureTab,\n  disclosureActivatorVisible.value && styles['DisclosureTab-visible'],\n));\n\nconst disclosureTabs = computed(() =>\n  state.hiddenTabs.map((tabIndex) => props.tabs[tabIndex]),\n);\n\nconst viewNames = computed(() => props.tabs.map(({ content }) => content));\n\nconst handleTogglePopover = (isOpen: boolean) => {\n  state.isTabPopoverOpen = isOpen;\n};\n\nconst handleToggleModal = (isOpen: boolean) => {\n  state.isTabModalOpen = isOpen;\n};\n\nconst handleCloseNewViewModal = () => {\n  state.isNewViewModalActive = false;\n};\n\nconst handleSaveNewViewModal = (value: string) => {\n  if (!currentInstance?.vnode.props?.onCreateNewView) {\n    return false;\n  }\n\n  emits('create-new-view', value);\n  state.modalSubmitted = true;\n\n  return value;\n};\n\nconst handleClickNewTab = () => {\n  state.isNewViewModalActive = true;\n};\n\nconst handleTabClick = (id: string) => {\n  const tab = props.tabs.find((aTab) => aTab.id === id);\n  if (tab == null) {\n    return;\n  }\n  const selectedIndex = props.tabs.indexOf(tab);\n  currentInstance?.vnode.props?.onSelect && emits('select', selectedIndex);\n};\n\nconst handleFocus = (event: FocusEvent) => {\n  const target = event.target as HTMLInputElement;\n  const isItem = target.classList.contains(styles.Item);\n  const isInNaturalDOMOrder =\n    target.closest(`[data-tabs-focus-catchment]`) || isItem;\n  const isDisclosureActivator = target.classList.contains(\n    styles.DisclosureActivator,\n  );\n\n  if (isDisclosureActivator || !isInNaturalDOMOrder) {\n    return;\n  }\n\n  state.isTabsFocused = true;\n};\n\nconst handleBlur = (event: FocusEvent) => {\n  const target = event.target as HTMLInputElement;\n  const relatedTarget = event.relatedTarget as HTMLInputElement;\n  const isInNaturalDOMOrder = relatedTarget?.closest?.(`.${styles.Tabs}`);\n  const targetIsATab = target?.classList?.contains?.(styles.Tab);\n  const focusReceiverIsAnItem = relatedTarget?.classList.contains(styles.Item);\n\n  if (\n    (!relatedTarget &&\n      !state.isTabModalOpen &&\n      !targetIsATab &&\n      !focusReceiverIsAnItem) ||\n    (!isInNaturalDOMOrder &&\n      !state.isTabModalOpen &&\n      !targetIsATab &&\n      !focusReceiverIsAnItem)\n  ) {\n    state.tabToFocus = -1;\n    return;\n  }\n\n  state.isTabsFocused = false;\n};\n\nconst handleKeyDown = (event: KeyboardEvent) => {\n  if (state.isTabPopoverOpen || state.isTabModalOpen || state.isNewViewModalActive) {\n    return;\n  }\n  const { key } = event;\n\n  if (key === 'ArrowLeft' || key === 'ArrowRight') {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n};\n\nconst moveToSelectedTab = () => {\n  const activeButton = selectedTabRef.value?.querySelector(\n    `.${styles['Tab-active']}`,\n  ) as HTMLElement;\n  if (activeButton) {\n    moveToActiveTab(activeButton.offsetLeft);\n  }\n};\n\nconst handleKeyPress = (event: KeyboardEvent) => {\n  if (state.isTabModalOpen || state.isTabPopoverOpen || state.isNewViewModalActive) {\n    return;\n  }\n  const key = event.key;\n  const tabsArrayInOrder =\n    state.showDisclosure || breakpoints.value.mdDown\n      ? state.visibleTabs.concat(state.hiddenTabs)\n      : [...state.visibleTabs];\n\n  let newFocus = tabsArrayInOrder.indexOf(state.tabToFocus);\n\n  if (key === 'ArrowRight') {\n    newFocus += 1;\n\n    if (newFocus === tabsArrayInOrder.length) {\n      newFocus = 0;\n    }\n  }\n\n  if (key === 'ArrowLeft') {\n    if (newFocus === -1 || newFocus === 0) {\n      newFocus = tabsArrayInOrder.length - 1;\n    } else {\n      newFocus -= 1;\n    }\n  }\n\n  const buttonToFocus = tabsArrayInOrder[newFocus];\n\n  if (buttonToFocus != null) {\n    state.tabToFocus = buttonToFocus;\n  }\n};\n\nconst handleDisclosureActivatorClick = () => {\n  state.showDisclosure = !state.showDisclosure;\n  state.tabToFocus = state.hiddenTabs[0];\n};\n\nconst handleClose = () => {\n  state.showDisclosure = false;\n};\n\nconst handleMeasurement = (measurements: TabMeasurements) => {\n  const {\n    hiddenTabWidths: tabWidths,\n    containerWidth,\n    disclosureWidth,\n  } = measurements;\n\n  const { visibleTabs, hiddenTabs } = getVisibleAndHiddenTabIndices(\n    props.tabs,\n    props.selected,\n    disclosureWidth,\n    tabWidths,\n    containerWidth,\n  );\n\n  state.visibleTabs = visibleTabs;\n  state.hiddenTabs = hiddenTabs;\n  state.disclosureWidth = disclosureWidth;\n  state.containerWidth = containerWidth;\n  state.tabWidths = tabWidths;\n};\n\nconst handleListTabClick = (id: string) => {\n  handleTabClick(id);\n  handleClose();\n  state.isTabsFocused = true;\n};\n\nconst moveToActiveTab = (offsetLeft: number) => {\n  setTimeout(() => {\n    if (scrollRef.value && typeof scrollRef.value.scroll === 'function') {\n      const scrollRefOffset = wrapRef?.value?.offsetLeft || 0;\n      scrollRef?.value?.scroll({\n        left: offsetLeft - scrollRefOffset,\n      });\n    }\n  }, 0);\n};\n\nconst handleTabFocus = () => {\n  if (state.modalSubmitted) {\n    state.tabToFocus = props.selected;\n    state.modalSubmitted = false;\n  }\n};\n\nonMounted(() => {\n  prevModalOpen.value = state.isTabModalOpen;\n  prevPopoverOpen.value = state.isTabPopoverOpen;\n});\n\nwatch(\n  () => [\n    prevPopoverOpen.value,\n    state.isTabPopoverOpen,\n    prevModalOpen.value,\n    state.isTabModalOpen,\n    props.selected,\n    state.tabToFocus,\n  ],\n  () => {\n    const hasModalClosed = prevModalOpen.value && !state.isTabModalOpen;\n    const hasPopoverClosed = prevPopoverOpen.value && !state.isTabPopoverOpen;\n    if (hasModalClosed) {\n      state.isTabsFocused = true;\n      state.tabToFocus = props.selected;\n    } else if (hasPopoverClosed && !state.isTabModalOpen) {\n      state.isTabsFocused = true;\n      state.tabToFocus = props.selected;\n    }\n  },\n);\n\nwatch(\n  () => [\n    state.containerWidth,\n    state.disclosureWidth,\n    props.tabs,\n    props.selected,\n    state.tabWidths,\n  ],\n  () => {\n    const { visibleTabs, hiddenTabs } = getVisibleAndHiddenTabIndices(\n      props.tabs,\n      props.selected,\n      state.disclosureWidth,\n      state.tabWidths,\n      state.containerWidth,\n    );\n\n    state.visibleTabs = visibleTabs;\n    state.hiddenTabs = hiddenTabs;\n  },\n  { immediate: true }\n);\n\nwatch(\n  () => [\n    props.selected,\n    breakpoints.value.mdDown,\n  ],\n  () => {\n    if (breakpoints.value.mdDown) {\n      moveToSelectedTab();\n    }\n  },\n);\n\nwatch(\n  () => [\n    state.isTabsFocused,\n    props.selected,\n    state.showDisclosure,\n  ],\n  () => {\n    if (state.isTabsFocused && !state.showDisclosure) {\n      state.tabToFocus = props.selected;\n    }\n  },\n);\n\nconst activator = () => h(\n  UnstyledButton,\n  {\n    type: 'button',\n    className: classNames(styles.DisclosureActivator),\n    disabled: props.disabled,\n    'aria-label': props.disclosureText ?? i18n.translate('Polaris.Tabs.toggleTabsLabel'),\n    onClick: handleDisclosureActivatorClick,\n  },\n  () => [\n    h(\n      Text,\n      { as: 'span', variant: 'bodySm', fontWeight: 'medium' },\n      () => props.disclosureText ?? i18n.translate('Polaris.Tabs.toggleTabsLabel'),\n    ),\n    h(\n      'div',\n      {\n        class: classNames(\n          styles.IconWrap,\n          disclosureActivatorVisible.value && state.showDisclosure && styles['IconWrap-open'],\n        ),\n      },\n      h(\n        Icon,\n        { source: ChevronDownIcon, tone: 'subdued' },\n      ),\n    ),\n  ],\n);\n</script>\n"],"names":["_useSlots","UnstyledButton","Text","Icon"],"mappings":"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"}