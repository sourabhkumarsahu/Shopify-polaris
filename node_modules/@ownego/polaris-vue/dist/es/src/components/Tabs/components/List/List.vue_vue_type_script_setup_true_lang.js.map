{"version":3,"file":"List.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/Tabs/components/List/List.vue"],"sourcesContent":["<template lang=\"pug\">\nul(\n  :class=\"styles.List\",\n  @keydown=\"handleKeyDown\",\n  @keyup=\"emits('keypress', $event)\",\n)\n  Item(\n    v-for=\"item, index in disclosureTabs\",\n    :key=\"item.id\",\n    :id=\"item.id\",\n    :url=\"item.url\",\n    :focused=\"index === focusIndex\",\n    :accessibilityLabel=\"item.accessibilityLabel\",\n    @click=\"emits('click', item.id)\",\n  ) {{ item.content }}\n</template>\n\n<script setup lang=\"ts\">\nimport styles from '@polaris/components/Tabs/Tabs.module.css';\nimport { Item } from '../index';\nimport type { TabProps } from '../../types';\n\nexport interface ListProps {\n  focusIndex: number;\n  disclosureTabs: TabProps[];\n}\n\nconst emits = defineEmits<{\n  'click': [id: string];\n  'keypress': [event: KeyboardEvent];\n}>();\n\ndefineProps<ListProps>();\n\nconst handleKeyDown = (event: KeyboardEvent) => {\n  const { key } = event;\n\n  if (key === 'ArrowLeft' || key === 'ArrowRight') {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AA2BA,UAAM,QAAQ;AAOR,UAAA,gBAAgB,CAAC,UAAyB;AACxC,YAAA,EAAE,IAAQ,IAAA;AAEZ,UAAA,QAAQ,eAAe,QAAQ,cAAc;AAC/C,cAAM,eAAe;AACrB,cAAM,gBAAgB;AAAA,MACxB;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;"}