import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, renderSlot } from "vue";
import { c as classNames } from "../../../../utilities/css.js";
import { s as styles } from "../../Tabs.vue_vue_type_script_setup_true_lang.js";
const _hoisted_1 = ["id", "aria-labelledby"];
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Panel",
  props: {
    hidden: { type: Boolean },
    id: {},
    tabID: {}
  },
  setup(__props) {
    const props = __props;
    const className = computed(() => classNames(
      styles.Panel,
      props.hidden && styles["Panel-hidden"]
    ));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        role: "tabpanel",
        tabIndex: "-1",
        class: normalizeClass(className.value),
        id: _ctx.id,
        "aria-labelledby": _ctx.tabID
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 10, _hoisted_1);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Panel.vue_vue_type_script_setup_true_lang.js.map
