{"version":3,"file":"CheckableButton.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/CheckableButton/CheckableButton.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"styles.CheckableButton\", @click=\"emits('toggle-all')\")\n  div(:class=\"styles.Checkbox\")\n    Checkbox(\n      v-model=\"model\",\n      ref=\"checkBoxRef\",\n      labelHidden,\n      :checked=\"selected\",\n      :label=\"accessibilityLabel\",\n      :disabled=\"disabled\",\n      @change=\"emits('toggle-all')\",\n    )\n  span(\n    v-if=\"label\",\n    :class=\"styles.Label\",\n    :aria-live=\"ariaLive\",\n    )\n      Text(\n        as=\"span\",\n        variant=\"bodySm\",\n        font-weight=\"medium\",\n      ) {{ label }}\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue';\nimport { Checkbox, Text } from '@/components';\nimport type { CheckableButtonProps } from './types';\nimport styles from '@polaris/components/CheckableButton/CheckableButton.module.css';\n\nexport interface CheckboxHandles {\n  focus(): void;\n}\n\nconst props = withDefaults(defineProps<CheckableButtonProps>(), {\n  label: '',\n});\n\nconst emits = defineEmits<{\n  'toggle-all': [];\n  'update:modelValue': [value: boolean | 'indeterminate' | undefined];\n}>();\n\nconst model = computed({\n  get() {\n    return props.selected;\n  },\n  set(value: boolean | 'indeterminate' | undefined) {\n    emits('update:modelValue', value);\n  },\n});\n\nconst checkBoxRef = ref<CheckboxHandles | null>(null);\n\nfunction focus() {\n  checkBoxRef.value?.focus();\n}\n\ndefineExpose({ focus });\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,UAAM,QAAQ;AAId,UAAM,QAAQ;AAKd,UAAM,QAAQ,SAAS;AAAA,MACrB,MAAM;AACJ,eAAO,MAAM;AAAA,MACf;AAAA,MACA,IAAI,OAA8C;AAChD,cAAM,qBAAqB,KAAK;AAAA,MAClC;AAAA,IAAA,CACD;AAEK,UAAA,cAAc,IAA4B,IAAI;AAEpD,aAAS,QAAQ;;AACf,wBAAY,UAAZ,mBAAmB;AAAA,IACrB;AAEa,aAAA,EAAE,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}