import { defineComponent, useSlots, computed, openBlock, createBlock, unref, withCtx, createVNode, renderSlot } from "vue";
import { c as classNames } from "../../../../../utilities/css.js";
import { _ as _sfc_main$1 } from "../../../../UnstyledButton/UnstyledButton.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../../../../Icon/Icon.vue_vue_type_script_setup_true_lang.js";
import { r as ArrowUpIcon, s as ArrowDownIcon } from "../../../../../../vendor.js";
import { _ as _sfc_main$3 } from "../../../../Text/Text.vue_vue_type_script_setup_true_lang.js";
const DirectionButton = "Polaris-SortButton-DirectionButton";
const styles = {
  DirectionButton,
  "DirectionButton-active": "Polaris-SortButton-DirectionButton__DirectionButton--active"
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "DirectionButton",
  props: {
    active: { type: Boolean },
    direction: {},
    value: {}
  },
  emits: ["click"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    useSlots();
    const classes = computed(() => classNames(
      styles.DirectionButton,
      !!props.active && styles["DirectionButton-active"]
    ));
    const iconSource = computed(() => props.direction === "asc" ? ArrowUpIcon : ArrowDownIcon);
    const handleClick = () => {
      emits("click", [props.value]);
    };
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), {
        "class-name": classes.value,
        onClick: handleClick
      }, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), {
            tone: "base",
            source: iconSource.value
          }, null, 8, ["source"]),
          createVNode(unref(_sfc_main$3), {
            as: "span",
            variant: "bodySm",
            "font-weight": "medium"
          }, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          })
        ]),
        _: 3
      }, 8, ["class-name"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=DirectionButton.vue_vue_type_script_setup_true_lang.js.map
