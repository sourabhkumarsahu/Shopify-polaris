{"version":3,"file":"InlineGrid.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/InlineGrid/InlineGrid.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  :class=\"styles.InlineGrid\"\n  :style=\"sanitizeCustomProperties(style)\"\n)\n  slot\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport {\n  getResponsiveProps,\n  getResponsiveValue,\n  sanitizeCustomProperties,\n} from '@/utilities/css';\nimport type { ResponsiveValue } from '@/utilities/css';\nimport type { VueNode } from '@/utilities/types';\nimport type { InlineGridProps, Columns, ColumnsType } from './types';\nimport styles from '@polaris/components/InlineGrid/InlineGrid.module.css';\n\nexport type InlineGridSlots = {\n  default: (_: VueNode) => any;\n}\n\ndefineSlots<InlineGridSlots>();\n\n\nconst props = defineProps<InlineGridProps>();\n\nconst style = computed(() => {\n  return {\n    ...getResponsiveValue(\n      'inline-grid',\n      'grid-template-columns',\n      formatInlineGrid(props.columns),\n    ),\n    ...getResponsiveProps('inline-grid', 'gap', 'space', props.gap),\n    '--pc-inline-grid-align-items': props.alignItems,\n  };\n});\n\nfunction formatInlineGrid(columns?: Columns): ResponsiveValue {\n  if (\n    typeof columns === 'object' &&\n    columns !== null &&\n    !Array.isArray(columns)\n  ) {\n    return Object.fromEntries(\n      Object.entries(columns).map(([breakpointAlias, breakpointInlineGrid]) => [\n        breakpointAlias,\n        getColumnValue(breakpointInlineGrid),\n      ]),\n    );\n  }\n\n  return getColumnValue(columns);\n}\n\nfunction getColumnValue(columns?: ColumnsType) {\n  if (!columns) return undefined;\n\n  if (typeof columns === 'number' || !isNaN(Number(columns))) {\n    return `repeat(${Number(columns)}, minmax(0, 1fr))`;\n  }\n\n  if (typeof columns === 'string') return columns;\n\n  return columns\n    .map((column) => {\n      switch (column) {\n        case 'oneThird':\n          return 'minmax(0, 1fr)';\n        case 'oneHalf':\n          return 'minmax(0, 1fr)';\n        case 'twoThirds':\n          return 'minmax(0, 2fr)';\n      }\n    })\n    .join(' ');\n}\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;AA2BA,UAAM,QAAQ;AAER,UAAA,QAAQ,SAAS,MAAM;AACpB,aAAA;AAAA,QACL,GAAG;AAAA,UACD;AAAA,UACA;AAAA,UACA,iBAAiB,MAAM,OAAO;AAAA,QAChC;AAAA,QACA,GAAG,mBAAmB,eAAe,OAAO,SAAS,MAAM,GAAG;AAAA,QAC9D,gCAAgC,MAAM;AAAA,MAAA;AAAA,IACxC,CACD;AAED,aAAS,iBAAiB,SAAoC;AAE1D,UAAA,OAAO,YAAY,YACnB,YAAY,QACZ,CAAC,MAAM,QAAQ,OAAO,GACtB;AACA,eAAO,OAAO;AAAA,UACZ,OAAO,QAAQ,OAAO,EAAE,IAAI,CAAC,CAAC,iBAAiB,oBAAoB,MAAM;AAAA,YACvE;AAAA,YACA,eAAe,oBAAoB;AAAA,UAAA,CACpC;AAAA,QAAA;AAAA,MAEL;AAEA,aAAO,eAAe,OAAO;AAAA,IAC/B;AAEA,aAAS,eAAe,SAAuB;AACzC,UAAA,CAAC,QAAgB,QAAA;AAEjB,UAAA,OAAO,YAAY,YAAY,CAAC,MAAM,OAAO,OAAO,CAAC,GAAG;AACnD,eAAA,UAAU,OAAO,OAAO,CAAC;AAAA,MAClC;AAEI,UAAA,OAAO,YAAY,SAAiB,QAAA;AAEjC,aAAA,QACJ,IAAI,CAAC,WAAW;AACf,gBAAQ,QAAQ;AAAA,UACd,KAAK;AACI,mBAAA;AAAA,UACT,KAAK;AACI,mBAAA;AAAA,UACT,KAAK;AACI,mBAAA;AAAA,QACX;AAAA,MAAA,CACD,EACA,KAAK,GAAG;AAAA,IACb;;;;;;;;;;;"}