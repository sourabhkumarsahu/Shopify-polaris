{"version":3,"file":"Scrollable.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Scrollable/Scrollable.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  ref=\"scrollArea\",\n  :class=\"finalClassName\",\n  :tabindex=\"focusable ? 0 : undefined\",\n  v-bind=\"scrollable.props\",\n)\n  slot\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeUnmount,\n  provide,\n} from 'vue';\nimport { scrollable } from '@polaris/components/shared';\nimport { debounce } from '@polaris/utilities/debounce';\nimport { classNames, variationName } from '@/utilities/css';\nimport { StickyManager } from '@/utilities/sticky-manager';\nimport type { VueNode } from '@/utilities/types';\nimport styles from '@polaris/components/Scrollable/Scrollable.module.css';\n\nconst MAX_SCROLL_HINT_DISTANCE = 100;\nconst LOW_RES_BUFFER = 2;\n\n/**\n * In react version this prop will extends React.HTMLProps<HTMLDivElement>\n * But with Vue we don't need to do that just simple pass the attribute the same way we passing props\n */\nexport type ScrollableProps = {\n  /** Scroll content vertically\n   * @default true\n   */\n  vertical?: boolean;\n  /** Scroll content horizontally\n   * @default true\n   */\n  horizontal?: boolean;\n  /** Add a shadow when content is scrollable */\n  shadow?: boolean;\n  /** Slightly hints content upon mounting when scrollable */\n  hint?: boolean;\n  /** Adds a tabIndex to scrollable when children are not focusable */\n  focusable?: boolean;\n  /** Browser determined scrollbar width\n   * @default 'thin'\n   */\n  scrollbarWidth?: 'thin' | 'none' | 'auto';\n  /** Adds space to one or both sides to prevent content shift when scrolling is necessary */\n  scrollbarGutter?: 'stable' | 'stable both-edges';\n}\n\nexport type ScrollableEmits = {\n  /** Called when scrolled to the bottom of the scroll area */\n  scrolledToBottom: [];\n}\n\nexport interface ScrollToOptions {\n  behavior?: 'instant' | 'smooth' | 'auto';\n}\n\nexport interface ScrollableRef {\n  scrollTo: (scrollY: number, options?: ScrollToOptions) => void;\n}\n\nexport type ScrollableSlot = {\n  /** Content inside scrollable */\n  default: (_: VueNode) => null;\n}\n\n// Don't need to work with ...rest of props, attrs is enough\nconst props = withDefaults(defineProps<ScrollableProps>(), {\n  vertical: true,\n  horizontal: true,\n  scrollbarWidth: 'thin',\n});\n\nconst textSlots = defineSlots<ScrollableSlot>();\n\nconst emits = defineEmits<ScrollableEmits>();\n\nconst topShadow = ref<boolean>(false);\nconst bottomShadow = ref<boolean>(false);\nconst scrollArea = ref<HTMLDivElement | null>(null);\n\nconst stickyManager = ref(new StickyManager());\n\nconst finalClassName = computed(() => classNames(\n  styles.Scrollable,\n  props.vertical && styles.vertical,\n  props.horizontal && styles.horizontal,\n  props.shadow && topShadow.value && styles.hasTopShadow,\n  props.shadow && bottomShadow.value && styles.hasBottomShadow,\n  props.scrollbarWidth && styles[variationName('scrollbarWidth', props.scrollbarWidth)],\n  props.scrollbarGutter && styles[ variationName('scrollbarGutter', props.scrollbarGutter.replace(' ', ''))],\n));\n\nconst setTopShadow = (value: boolean) => {\n  topShadow.value = value;\n};\n\nconst setBottomShadow = (value: boolean) => {\n  bottomShadow.value = value;\n};\n\nconst scrollTo = (scrollY: number, options: ScrollToOptions = {}) => {\n  const optionsBehavior = options.behavior || 'smooth';\n  const behavior = prefersReducedMotion() ? 'auto' : optionsBehavior;\n\n  scrollArea.value?.scrollTo({top: scrollY, behavior});\n};\n\nconst handleScroll = () => {\n  const currentScrollArea = scrollArea.value;\n\n  if (!currentScrollArea) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = currentScrollArea;\n    const canScroll = Boolean(scrollHeight > clientHeight);\n    const isBelowTopOfScroll = Boolean(scrollTop > 0);\n    const isAtBottomOfScroll = Boolean(scrollTop + clientHeight >= scrollHeight - LOW_RES_BUFFER);\n\n    setTopShadow(isBelowTopOfScroll);\n    setBottomShadow(!isAtBottomOfScroll);\n\n    if (canScroll && isAtBottomOfScroll) {\n      emits('scrolledToBottom')\n    }\n  });\n};\n\nconst handleResize = debounce(handleScroll, 50, { trailing: true });\n\nonMounted(() => {\n  handleScroll();\n\n  if (props.hint) {\n    requestAnimationFrame(() => performScrollHint(scrollArea.value));\n  }\n\n  const currentScrollArea = scrollArea.value;\n\n  if (currentScrollArea) {\n    stickyManager.value.setContainer(currentScrollArea);\n    currentScrollArea.addEventListener('scroll', handleScroll);\n    globalThis.addEventListener('resize', handleResize);\n  }\n});\n\nonBeforeUnmount(() => {\n  const currentScrollArea = scrollArea.value;\n\n  if (currentScrollArea) {\n    currentScrollArea.removeEventListener('scroll', handleScroll);\n    globalThis.removeEventListener('resize', handleResize);\n  }\n});\n\nconst prefersReducedMotion = () =>{\n  try {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  } catch (err) {\n    return false;\n  }\n}\n\nconst performScrollHint = (elem?: HTMLDivElement | null) => {\n  if (!elem || prefersReducedMotion()) {\n    return;\n  }\n\n  const scrollableDistance = elem.scrollHeight - elem.clientHeight;\n  const distanceToPeek = Math.min(MAX_SCROLL_HINT_DISTANCE, scrollableDistance) - LOW_RES_BUFFER;\n\n  const goBackToTop = () => {\n    requestAnimationFrame(() => {\n      if (elem.scrollTop >= distanceToPeek) {\n        elem.removeEventListener('scroll', goBackToTop);\n        elem.scrollTo({top: 0, behavior: 'smooth'});\n      }\n    });\n  };\n\n  elem.addEventListener('scroll', goBackToTop);\n  elem.scrollTo({top: MAX_SCROLL_HINT_DISTANCE, behavior: 'smooth'});\n}\n\n/**\n * AppProvider and this component both provide the stickyManager, check them if there is problem with injection\n */\nprovide('scrollable', scrollTo);\nprovide('sticky-manager', stickyManager);\n</script>\n"],"names":["_useSlots"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,MAAM,2BAA2B;AACjC,MAAM,iBAAiB;;;;;;;;;;;;;;AAgDvB,UAAM,QAAQ;AAMIA;AAElB,UAAM,QAAQ;AAER,UAAA,YAAY,IAAa,KAAK;AAC9B,UAAA,eAAe,IAAa,KAAK;AACjC,UAAA,aAAa,IAA2B,IAAI;AAElD,UAAM,gBAAgB,IAAI,IAAI,cAAe,CAAA;AAEvC,UAAA,iBAAiB,SAAS,MAAM;AAAA,MACpC,OAAO;AAAA,MACP,MAAM,YAAY,OAAO;AAAA,MACzB,MAAM,cAAc,OAAO;AAAA,MAC3B,MAAM,UAAU,UAAU,SAAS,OAAO;AAAA,MAC1C,MAAM,UAAU,aAAa,SAAS,OAAO;AAAA,MAC7C,MAAM,kBAAkB,OAAO,cAAc,kBAAkB,MAAM,cAAc,CAAC;AAAA,MACpF,MAAM,mBAAmB,OAAQ,cAAc,mBAAmB,MAAM,gBAAgB,QAAQ,KAAK,EAAE,CAAC,CAAC;AAAA,IAAA,CAC1G;AAEK,UAAA,eAAe,CAAC,UAAmB;AACvC,gBAAU,QAAQ;AAAA,IAAA;AAGd,UAAA,kBAAkB,CAAC,UAAmB;AAC1C,mBAAa,QAAQ;AAAA,IAAA;AAGvB,UAAM,WAAW,CAAC,SAAiB,UAA2B,CAAA,MAAO;;AAC7D,YAAA,kBAAkB,QAAQ,YAAY;AACtC,YAAA,WAAW,yBAAyB,SAAS;AAEnD,uBAAW,UAAX,mBAAkB,SAAS,EAAC,KAAK,SAAS;IAAS;AAGrD,UAAM,eAAe,MAAM;AACzB,YAAM,oBAAoB,WAAW;AAErC,UAAI,CAAC,mBAAmB;AACtB;AAAA,MACF;AAEA,4BAAsB,MAAM;AACpB,cAAA;AAAA,UACJ;AAAA,UACA;AAAA,UACA;AAAA,QACE,IAAA;AACE,cAAA,YAAY,QAAQ,eAAe,YAAY;AAC/C,cAAA,qBAAqB,QAAQ,YAAY,CAAC;AAChD,cAAM,qBAAqB,QAAQ,YAAY,gBAAgB,eAAe,cAAc;AAE5F,qBAAa,kBAAkB;AAC/B,wBAAgB,CAAC,kBAAkB;AAEnC,YAAI,aAAa,oBAAoB;AACnC,gBAAM,kBAAkB;AAAA,QAC1B;AAAA,MAAA,CACD;AAAA,IAAA;AAGH,UAAM,eAAe,SAAS,cAAc,IAAI,EAAE,UAAU,MAAM;AAElE,cAAU,MAAM;AACD;AAEb,UAAI,MAAM,MAAM;AACd,8BAAsB,MAAM,kBAAkB,WAAW,KAAK,CAAC;AAAA,MACjE;AAEA,YAAM,oBAAoB,WAAW;AAErC,UAAI,mBAAmB;AACP,sBAAA,MAAM,aAAa,iBAAiB;AAChC,0BAAA,iBAAiB,UAAU,YAAY;AAC9C,mBAAA,iBAAiB,UAAU,YAAY;AAAA,MACpD;AAAA,IAAA,CACD;AAED,oBAAgB,MAAM;AACpB,YAAM,oBAAoB,WAAW;AAErC,UAAI,mBAAmB;AACH,0BAAA,oBAAoB,UAAU,YAAY;AACjD,mBAAA,oBAAoB,UAAU,YAAY;AAAA,MACvD;AAAA,IAAA,CACD;AAED,UAAM,uBAAuB,MAAK;AAC5B,UAAA;AACK,eAAA,OAAO,WAAW,kCAAkC,EAAE;AAAA,eACtD,KAAK;AACL,eAAA;AAAA,MACT;AAAA,IAAA;AAGI,UAAA,oBAAoB,CAAC,SAAiC;AACtD,UAAA,CAAC,QAAQ,wBAAwB;AACnC;AAAA,MACF;AAEM,YAAA,qBAAqB,KAAK,eAAe,KAAK;AACpD,YAAM,iBAAiB,KAAK,IAAI,0BAA0B,kBAAkB,IAAI;AAEhF,YAAM,cAAc,MAAM;AACxB,8BAAsB,MAAM;AACtB,cAAA,KAAK,aAAa,gBAAgB;AAC/B,iBAAA,oBAAoB,UAAU,WAAW;AAC9C,iBAAK,SAAS,EAAC,KAAK,GAAG,UAAU,UAAS;AAAA,UAC5C;AAAA,QAAA,CACD;AAAA,MAAA;AAGE,WAAA,iBAAiB,UAAU,WAAW;AAC3C,WAAK,SAAS,EAAC,KAAK,0BAA0B,UAAU,UAAS;AAAA,IAAA;AAMnE,YAAQ,cAAc,QAAQ;AAC9B,YAAQ,kBAAkB,aAAa;;;;;;;;;;;;;"}