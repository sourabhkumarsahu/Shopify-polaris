import { defineComponent, useSlots, computed, openBlock, createElementBlock, createBlock, unref, withCtx, createElementVNode, toDisplayString, createCommentVNode, renderSlot } from "vue";
import { u as useI18n } from "../../use/useI18n.js";
import { _ as _sfc_main$1 } from "../Text/Text.vue_vue_type_script_setup_true_lang.js";
const _hoisted_1 = ["acceptCharset", "action", "autoComplete", "encType", "method", "name", "noValidate", "target"];
const _hoisted_2 = {
  type: "submit",
  "aria-hidden": "true",
  tabindex: "-1"
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Form",
  props: {
    acceptCharset: {},
    action: {},
    autoComplete: { type: Boolean },
    encType: {},
    implicitSubmit: { type: Boolean, default: true },
    method: { default: "post" },
    name: {},
    noValidate: { type: Boolean },
    preventDefault: { type: Boolean, default: true },
    target: {}
  },
  emits: ["submit"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    useSlots();
    const emits = __emit;
    const i18n = useI18n();
    const autoCompleteInputs = computed(() => {
      if (props.autoComplete == null) {
        return props.autoComplete;
      }
      return props.autoComplete ? "on" : "off";
    });
    const handleSubmit = (e) => {
      if (!props.preventDefault) {
        return;
      }
      e.preventDefault();
      emits("submit", e);
    };
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("form", {
        acceptCharset: _ctx.acceptCharset,
        action: _ctx.action,
        autoComplete: autoCompleteInputs.value,
        encType: _ctx.encType,
        method: _ctx.method,
        name: _ctx.name,
        noValidate: _ctx.noValidate,
        target: _ctx.target,
        onSubmit: handleSubmit
      }, [
        _ctx.implicitSubmit ? (openBlock(), createBlock(unref(_sfc_main$1), {
          key: 0,
          as: "span",
          "visually-hidden": ""
        }, {
          default: withCtx(() => [
            createElementVNode("button", _hoisted_2, toDisplayString(unref(i18n).translate("Polaris.Common.submit")), 1)
          ]),
          _: 1
        })) : createCommentVNode("", true),
        renderSlot(_ctx.$slots, "default")
      ], 40, _hoisted_1);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Form.vue_vue_type_script_setup_true_lang.js.map
