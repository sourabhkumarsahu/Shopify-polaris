import { defineComponent, computed, openBlock, createElementBlock } from "vue";
const _hoisted_1 = ["alt", "src", "crossOrigin", "src-set"];
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Image",
  props: {
    alt: {},
    source: {},
    crossOrigin: {},
    sourceSet: {}
  },
  emits: ["load"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const finalSourceSet = computed(
      () => props.sourceSet ? props.sourceSet.map(({ source: subSource, descriptor }) => `${subSource} ${descriptor}`).join(",") : null
    );
    const handleLoad = () => {
      emits("load");
    };
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("img", {
        alt: _ctx.alt,
        src: _ctx.source,
        crossOrigin: _ctx.crossOrigin,
        "src-set": finalSourceSet.value ? finalSourceSet.value : void 0,
        onLoad: handleLoad
      }, null, 40, _hoisted_1);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Image.vue_vue_type_script_setup_true_lang.js.map
