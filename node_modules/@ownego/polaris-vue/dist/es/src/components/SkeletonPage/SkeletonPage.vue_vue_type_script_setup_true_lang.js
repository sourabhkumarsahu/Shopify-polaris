import { defineComponent, computed, resolveComponent, openBlock, createBlock, withCtx, createVNode, unref, createCommentVNode, createTextVNode, toDisplayString, renderSlot } from "vue";
import { u as useI18n } from "../../use/useI18n.js";
import { _ as _sfc_main$1 } from "../Text/Text.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "SkeletonPage",
  props: {
    title: { default: "" },
    fullWidth: { type: Boolean },
    narrowWidth: { type: Boolean },
    primaryAction: { type: Boolean },
    backAction: { type: Boolean }
  },
  setup(__props) {
    const props = __props;
    const i18n = useI18n();
    const maxWidth = computed(() => {
      if (props.fullWidth) {
        return "none";
      }
      if (props.narrowWidth) {
        return "var(--pc-skeleton-page-max-width-narrow)";
      }
      return "var(--pc-skeleton-page-max-width)";
    });
    return (_ctx, _cache) => {
      const _component_Box = resolveComponent("Box");
      const _component_InlineStack = resolveComponent("InlineStack");
      const _component_BlockStack = resolveComponent("BlockStack");
      return openBlock(), createBlock(_component_BlockStack, {
        gap: 400,
        inlineAlign: "center"
      }, {
        default: withCtx(() => [
          createVNode(_component_Box, {
            width: "100%",
            padding: 0,
            paddingInlineStart: { sm: "600" },
            paddingInlineEnd: { sm: "600" },
            maxWidth: maxWidth.value,
            "aria-label": unref(i18n).translate("Polaris.SkeletonPage.loadingLabel"),
            role: "status"
          }, {
            default: withCtx(() => [
              createVNode(_component_BlockStack, null, {
                default: withCtx(() => [
                  createVNode(_component_Box, {
                    width: "100%",
                    paddingBlockStart: { xs: "400", md: "500" },
                    paddingBlockEnd: { xs: "400", md: "500" },
                    paddingInlineStart: { xs: "400", sm: "0" },
                    paddingInlineEnd: { xs: "400", sm: "0" }
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_InlineStack, {
                        align: "space-between",
                        blockAlign: "center",
                        gap: 400
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_InlineStack, { gap: 400 }, {
                            default: withCtx(() => [
                              _ctx.backAction ? (openBlock(), createBlock(_component_Box, {
                                key: 0,
                                background: "bg-fill-tertiary",
                                minHeight: "2.25rem",
                                minWidth: "2.25rem",
                                maxWidth: "2.25rem",
                                borderRadius: "100"
                              })) : createCommentVNode("", true),
                              createVNode(_component_Box, {
                                paddingBlockStart: 100,
                                paddingBlockEnd: 100
                              }, {
                                default: withCtx(() => [
                                  _ctx.title ? (openBlock(), createBlock(unref(_sfc_main$1), {
                                    key: 0,
                                    as: "h1",
                                    variant: "headingLg",
                                    "font-weight": "bold"
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(_ctx.title), 1)
                                    ]),
                                    _: 1
                                  })) : (openBlock(), createBlock(_component_Box, {
                                    key: 1,
                                    background: "bg-fill-tertiary",
                                    minWidth: "120px",
                                    minHeight: "28px",
                                    borderRadius: "100"
                                  }))
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          }),
                          _ctx.primaryAction ? (openBlock(), createBlock(_component_Box, {
                            key: 0,
                            id: "SkeletonPage-PrimaryAction",
                            background: "bg-fill-tertiary",
                            minHeight: "2.25rem",
                            minWidth: "6.25rem",
                            borderRadius: "100"
                          })) : createCommentVNode("", true)
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  }),
                  createVNode(_component_Box, {
                    paddingBlockEnd: "200",
                    width: "100%"
                  }, {
                    default: withCtx(() => [
                      renderSlot(_ctx.$slots, "default")
                    ]),
                    _: 3
                  })
                ]),
                _: 3
              })
            ]),
            _: 3
          }, 8, ["maxWidth", "aria-label"])
        ]),
        _: 3
      });
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=SkeletonPage.vue_vue_type_script_setup_true_lang.js.map
