{"version":3,"file":"FiltersBar.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/Filters/components/FiltersBar/FiltersBar.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  aria-live=\"polite\",\n  :class=\"filterWrapperClass\",\n)\n  div(:class=\"classNames(styles.FiltersInner)\")\n    div(:class=\"classNames(styles.FiltersStickyArea)\")\n      //- pinnedFiltersMarkup\n      template(v-for=\"filter in pinnedFilters\", :key=\"filter.key\")\n        FilterPill(\n          v-bind=\"filter\",\n          :initial-active=\"hasMounted && !filter.pinned && !appliedFilter(filter.name)\",\n          :label=\"appliedFilter(filter.name)?.label || filter.label\",\n          :filter-key=\"filter.name\",\n          :disabled=\"filter.disabled || disableFilters\",\n          :close-on-child-overlay-click=\"closeOnChildOverlayClick\",\n          :selected=\"appliedFilterKeys?.includes(filter.name)\",\n          :unsaved-changes=\"appliedFilter(filter.name)?.unsavedChanges\",\n          @remove=\"handleFilterPillRemove(filter.name)\",\n        )\n      //- Add Button\n      div(\n        v-if=\"shouldShowAddButton\",\n        :class=\"addButtonClassName\",\n      )\n        Popover(\n          :active=\"popoverActive && !disabled\",\n          @close=\"togglePopoverActive\",\n        )\n          template(#activator)\n            div\n              UnstyledButton(\n                type=\"button\",\n                :class=\"styles.AddFilter\",\n                :aria-label=\"i18n.translate('Polaris.Filters.addFilter')\",\n                :disabled=\"activatorButtonDisabled\",\n                :aria-disabled=\"activatorButtonDisabled\",\n                @click=\"handleAddFilterClick\",\n              )\n                Text(\n                  variant=\"bodySm\",\n                  as=\"span\",\n                  :tone=\"disabled ? 'disabled' : 'base'\",\n                ) {{ i18n.translate('Polaris.Filters.addFilter') }}{{' '}}\n                PlusIcon\n          ActionList(\n            action-role=\"menuitem\",\n            :items=\"unsectionedFilters\",\n            :sections=\"sectionedFilters\",\n          )\n      //- Clear All Markup\n      div(\n        v-if=\"appliedFilters?.length\",\n        :class=\"clearAllClassName\",\n      )\n        Button(\n          size=\"micro\",\n          variant=\"monochromePlain\",\n          @click=\"handleClearAllFilters\",\n        ) {{ i18n.translate('Polaris.Filters.clearFilters') }}\n  Box(\n    v-if=\"hideQueryField\",\n    padding-inline-end=\"300\",\n    padding-block-end=\"200\",\n    padding-block-start=\"200\",\n  )\n    InlineStack(\n      align=\"start\",\n      block-align=\"center\",\n      :gap=\"{ xs: '400', md: '300' }\",\n    )\n      slot\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted, watch } from 'vue';\nimport {\n  Popover,\n  ActionList,\n  Text,\n  UnstyledButton,\n  InlineStack,\n  Box,\n  Button,\n} from '@/components';\nimport FilterPill from '../FilterPill/FilterPill.vue';\nimport { classNames } from '@/utilities/css';\nimport type {\n  ActionListItemDescriptor,\n  AppliedFilterInterface,\n  FilterInterface,\n} from '@/utilities/types';\nimport useI18n from '@/use/useI18n';\nimport PlusIcon from '@icons/PlusIcon.svg';\nimport styles from '@polaris/components/Filters/Filters.module.css';\n\ntype FiltersBarProps = {\n  /** Currently entered text in the query field */\n  queryValue?: string;\n  /** Placeholder text for the query field. */\n  queryPlaceholder?: string;\n  /** Whether the query field is focused. */\n  focused?: boolean;\n  /** Available filters added to the filter bar. Shortcut filters are pinned to the front of the bar. */\n  filters: FilterInterface[];\n  /** Applied filters which are rendered as filter pills. The remove callback is called with the respective key. */\n  appliedFilters?: AppliedFilterInterface[];\n  /** Disable all filters. */\n  disabled?: boolean;\n  /** Hide the query field. */\n  hideQueryField?: boolean;\n  /** Disable the filters */\n  disableFilters?: boolean;\n  /** Whether the filter should close when clicking inside another Popover. */\n  closeOnChildOverlayClick?: boolean;\n};\n\ntype FilterBarEvents = {\n  /** Callback when the reset all button is pressed. */\n  'clear-all': [];\n  /** Callback when the add filter button is clicked. */\n  'add-filter-click': [];\n};\n\nconst props = defineProps<FiltersBarProps>();\nconst emits = defineEmits<FilterBarEvents>();\n\nconst i18n = useI18n();\n\nconst popoverActive = ref(false);\nconst hasMounted = ref(false);\n\nconst togglePopoverActive = () => {\n  popoverActive.value = !popoverActive.value;\n};\n\nconst handleAddFilterClick = () => {\n  emits('add-filter-click');\n  togglePopoverActive();\n};\n\nconst activatorButtonDisabled = computed(() => {\n  return props.disabled || (unsectionedFilters.value.length === 0 && sectionedFilters.value.length === 0) || props.disableFilters;\n});\nconst appliedFilterKeys = computed(() => props.appliedFilters?.map((filter) => filter.name) || []);\nconst pinnedFiltersFromPropsAndAppliedFilters = computed<FilterInterface[]>(() => {\n  return props.filters.filter((filter) => {\n    const isPinnedOrApplied = Boolean(filter.pinned || appliedFilterKeys.value.includes(filter.name));\n\n    return isPinnedOrApplied;\n  });\n});\n\nconst localPinnedFilters = ref<string[]>(\n  pinnedFiltersFromPropsAndAppliedFilters.value.map((filter) => filter.name),\n);\n\nconst pinnedFilters = computed(() => {\n  return localPinnedFilters.value\n    .map((key) => props.filters.find((filter) => filter.name === key))\n    .reduce<FilterInterface[]>(\n      (acc, filter) => (filter ? [...acc, filter] : acc),\n      [],\n    );\n});\n\nconst onFilterClick = (filter: FilterInterface) => {\n  setTimeout(() => {\n    localPinnedFilters.value = [\n      ...new Set([...localPinnedFilters.value, filter.name]),\n    ];\n    filter.onAction?.();\n    togglePopoverActive();\n  }, 0);\n};\n\nconst filterToActionItem = (filter: FilterInterface) => {\n  const serialFilters = {\n    disabled: filter.disabled,\n    suffix: filter.suffix,\n  };\n\n  // Only return props that Action List Item needs\n  return {\n    ...serialFilters,\n    content: filter.label,\n    onAction: () => {\n      onFilterClick(filter);\n    },\n  };\n};\n\n\nconst unpinnedFilters = computed(() => props.filters.filter(\n  (filter) => !pinnedFilters.value.some(({name}) => name === filter.name),\n));\n\nconst unsectionedFilters = computed(() => unpinnedFilters.value\n  .filter((filter) => !filter.section && !filter.hidden)\n  .map(filterToActionItem));\n\nconst sectionedFilters = computed(() => unpinnedFilters.value\n  .filter((filter) => filter.section)\n  .reduce(\n    (acc, filter) => {\n      const filterActionItem = filterToActionItem(filter);\n      const sectionIndex = acc.findIndex(\n        (section) => section.title === filter.section,\n      );\n\n      if (sectionIndex === -1) {\n        acc.push({\n          title: filter.section!,\n          items: [filterActionItem],\n        });\n      } else {\n        acc[sectionIndex].items.push(filterActionItem);\n      }\n\n      return acc;\n    },\n    [] as {\n      title: string;\n      items: ActionListItemDescriptor[];\n    }[],\n  ));\n\nconst hasOneOrMorePinnedFilters = computed(() => pinnedFilters.value.length >= 1);\n\nconst shouldShowAddButton = computed(() => props.filters.some((filter) => !filter.pinned) || props.filters.length !== localPinnedFilters.value.length);\nconst filterWrapperClass = computed(() => classNames(\n  styles.FiltersWrapper,\n  shouldShowAddButton.value &&\n    hasOneOrMorePinnedFilters.value &&\n    styles.FilterWrapperWithAddButton,\n));\nconst addButtonClassName = computed(() => classNames(\n  styles.AddFilterActivator,\n  hasOneOrMorePinnedFilters.value && styles.AddFilterActivatorMultiple,\n));\nconst clearAllClassName = computed(() => classNames(\n  styles.ClearAll,\n  hasOneOrMorePinnedFilters.value &&\n    shouldShowAddButton.value &&\n    styles.MultiplePinnedFilterClearAll,\n));\nconst pinnedFromPropsKeys = computed(() => props.filters\n  .filter(({pinned}) => pinned)\n  .map(({name}) => name));\n\nconst appliedFilter = (filterKey?: string) => {\n  return props.appliedFilters?.find((filter) => filter.name === filterKey);\n};\n\nconst handleFilterPillRemove = (filterKey: string) => {\n  const appliedFiltered = appliedFilter(filterKey);\n  localPinnedFilters.value = localPinnedFilters.value.filter((name) => name !== filterKey);\n   localPinnedFilters.value.filter((name) => {\n    const isMatchedFilters = name === filterKey;\n    const isPinnedFilterFromProps = pinnedFromPropsKeys.value.includes(name);\n    return !isMatchedFilters || isPinnedFilterFromProps;\n  }),\n\n  appliedFiltered?.onRemove(filterKey);\n};\n\nconst handleClearAllFilters = () => {\n  localPinnedFilters.value = [];\n\n  emits('clear-all');\n}\n\nonMounted(() => {\n  hasMounted.value = true;\n});\n\nwatch(\n  () => props.filters.length,\n  () => {\n    localPinnedFilters.value = pinnedFiltersFromPropsAndAppliedFilters.value.map((filter) => filter.name);\n  },\n);\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA,UAAM,QAAQ;AACd,UAAM,QAAQ;AAEd,UAAM,OAAO;AAEP,UAAA,gBAAgB,IAAI,KAAK;AACzB,UAAA,aAAa,IAAI,KAAK;AAE5B,UAAM,sBAAsB,MAAM;AAClB,oBAAA,QAAQ,CAAC,cAAc;AAAA,IAAA;AAGvC,UAAM,uBAAuB,MAAM;AACjC,YAAM,kBAAkB;AACJ;IAAA;AAGhB,UAAA,0BAA0B,SAAS,MAAM;AACtC,aAAA,MAAM,YAAa,mBAAmB,MAAM,WAAW,KAAK,iBAAiB,MAAM,WAAW,KAAM,MAAM;AAAA,IAAA,CAClH;AACD,UAAM,oBAAoB,SAAS,MAAM;;AAAA,0BAAM,mBAAN,mBAAsB,IAAI,CAAC,WAAW,OAAO,UAAS,CAAE;AAAA,KAAA;AAC3F,UAAA,0CAA0C,SAA4B,MAAM;AAChF,aAAO,MAAM,QAAQ,OAAO,CAAC,WAAW;AAChC,cAAA,oBAAoB,QAAQ,OAAO,UAAU,kBAAkB,MAAM,SAAS,OAAO,IAAI,CAAC;AAEzF,eAAA;AAAA,MAAA,CACR;AAAA,IAAA,CACF;AAED,UAAM,qBAAqB;AAAA,MACzB,wCAAwC,MAAM,IAAI,CAAC,WAAW,OAAO,IAAI;AAAA,IAAA;AAGrE,UAAA,gBAAgB,SAAS,MAAM;AACnC,aAAO,mBAAmB,MACvB,IAAI,CAAC,QAAQ,MAAM,QAAQ,KAAK,CAAC,WAAW,OAAO,SAAS,GAAG,CAAC,EAChE;AAAA,QACC,CAAC,KAAK,WAAY,SAAS,CAAC,GAAG,KAAK,MAAM,IAAI;AAAA,QAC9C,CAAC;AAAA,MAAA;AAAA,IACH,CACH;AAEK,UAAA,gBAAgB,CAAC,WAA4B;AACjD,iBAAW,MAAM;;AACf,2BAAmB,QAAQ;AAAA,UACzB,uBAAO,IAAI,CAAC,GAAG,mBAAmB,OAAO,OAAO,IAAI,CAAC;AAAA,QAAA;AAEvD,qBAAO,aAAP;AACoB;SACnB,CAAC;AAAA,IAAA;AAGA,UAAA,qBAAqB,CAAC,WAA4B;AACtD,YAAM,gBAAgB;AAAA,QACpB,UAAU,OAAO;AAAA,QACjB,QAAQ,OAAO;AAAA,MAAA;AAIV,aAAA;AAAA,QACL,GAAG;AAAA,QACH,SAAS,OAAO;AAAA,QAChB,UAAU,MAAM;AACd,wBAAc,MAAM;AAAA,QACtB;AAAA,MAAA;AAAA,IACF;AAIF,UAAM,kBAAkB,SAAS,MAAM,MAAM,QAAQ;AAAA,MACnD,CAAC,WAAW,CAAC,cAAc,MAAM,KAAK,CAAC,EAAC,WAAU,SAAS,OAAO,IAAI;AAAA,IAAA,CACvE;AAED,UAAM,qBAAqB,SAAS,MAAM,gBAAgB,MACvD,OAAO,CAAC,WAAW,CAAC,OAAO,WAAW,CAAC,OAAO,MAAM,EACpD,IAAI,kBAAkB,CAAC;AAEpB,UAAA,mBAAmB,SAAS,MAAM,gBAAgB,MACrD,OAAO,CAAC,WAAW,OAAO,OAAO,EACjC;AAAA,MACC,CAAC,KAAK,WAAW;AACT,cAAA,mBAAmB,mBAAmB,MAAM;AAClD,cAAM,eAAe,IAAI;AAAA,UACvB,CAAC,YAAY,QAAQ,UAAU,OAAO;AAAA,QAAA;AAGxC,YAAI,iBAAiB,IAAI;AACvB,cAAI,KAAK;AAAA,YACP,OAAO,OAAO;AAAA,YACd,OAAO,CAAC,gBAAgB;AAAA,UAAA,CACzB;AAAA,QAAA,OACI;AACL,cAAI,YAAY,EAAE,MAAM,KAAK,gBAAgB;AAAA,QAC/C;AAEO,eAAA;AAAA,MACT;AAAA,MACA,CAAC;AAAA,IAAA,CAIF;AAEH,UAAM,4BAA4B,SAAS,MAAM,cAAc,MAAM,UAAU,CAAC;AAEhF,UAAM,sBAAsB,SAAS,MAAM,MAAM,QAAQ,KAAK,CAAC,WAAW,CAAC,OAAO,MAAM,KAAK,MAAM,QAAQ,WAAW,mBAAmB,MAAM,MAAM;AAC/I,UAAA,qBAAqB,SAAS,MAAM;AAAA,MACxC,OAAO;AAAA,MACP,oBAAoB,SAClB,0BAA0B,SAC1B,OAAO;AAAA,IAAA,CACV;AACK,UAAA,qBAAqB,SAAS,MAAM;AAAA,MACxC,OAAO;AAAA,MACP,0BAA0B,SAAS,OAAO;AAAA,IAAA,CAC3C;AACK,UAAA,oBAAoB,SAAS,MAAM;AAAA,MACvC,OAAO;AAAA,MACP,0BAA0B,SACxB,oBAAoB,SACpB,OAAO;AAAA,IAAA,CACV;AACD,UAAM,sBAAsB,SAAS,MAAM,MAAM,QAC9C,OAAO,CAAC,EAAC,OAAY,MAAA,MAAM,EAC3B,IAAI,CAAC,EAAC,KAAI,MAAM,IAAI,CAAC;AAElB,UAAA,gBAAgB,CAAC,cAAuB;;AAC5C,cAAO,WAAM,mBAAN,mBAAsB,KAAK,CAAC,WAAW,OAAO,SAAS;AAAA,IAAS;AAGnE,UAAA,yBAAyB,CAAC,cAAsB;AAC9C,YAAA,kBAAkB,cAAc,SAAS;AAC/C,yBAAmB,QAAQ,mBAAmB,MAAM,OAAO,CAAC,SAAS,SAAS,SAAS;AACnE,yBAAA,MAAM,OAAO,CAAC,SAAS;AACzC,cAAM,mBAAmB,SAAS;AAClC,cAAM,0BAA0B,oBAAoB,MAAM,SAAS,IAAI;AACvE,eAAO,CAAC,oBAAoB;AAAA,MAC7B,CAAA,GAED,mDAAiB,SAAS;AAAA,IAAS;AAGrC,UAAM,wBAAwB,MAAM;AAClC,yBAAmB,QAAQ;AAE3B,YAAM,WAAW;AAAA,IAAA;AAGnB,cAAU,MAAM;AACd,iBAAW,QAAQ;AAAA,IAAA,CACpB;AAED;AAAA,MACE,MAAM,MAAM,QAAQ;AAAA,MACpB,MAAM;AACJ,2BAAmB,QAAQ,wCAAwC,MAAM,IAAI,CAAC,WAAW,OAAO,IAAI;AAAA,MACtG;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}