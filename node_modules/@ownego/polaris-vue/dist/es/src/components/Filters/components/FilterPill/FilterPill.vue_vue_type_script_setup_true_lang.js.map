{"version":3,"file":"FilterPill.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/Filters/components/FilterPill/FilterPill.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  v-if=\"!disabled\",\n  ref=\"elementRef\"\n)\n  Popover(\n    :active=\"popoverActive\",\n    :key=\"filterKey\",\n    :z-index-override=\"disclosureZIndexOverride\",\n    :prevent-close-on-child-overlay-click=\"!closeOnChildOverlayClick\",\n    preferred-alignment=\"left\",\n    @close=\"handlePopoverClose\",\n  )\n    //- Activator\n    template(#activator)\n      div(:class=\"buttonClasses\")\n        InlineStack(gap=\"0\", :wrap=\"false\")\n          UnstyledButton(\n            type=\"button\",\n            :class=\"toggleButtonClassNames\",\n            :accessibilityLabel=\"unsavedChanges ? i18n.translate('Polaris.FilterPill.unsavedChanges', {label}) : label\",\n            @click=\"togglePopoverActive\",\n            @focus=\"setFocusedTrue\",\n            @blur=\"setFocusedFalse\",\n          )\n            InlineStack(\n              align=\"center\",\n              block-align=\"center\",\n              gap=\"0\",\n              :wrap=\"false\",\n            )\n              Box(\n                v-if=\"unsavedChanges\",\n                padding-inline-end=\"150\",\n              )\n                Box(\n                  background=\"bg-fill-emphasis\",\n                  border-radius=\"050\",\n                  width=\"6px\",\n                  min-height=\"6px\",\n                )\n              Box(:padding-inline-start=\"unsavedChanges ? '0' : '050'\")\n                InlineStack\n                  Text(\n                    as=\"span\",\n                    variant=\"bodySm\",\n                  ) {{ label }}\n              div(\n                v-if=\"!selected\"\n                :class=\"styles.IconWrapper\",\n              )\n                Icon(\n                  :source=\"ChevronDownIcon\",\n                  tone=\"base\"\n                )\n          UnstyledButton(\n            v-if=\"selected\",\n            type=\"button\",\n            :className=\"clearButtonClassNames\",\n            :aria-label=\"i18n.translate('Polaris.FilterPill.clear')\",\n            @click=\"handleClear\",\n          )\n            div(:class=\"styles.IconWrapper\")\n              Icon(\n                :source=\"XSmallIcon\",\n                tone=\"base\"\n              )\n    //- Content\n    div(:class=\"styles.PopoverWrapper\")\n      PopoverSection\n        BlockStack(gap=\"100\")\n          //-Filter\n          component(:is=\"filter\")\n          //-ClearButtonMarkup\n          div(\n            v-if=\"!hideClearButton\",\n            :class=\"styles.ClearButtonWrapper\"\n          )\n            Button(\n              variant=\"plain\",\n              :disabled=\"!selected\",\n              textAlign=\"left\",\n              @click=\"handleClear\",\n            ) {{ i18n.translate('Polaris.FilterPill.clear') }}\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, watch, onMounted } from 'vue';\nimport {\n  Popover,\n  PopoverSection,\n  BlockStack,\n  Button,\n  Icon,\n  Text,\n  InlineStack,\n  UnstyledButton,\n  Box,\n} from '@/components';\nimport { classNames } from '@/utilities/css';\nimport type { FilterInterface } from '@/utilities/types';\nimport useI18n from '@/use/useI18n';\nimport { useToggle } from '@/use/useToggle';\nimport ChevronDownIcon from '@icons/ChevronDownIcon.svg';\nimport XSmallIcon from '@icons/XSmallIcon.svg';\nimport styles from '@polaris/components/Filters/components/FilterPill/FilterPill.module.css';\n\ninterface FilterPillProps extends FilterInterface {\n  /** A unique identifier for the filter */\n  filterKey: string;\n  /** Whether the filter is selected or not */\n  selected?: boolean;\n  /** Whether the Popover will be initially open or not */\n  initialActive: boolean;\n  /** Whether filtering is disabled */\n  disabled?: boolean;\n  /** Whether the filter should close when clicking inside another Popover. */\n  closeOnChildOverlayClick?: boolean;\n  /** Whether the filter is newly applied or updated and hasn't been saved */\n  unsavedChanges?: boolean;\n   /** Override z-index of popovers and tooltips */\n  disclosureZIndexOverride?: number;\n}\n\ntype FilterPillEvents = {\n  /** Callback invoked when the filter is clicked */\n  'click': [name: string];\n  /** Callback invoked when the filter is removed */\n  'remove': [name: string];\n};\n\nconst props = withDefaults(defineProps<FilterPillProps>(), {\n  unsavedChanges: false,\n});\nconst emits = defineEmits<FilterPillEvents>();\n\nconst i18n = useI18n();\nconst {\n  value: focused,\n  setTrue: setFocusedTrue,\n  setFalse: setFocusedFalse,\n} = useToggle(false);\n\nconst popoverActive = ref(props.initialActive);\nconst elementRef = ref<HTMLElement | null>(null);\n\nconst buttonClasses = computed(() => classNames(\n  styles.FilterButton,\n  props.selected && styles.ActiveFilterButton,\n  popoverActive.value && styles.FocusFilterButton,\n  focused.value && styles.FocusFilterButton,\n));\n\nconst clearButtonClassNames = computed(() => classNames(\n  styles.PlainButton,\n  styles.clearButton,\n));\n\nconst toggleButtonClassNames = computed(() => classNames(\n  styles.PlainButton,\n  styles.ToggleButton,\n));\n\nconst togglePopoverActive = () => {\n  if (props.filter) {\n    popoverActive.value = !popoverActive.value;\n  }\n\n  emits('click', props.filterKey);\n};\n\nconst handlePopoverClose = () => {\n  togglePopoverActive();\n  if (!props.selected) {\n    emits('remove', props.filterKey);\n  }\n};\n\nconst handleClear = () => {\n  emits('remove', props.filterKey);\n\n  popoverActive.value = false;\n};\n\nconst handleScroll = () => {\n  const node = elementRef.value;\n\n  if (!node || !popoverActive.value) {\n    return;\n  }\n\n  const parent = node.parentElement?.parentElement;\n\n  if (!parent) {\n    return;\n  }\n\n  parent.scroll?.({\n    left: node.offsetLeft,\n  });\n};\n\nonMounted(() => {\n  handleScroll();\n});\n\nwatch(\n  () => popoverActive.value,\n  () => {\n    handleScroll();\n  },\n);\n</script>\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA,UAAM,QAAQ;AAGd,UAAM,QAAQ;AAEd,UAAM,OAAO;AACP,UAAA;AAAA,MACJ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,UAAU;AAAA,IAAA,IACR,UAAU,KAAK;AAEb,UAAA,gBAAgB,IAAI,MAAM,aAAa;AACvC,UAAA,aAAa,IAAwB,IAAI;AAEzC,UAAA,gBAAgB,SAAS,MAAM;AAAA,MACnC,OAAO;AAAA,MACP,MAAM,YAAY,OAAO;AAAA,MACzB,cAAc,SAAS,OAAO;AAAA,MAC9B,QAAQ,SAAS,OAAO;AAAA,IAAA,CACzB;AAEK,UAAA,wBAAwB,SAAS,MAAM;AAAA,MAC3C,OAAO;AAAA,MACP,OAAO;AAAA,IAAA,CACR;AAEK,UAAA,yBAAyB,SAAS,MAAM;AAAA,MAC5C,OAAO;AAAA,MACP,OAAO;AAAA,IAAA,CACR;AAED,UAAM,sBAAsB,MAAM;AAChC,UAAI,MAAM,QAAQ;AACF,sBAAA,QAAQ,CAAC,cAAc;AAAA,MACvC;AAEM,YAAA,SAAS,MAAM,SAAS;AAAA,IAAA;AAGhC,UAAM,qBAAqB,MAAM;AACX;AAChB,UAAA,CAAC,MAAM,UAAU;AACb,cAAA,UAAU,MAAM,SAAS;AAAA,MACjC;AAAA,IAAA;AAGF,UAAM,cAAc,MAAM;AAClB,YAAA,UAAU,MAAM,SAAS;AAE/B,oBAAc,QAAQ;AAAA,IAAA;AAGxB,UAAM,eAAe,MAAM;;AACzB,YAAM,OAAO,WAAW;AAExB,UAAI,CAAC,QAAQ,CAAC,cAAc,OAAO;AACjC;AAAA,MACF;AAEM,YAAA,UAAS,UAAK,kBAAL,mBAAoB;AAEnC,UAAI,CAAC,QAAQ;AACX;AAAA,MACF;AAEA,mBAAO,WAAP,gCAAgB;AAAA,QACd,MAAM,KAAK;AAAA,MAAA;AAAA,IACZ;AAGH,cAAU,MAAM;AACD;IAAA,CACd;AAED;AAAA,MACE,MAAM,cAAc;AAAA,MACpB,MAAM;AACS;MACf;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}