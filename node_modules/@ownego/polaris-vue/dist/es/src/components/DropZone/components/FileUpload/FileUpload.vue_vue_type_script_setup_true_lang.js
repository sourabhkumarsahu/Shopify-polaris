import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, createBlock, withCtx, createVNode, createTextVNode, toDisplayString, createCommentVNode } from "vue";
import { c as capitalize } from "../../../../../polaris/polaris-react/src/utilities/capitalize.js";
import { c as classNames } from "../../../../utilities/css.js";
import { u as useI18n } from "../../../../use/useI18n.js";
import { _ as _sfc_main$1 } from "../../../BlockStack/BlockStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../../../Button/Button.vue_vue_type_script_setup_true_lang.js";
import { c as createAllowMultipleKey } from "../../utils.js";
import { U as UploadIcon$1 } from "../../../../../vendor.js";
import { u as useDropZoneContext } from "../../useDropZoneContext.js";
import { _ as _sfc_main$4 } from "../../../Icon/Icon.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../../../Text/Text.vue_vue_type_script_setup_true_lang.js";
const FileUpload = "Polaris-DropZone-FileUpload";
const large = "Polaris-DropZone-FileUpload--large";
const small = "Polaris-DropZone-FileUpload--small";
const ActionTitle = "Polaris-DropZone-FileUpload__ActionTitle";
const UploadIcon = "Polaris-DropZone-FileUpload__UploadIcon";
const disabled = "Polaris-DropZone-FileUpload--disabled";
const styles = {
  FileUpload,
  large,
  small,
  ActionTitle,
  "ActionTitle-disabled": "Polaris-DropZone-FileUpload__ActionTitle--disabled",
  "ActionTitle-focused": "Polaris-DropZone-FileUpload__ActionTitle--focused",
  UploadIcon,
  disabled
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "FileUpload",
  props: {
    actionTitle: {},
    actionHint: {}
  },
  setup(__props) {
    const i18n = useI18n();
    const { size, measuring, type, disabled: disabled2, allowMultiple } = useDropZoneContext();
    const typeSuffix = capitalize(type.value);
    const allowMultipleKey = createAllowMultipleKey(allowMultiple.value);
    const props = __props;
    const actionTitleValue = computed(() => props.actionTitle || i18n.translate(`Polaris.DropZone.${allowMultipleKey}.actionTitle${typeSuffix}`));
    const fileUploadClassName = computed(() => classNames(
      styles.FileUpload,
      measuring.value && styles.measuring,
      size.value === "large" && styles.large,
      size.value === "small" && styles.small
    ));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(fileUploadClassName.value)
      }, [
        unref(size) === "large" || unref(size) === "medium" ? (openBlock(), createBlock(unref(_sfc_main$1), {
          key: 0,
          "inline-align": "center",
          gap: "200"
        }, {
          default: withCtx(() => [
            createVNode(unref(_sfc_main$2), { diabled: unref(disabled2) }, {
              default: withCtx(() => [
                createTextVNode(toDisplayString(actionTitleValue.value), 1)
              ]),
              _: 1
            }, 8, ["diabled"]),
            _ctx.actionHint ? (openBlock(), createBlock(unref(_sfc_main$3), {
              key: 0,
              variant: "bodySm",
              as: "p",
              tone: "subdued"
            }, {
              default: withCtx(() => [
                createTextVNode(toDisplayString(_ctx.actionHint), 1)
              ]),
              _: 1
            })) : createCommentVNode("", true)
          ]),
          _: 1
        })) : (openBlock(), createElementBlock("div", {
          key: 1,
          class: normalizeClass(unref(classNames)(unref(styles).UploadIcon, unref(disabled2) && unref(styles).disabled))
        }, [
          createVNode(unref(_sfc_main$4), { source: unref(UploadIcon$1) }, null, 8, ["source"])
        ], 2))
      ], 2);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=FileUpload.vue_vue_type_script_setup_true_lang.js.map
