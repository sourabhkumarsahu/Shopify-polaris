{"version":3,"file":"useDropZoneContext.js","sources":["../../../../../src/components/DropZone/useDropZoneContext.ts"],"sourcesContent":["import { inject, toRefs, toRef, type Ref, reactive } from 'vue';\nimport { defaultAllowMultiple } from './utils';\n\nexport interface DropZoneContextType {\n  disabled: boolean;\n  focused: Ref<boolean>;\n  measuring: Ref<boolean>;\n  allowMultiple: boolean;\n  size: Ref<string>;\n  type: string;\n}\n\nexport const DropZoneContext = reactive<DropZoneContextType>({\n  disabled: false,\n  focused: toRef(false),\n  size: toRef('extraLarge'),\n  type: 'file',\n  measuring: toRef(false),\n  allowMultiple: defaultAllowMultiple,\n});\n\nexport function useDropZoneContext() {\n  const context = inject('dropZoneContext', DropZoneContext);\n  return toRefs(context);\n}\n"],"names":[],"mappings":";;AAYO,MAAM,kBAAkB,SAA8B;AAAA,EAC3D,UAAU;AAAA,EACV,SAAS,MAAM,KAAK;AAAA,EACpB,MAAM,MAAM,YAAY;AAAA,EACxB,MAAM;AAAA,EACN,WAAW,MAAM,KAAK;AAAA,EACtB,eAAe;AACjB,CAAC;AAEM,SAAS,qBAAqB;AAC7B,QAAA,UAAU,OAAO,mBAAmB,eAAe;AACzD,SAAO,OAAO,OAAO;AACvB;"}