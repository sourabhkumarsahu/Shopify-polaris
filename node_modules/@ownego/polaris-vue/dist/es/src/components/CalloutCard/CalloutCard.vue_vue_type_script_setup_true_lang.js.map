{"version":3,"file":"CalloutCard.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/CalloutCard/CalloutCard.vue"],"sourcesContent":["<template lang=\"pug\">\nLegacyCard\n  div(:class=\"containerClassName\")\n    div(:class=\"styles.Dismiss\")\n      Button(\n        v-if=\"hasDismiss\",\n        variant=\"plain\",\n        accessibilityLabel=\"Dismiss card\",\n        :icon=\"XSmallIcon\",\n        @click=\"emits('dismiss')\",\n      )\n    LegacyCardSection\n      div(:class=\"styles.CalloutCard\")\n        div(:class=\"styles.Content\")\n          div(:class=\"styles.Title\")\n            Text(variant=\"headingMd\", as=\"h2\")\n              slot(v-if=\"hasSlot(slots.title)\", name=\"title\")\n              template(v-else) {{ title }}\n          BlockStack\n            slot\n          div(:class=\"styles.Buttons\")\n            ButtonGroup(v-if=\"secondaryAction\")\n              ButtonFrom(:action=\"primaryAction\")\n              ButtonFrom(\n                v-if=\"secondaryAction\",\n                :action=\"secondaryAction\",\n                :overrides=\"{ variant: secondaryAction.variant ?? 'tertiary' }\")\n            ButtonFrom(\n              v-else,\n              :action=\"primaryAction\",\n            )\n        Image(\n          alt=\"\",\n          :className=\"imageClassName\",\n          :source=\"illustration\"\n        )\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, getCurrentInstance, useSlots } from 'vue';\nimport type { VueNode, IconableAction } from '@/utilities/types';\nimport {\n  LegacyCard,\n  Button,\n  LegacyCardSection,\n  BlockStack,\n  ButtonGroup,\n  ButtonFrom,\n  Image,\n  Text,\n} from '@/components';\nimport { classNames } from '@/utilities/css';\nimport { useHasSlot } from '@/use/useHasSlot';\nimport type { ButtonProps } from '@/components/Button/types';\nimport XSmallIcon from '@icons/XSmallIcon.svg';\nimport styles from '@polaris/components/CalloutCard/CalloutCard.module.css';\n\nexport interface CalloutCardProps {\n  /** The title of the card */\n  title?: string;\n  /** URL to the card illustration */\n  illustration: string;\n  /** Primary action for the card */\n  primaryAction: IconableAction;\n  /** Secondary action for the card */\n  secondaryAction?: IconableAction & Pick<ButtonProps, 'variant'>;\n}\n\nexport type CalloutCardEvents = {\n  /** Callback when banner is dismissed */\n  'dismiss': [];\n}\n\ndefineProps<CalloutCardProps>();\n\ndefineSlots<{\n  /** The content to display inside the button */\n  default: (_: VueNode) => any;\n  /** The title of the card */\n  title: (_: VueNode) => any;\n}>();\n\nconst emits = defineEmits<CalloutCardEvents>();\n\nconst currentInstance = getCurrentInstance();\n\nconst slots = useSlots();\nconst { hasSlot } = useHasSlot();\n\nconst imageClassName = computed(() =>\n  classNames(\n    styles.Image,\n    hasDismiss.value && styles.DismissImage,\n  ),\n);\n\nconst containerClassName = computed(() =>\n  classNames(\n    styles.Container,\n    hasDismiss.value && styles.hasDismiss,\n  ),\n);\n\nconst hasDismiss = computed(() => currentInstance?.vnode.props?.onDismiss);\n</script>\n"],"names":["hasDismiss"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,UAAM,QAAQ;AAEd,UAAM,kBAAkB;AAExB,UAAM,QAAQ;AACR,UAAA,EAAE,YAAY;AAEpB,UAAM,iBAAiB;AAAA,MAAS,MAC9B;AAAA,QACE,OAAO;AAAA,QACPA,YAAW,SAAS,OAAO;AAAA,MAC7B;AAAA,IAAA;AAGF,UAAM,qBAAqB;AAAA,MAAS,MAClC;AAAA,QACE,OAAO;AAAA,QACPA,YAAW,SAAS,OAAO;AAAA,MAC7B;AAAA,IAAA;AAGF,UAAMA,cAAa,SAAS,MAAM;;AAAA,sEAAiB,MAAM,UAAvB,mBAA8B;AAAA,KAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}