import { defineComponent, getCurrentInstance, useSlots, computed, openBlock, createBlock, unref, withCtx, createElementVNode, normalizeClass, createCommentVNode, createVNode, renderSlot, createElementBlock, Fragment, createTextVNode, toDisplayString } from "vue";
import { u as useHasSlot } from "../../use/useHasSlot.js";
import { c as classNames } from "../../utilities/css.js";
import { _ as _sfc_main$5 } from "../BlockStack/BlockStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../Button/Button.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$7 } from "../Button/ButtonFrom.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$6 } from "../ButtonGroup/ButtonGroup.vue_vue_type_script_setup_true_lang.js";
import { h as XSmallIcon } from "../../../vendor.js";
import { _ as _sfc_main$8 } from "../Image/Image.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../LegacyCard/LegacyCard.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../LegacyCard/components/Section/Section.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$4 } from "../Text/Text.vue_vue_type_script_setup_true_lang.js";
const CalloutCard = "Polaris-CalloutCard";
const Image = "Polaris-CalloutCard__Image";
const DismissImage = "Polaris-CalloutCard__DismissImage";
const Content = "Polaris-CalloutCard__Content";
const Title = "Polaris-CalloutCard__Title";
const Buttons = "Polaris-CalloutCard__Buttons";
const Container = "Polaris-CalloutCard__Container";
const Dismiss = "Polaris-CalloutCard__Dismiss";
const hasDismiss = "Polaris-CalloutCard--hasDismiss";
const styles = {
  CalloutCard,
  Image,
  DismissImage,
  Content,
  Title,
  Buttons,
  Container,
  Dismiss,
  hasDismiss
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "CalloutCard",
  props: {
    title: {},
    illustration: {},
    primaryAction: {},
    secondaryAction: {}
  },
  emits: ["dismiss"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    const currentInstance = getCurrentInstance();
    const slots = useSlots();
    const { hasSlot } = useHasSlot();
    const imageClassName = computed(
      () => classNames(
        styles.Image,
        hasDismiss2.value && styles.DismissImage
      )
    );
    const containerClassName = computed(
      () => classNames(
        styles.Container,
        hasDismiss2.value && styles.hasDismiss
      )
    );
    const hasDismiss2 = computed(() => {
      var _a;
      return (_a = currentInstance == null ? void 0 : currentInstance.vnode.props) == null ? void 0 : _a.onDismiss;
    });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), null, {
        default: withCtx(() => [
          createElementVNode("div", {
            class: normalizeClass(containerClassName.value)
          }, [
            createElementVNode("div", {
              class: normalizeClass(unref(styles).Dismiss)
            }, [
              hasDismiss2.value ? (openBlock(), createBlock(unref(_sfc_main$2), {
                key: 0,
                variant: "plain",
                accessibilityLabel: "Dismiss card",
                icon: unref(XSmallIcon),
                onClick: _cache[0] || (_cache[0] = ($event) => emits("dismiss"))
              }, null, 8, ["icon"])) : createCommentVNode("", true)
            ], 2),
            createVNode(unref(_sfc_main$3), null, {
              default: withCtx(() => [
                createElementVNode("div", {
                  class: normalizeClass(unref(styles).CalloutCard)
                }, [
                  createElementVNode("div", {
                    class: normalizeClass(unref(styles).Content)
                  }, [
                    createElementVNode("div", {
                      class: normalizeClass(unref(styles).Title)
                    }, [
                      createVNode(unref(_sfc_main$4), {
                        variant: "headingMd",
                        as: "h2"
                      }, {
                        default: withCtx(() => [
                          unref(hasSlot)(unref(slots).title) ? renderSlot(_ctx.$slots, "title", { key: 0 }) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                            createTextVNode(toDisplayString(_ctx.title), 1)
                          ], 64))
                        ]),
                        _: 3
                      })
                    ], 2),
                    createVNode(unref(_sfc_main$5), null, {
                      default: withCtx(() => [
                        renderSlot(_ctx.$slots, "default")
                      ]),
                      _: 3
                    }),
                    createElementVNode("div", {
                      class: normalizeClass(unref(styles).Buttons)
                    }, [
                      _ctx.secondaryAction ? (openBlock(), createBlock(unref(_sfc_main$6), { key: 0 }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$7), { action: _ctx.primaryAction }, null, 8, ["action"]),
                          _ctx.secondaryAction ? (openBlock(), createBlock(unref(_sfc_main$7), {
                            key: 0,
                            action: _ctx.secondaryAction,
                            overrides: { variant: _ctx.secondaryAction.variant ?? "tertiary" }
                          }, null, 8, ["action", "overrides"])) : createCommentVNode("", true)
                        ]),
                        _: 1
                      })) : (openBlock(), createBlock(unref(_sfc_main$7), {
                        key: 1,
                        action: _ctx.primaryAction
                      }, null, 8, ["action"]))
                    ], 2)
                  ], 2),
                  createVNode(unref(_sfc_main$8), {
                    alt: "",
                    className: imageClassName.value,
                    source: _ctx.illustration
                  }, null, 8, ["className", "source"])
                ], 2)
              ]),
              _: 3
            })
          ], 2)
        ]),
        _: 3
      });
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=CalloutCard.vue_vue_type_script_setup_true_lang.js.map
