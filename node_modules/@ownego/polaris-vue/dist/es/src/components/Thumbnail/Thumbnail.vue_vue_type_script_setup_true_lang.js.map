{"version":3,"file":"Thumbnail.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Thumbnail/Thumbnail.vue"],"sourcesContent":["<template lang=\"pug\">\nspan(:class=\"className\")\n  Image(\n    v-if=\"typeof source === 'string'\",\n    :alt=\"alt\",\n    :source=\"source\",\n  )\n  Icon(\n    v-else,\n    :accessibilityLabel=\"alt\",\n    :source=\"source\",\n  )\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { Image, Icon } from '@/components';\nimport { classNames, variationName } from '@/utilities/css';\nimport { type IconSource } from '@/utilities/types';\nimport styles from '@polaris/components/Thumbnail/Thumbnail.module.css';\nimport type { Source } from '../Icon/type';\n\ntype Size = 'extraSmall' | 'small' | 'medium' | 'large';\n\nexport interface ThumbnailProps {\n  /**\n   * Size of thumbnail\n   * @default 'medium'\n   */\n  size?: Size;\n  /** URL for the image */\n    source: string | Source | IconSource;\n  /** Alt text for the thumbnail image */\n  alt: string;\n  /** Transparent background */\n  transparent?: boolean;\n}\n\nconst props = withDefaults(defineProps<ThumbnailProps>(), {\n  size: 'medium',\n});\n\nconst className = computed(() =>\n  classNames(\n    styles.Thumbnail,\n    props.size && styles[variationName('size', props.size)],\n    props.transparent && styles.transparent,\n  ),\n);\n\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,UAAM,QAAQ;AAId,UAAM,YAAY;AAAA,MAAS,MACzB;AAAA,QACE,OAAO;AAAA,QACP,MAAM,QAAQ,OAAO,cAAc,QAAQ,MAAM,IAAI,CAAC;AAAA,QACtD,MAAM,eAAe,OAAO;AAAA,MAC9B;AAAA,IAAA;;;;;;;;;;;;;;;;;;"}