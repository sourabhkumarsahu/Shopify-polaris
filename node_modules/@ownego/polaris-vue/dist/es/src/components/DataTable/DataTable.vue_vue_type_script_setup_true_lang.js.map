{"version":3,"file":"DataTable.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/DataTable/DataTable.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  ref=\"dataTable\",\n  :class=\"wrapperClassName\",\n)\n  //- stickyHeaderMarkup\n  div(\n    v-if=\"stickyHeader && isMounted\",\n    role=\"presentation\",\n    :class=\"styles.StickyHeaderWrapper\",\n  )\n    Sticky(\n      :bounding-element=\"dataTable\",\n      @sticky-change=\"stickyHandler\",\n    )\n      div(:class=\"stickyHeaderInnerClassNames\")\n        div\n          component(v-if=\"!hideScrollIndicator\", :is=\"navigationMarkup('sticky')\")\n        table(\n          ref=\"stickyTable\",\n          :class=\"stickyHeaderTableClassNames\",\n        )\n          thead\n            tr(:class=\"styles.StickyTableHeadingsRow\")\n              //- Render headings\n              template(\n                v-for=\"(heading, headingIndex) in headings\",\n                :key=\"headingIndex\",\n              )\n                component(\n                  :is=\"renderHeading({heading, headingIndex, inFixedNthColumn: Boolean(fixedFirstColumns && headingIndex <= fixedFirstColumns - 1), inStickyHeader: true})\",\n                )\n\n  //- navigationMarkup('header')\n  component(v-if=\"!hideScrollIndicator\", :is=\"navigationMarkup('header')\")\n\n  div(:class=\"className\")\n    div(\n      ref=\"scrollContainer\",\n      :class=\"styles.ScrollContainer\",\n    )\n      EventListener(event=\"resize\", :handler=\"handleResize\")\n      EventListener(\n        event=\"scroll\",\n        capture,\n        passive,\n        :handler=\"scrollListener\",\n      )\n      //- fixedNthColumnMarkup\n      table(\n        :class=\"fixedFirstColumnClassName\",\n        :style=\"{width: `${columnVisibilityData[fixedFirstColumns - 1]?.rightEdge}px`}\",\n      )\n        thead\n          tr(:style=\"{height: `${headerRowHeights[0]}px`}\")\n            //- Render headings\n            template(v-for=\"(heading, headingIndex) in nthHeadings\", :key=\"headingIndex\")\n              component(\n                :is=\"renderHeading({heading, headingIndex, inFixedNthColumn: true, inStickyHeader: false})\",\n              )\n          tr(\n            v-if=\"totals && !showTotalsInFooter\",\n            :style=\"{height: `${headerRowHeights[1]}px`}\"\n          )\n            //- Render totals\n            component(\n              v-for=\"(total, index) in nthTotals\", :key=\"index\",\n              :is=\"renderTotals({total, index})\",\n            )\n        tbody\n          //- Render rows\n          component(\n            v-for=\"row, index in nthColumns\",\n            :is=\"defaultRenderRow({row, index, inFixedNthColumn: true, rowHeights: bodyRowHeights})\",\n          )\n        tfoot(v-if=\"totals && showTotalsInFooter\")\n          tr\n            component(\n              v-for=\"(total, index) in nthTotals\",\n              :is=\"renderTotals({total, index})\",\n            )\n\n      table(ref=\"table\", :class=\"styles.Table\")\n        thead\n          //- headingMarkup\n          tr\n            component(\n              v-for=\"(heading, headingIndex) in headings\",\n              :is=\"renderHeading({heading, headingIndex, inFixedNthColumn: false, inStickyHeader: false})\",\n            )\n          //- headerTotalsMarkup\n          tr(v-if=\"!showTotalsInFooter && totals\")\n            component(\n              v-for=\"(total, index) in totals\",\n              :is=\"renderTotals({total, index})\",\n            )\n        tbody\n          //- bodyMarkup\n          component(\n            v-for=\"row, index in rows\",\n            :is=\"defaultRenderRow({row, index, inFixedNthColumn: false})\",\n          )\n        //- footerTotalsMarkup\n        tfoot(v-if=\"showTotalsInFooter\")\n          tr(v-if=\"totals\")\n            component(\n              v-for=\"(total, index) in totals\",\n              :is=\"renderTotals({total, index})\",\n            )\n\n    //- paginationMarkup\n    Pagination(\n      v-if=\"pagination\",\n      type=\"table\",\n      v-bind=\"pagination\",\n    )\n\n    //- footerMarkup\n    div(\n      v-if=\"footerContent\",\n      :class=\"styles.Footer\",\n    )\n      template(v-if=\"(typeof footerContent === 'string') || (typeof footerContent === 'number')\")\n        | {{ footerContent }}\n      component(v-else, :is=\"footerContent\")\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  ref,\n  computed,\n  onMounted,\n  onBeforeUnmount,\n  toRaw,\n  h,\n} from 'vue';\nimport { debounce } from '@polaris/utilities/debounce';\nimport { classNames } from '@/utilities/css';\nimport type { VueNode } from '@/utilities/types';\nimport useI18n from '@/use/useI18n';\nimport { headerCell } from '@polaris/components/shared';\nimport {\n  EventListener,\n  Sticky,\n  Pagination,\n} from '@/components';\nimport {\n  measureColumn,\n  getPrevAndCurrentColumns,\n} from '@polaris/components/DataTable/utilities';\n\nimport { Cell, Navigation } from './components';\nimport type {\n  DataTableProps,\n  SortDirection,\n  ColumnVisibilityData,\n  DataTableEvents,\n  TableData,\n} from './types';\nimport styles from '@polaris/components/DataTable/DataTable.module.css';\n\nconst props = withDefaults(defineProps<DataTableProps>(), {\n  hideScrollIndicator: false,\n  increasedTableDensity: false,\n  hasZebraStripingOnData: false,\n  stickyHeader: false,\n  fixedFirstColumn: false,\n  hoverable: true,\n  initialSortColumnIndex: 0,\n});\nconst emits = defineEmits<DataTableEvents>();\n\nconst i18n = useI18n();\n\n// DataTableState\nconst isMounted = ref(false);\nconst condensed = ref(false);\nconst columnVisibilityData = ref<ColumnVisibilityData[]>([]);\nconst previousColumn = ref<ColumnVisibilityData | undefined>(undefined);\nconst currentColumn = ref<ColumnVisibilityData | undefined>(undefined);\nconst sortedColumnIndex = ref<number | undefined>(undefined);\nconst sortDirection = ref<SortDirection | undefined>(undefined);\nconst isScrolledFarthestLeft = ref(true);\nconst isScrolledFarthestRight = ref(false);\nconst rowHovered = ref<number | undefined>();\n\nconst dataTable = ref<HTMLDivElement | null>(null);\nconst scrollContainer = ref<HTMLDivElement | null>(null);\nconst table = ref<HTMLTableElement | null>(null);\nconst stickyTable = ref<HTMLTableElement | null>(null);\nconst stickyNav = ref<HTMLDivElement | null>(null);\nconst headerNav = ref<HTMLDivElement | null>(null);\nconst tableHeadings = ref<HTMLTableCellElement[]>([]);\nconst stickyHeadings = ref<HTMLDivElement[]>([]);\nconst tableHeadingWidths = ref<number[]>([]);\nconst stickyHeaderActive = ref(false);\nconst scrollStopTimer = ref<ReturnType<typeof setTimeout> | null>(null);\n\nconst handleResize = debounce(() => {\n  let tmpCondensed = false;\n\n  if (table.value && scrollContainer.value) {\n    // safari sometimes incorrectly sets the scrollwidth too large by 1px\n    tmpCondensed = table.value.scrollWidth > scrollContainer.value.clientWidth + 1;\n  }\n  calculateColumnVisibilityData(tmpCondensed);\n  condensed.value = tmpCondensed;\n}, 40, {trailing: true, leading: true, maxWait: 40});\n\nconst fixedFirstColumns = computed(() => {\n  const numberOfFixedFirstColumns =\n    props.hasFixedFirstColumn && !props.fixedFirstColumns ? 1 : (props.fixedFirstColumns || 0);\n\n  if (numberOfFixedFirstColumns >= props.headings.length) {\n    return 0;\n  }\n\n  return numberOfFixedFirstColumns;\n});\n\nconst rowCountIsEven = computed(() => props.rows.length % 2 === 0);\n\nconst className = computed(() => classNames(\n  styles.DataTable,\n  condensed.value && styles.condensed,\n  props.totals && styles.ShowTotals,\n  props.showTotalsInFooter && styles.ShowTotalsInFooter,\n  props.hasZebraStripingOnData && styles.ZebraStripingOnData,\n  props.hasZebraStripingOnData && rowCountIsEven.value && styles.RowCountIsEven,\n));\n\nconst wrapperClassName = computed(() => classNames(\n  styles.TableWrapper,\n  condensed.value && styles.condensed,\n  props.increasedTableDensity && styles.IncreasedTableDensity,\n  props.stickyHeader && styles.StickyHeaderEnabled,\n));\n\nconst nthColumns = computed(() => props.rows.map((row) => row.slice(0, fixedFirstColumns.value)));\nconst nthHeadings = computed(() => props.headings.slice(0, fixedFirstColumns.value));\nconst nthTotals = computed(() => props.totals?.slice(0, fixedFirstColumns.value));\nconst tableHeaderRows = computed(() => table.value?.children[0].childNodes);\nconst tableBodyRows = computed(() => table.value?.children[1].childNodes);\nconst headerRowHeights = computed(() => getRowClientHeights(tableHeaderRows.value));\nconst bodyRowHeights = computed(() => getRowClientHeights(tableBodyRows.value));\n\nconst fixedFirstColumnClassName = computed(() => classNames(\n  styles.FixedFirstColumn,\n  !isScrolledFarthestLeft.value && styles.separate,\n));\n\nconst tableRowClassName = computed(() => classNames(\n  styles.TableRow,\n  props.hoverable && styles.hoverable,\n));\n\nconst stickyHeaderInnerClassNames = computed(() => classNames(\n  styles.StickyHeaderInner,\n  stickyHeaderActive.value && styles['StickyHeaderInner-isSticky'],\n));\n\nconst stickyHeaderTableClassNames = computed(() => classNames(\n  styles.StickyHeaderTable,\n  !isScrolledFarthestLeft.value && styles.separate,\n));\n\nconst totalsRowHeading = computed(() => {\n  const totalsLabel = props.totalsName\n    ? props.totalsName\n    : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading'),\n      };\n\n  return props.totals && props.totals.filter((total) => total !== '').length > 1\n    ? totalsLabel.plural\n    : totalsLabel.singular;\n});\n\nonMounted(() => {\n  isMounted.value = true;\n  handleResize();\n});\n\nonBeforeUnmount(() => {\n  handleResize.cancel();\n});\n\nconst getRowClientHeights = (rows?: NodeList) => {\n  const heights: number[] = [];\n  if (!rows) {\n    return heights;\n  }\n  rows.forEach((row) => {\n    heights.push((row as Element).clientHeight);\n  });\n  return heights;\n};\n\nconst setCellRef = ({\n  cellRef,\n  index,\n  inStickyHeader,\n}: {\n  cellRef: HTMLTableCellElement | null;\n  index: number;\n  inStickyHeader: boolean;\n}) => {\n  if (!cellRef) {\n    return;\n  }\n\n  if (inStickyHeader) {\n    stickyHeadings.value[index] = cellRef;\n    const button = cellRef.querySelector('button');\n    if (!button) {\n      return;\n    }\n    button.addEventListener('focus', handleHeaderButtonFocus);\n  } else {\n    tableHeadings.value[index] = cellRef;\n    tableHeadingWidths.value[index] = cellRef.clientWidth;\n  }\n};\n\nconst changeHeadingFocus = () => {\n  const stickyFocusedItemIndex = stickyHeadings.value.findIndex(\n    (item) => item === document.activeElement?.parentElement,\n  );\n\n  const tableFocusedItemIndex = tableHeadings.value.findIndex(\n    (item) => item === document.activeElement?.parentElement,\n  );\n\n  const arrowsInStickyNav = stickyNav.value?.querySelectorAll('button');\n  const arrowsInHeaderNav = headerNav.value?.querySelectorAll('button');\n\n  let stickyFocusedNavIndex = -1;\n\n  arrowsInStickyNav?.forEach((item: HTMLButtonElement, index: number) => {\n    if (item === document.activeElement) {\n      stickyFocusedNavIndex = index;\n    }\n  });\n\n  let headerFocusedNavIndex = -1;\n\n  arrowsInHeaderNav?.forEach((item: HTMLButtonElement, index: number) => {\n    if (item === document.activeElement) {\n      headerFocusedNavIndex = index;\n    }\n  });\n\n  if (\n    stickyFocusedItemIndex < 0 &&\n    tableFocusedItemIndex < 0 &&\n    stickyFocusedNavIndex < 0 &&\n    headerFocusedNavIndex < 0\n  ) {\n    return null;\n  }\n\n  let button;\n\n  if (stickyFocusedItemIndex >= 0) {\n    button = tableHeadings.value[stickyFocusedItemIndex].querySelector('button');\n  } else if (tableFocusedItemIndex >= 0) {\n    button = stickyHeadings.value[tableFocusedItemIndex].querySelector('button');\n  }\n\n  if (stickyFocusedNavIndex >= 0) {\n    button = arrowsInHeaderNav?.[stickyFocusedNavIndex];\n  } else if (headerFocusedNavIndex >= 0) {\n    button = arrowsInStickyNav?.[headerFocusedNavIndex];\n  }\n\n  if (!button) {\n    return null;\n  }\n\n  button.style.visibility = 'visible';\n  button.focus();\n  button.style.removeProperty('visibility');\n};\n\nconst calculateColumnVisibilityData = (tmpCondensed: boolean) => {\n  if ((props.stickyHeader || tmpCondensed) && table.value && scrollContainer.value && dataTable.value) {\n    const headerCells = table.value.querySelectorAll<HTMLTableCellElement>(\n      headerCell.selector,\n    );\n\n    const rightMostHeader = headerCells[fixedFirstColumns.value - 1];\n    const nthColumnWidth = fixedFirstColumns.value\n      ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth\n      : 0;\n\n    if (headerCells.length > 0) {\n      const firstVisibleColumnIndex = headerCells.length - 1;\n      const tableLeftVisibleEdge =\n        scrollContainer.value.scrollLeft + nthColumnWidth;\n\n      const tableRightVisibleEdge =\n        scrollContainer.value.scrollLeft + dataTable.value.offsetWidth;\n\n      const tableData = {\n        firstVisibleColumnIndex,\n        tableLeftVisibleEdge,\n        tableRightVisibleEdge,\n      };\n\n      const tmpColumnVisibilityData = [...headerCells].map(\n        measureColumn(tableData),\n      );\n\n      const lastColumn =\n        tmpColumnVisibilityData[tmpColumnVisibilityData.length - 1];\n\n      const tmpIsScrolledFarthestLeft = fixedFirstColumns.value\n        ? tableLeftVisibleEdge === nthColumnWidth\n        : tableLeftVisibleEdge === 0;\n\n      const {\n        previousColumn: tmpPreviousColumn,\n        currentColumn: tmpCurrentColumn,\n      } = getPrevAndCurrentColumns(tableData, tmpColumnVisibilityData);\n\n      // Set state\n      columnVisibilityData.value = tmpColumnVisibilityData;\n      isScrolledFarthestLeft.value = tmpIsScrolledFarthestLeft;\n      isScrolledFarthestRight.value = lastColumn.rightEdge <= tableRightVisibleEdge;\n      previousColumn.value = tmpPreviousColumn;\n      currentColumn.value = tmpCurrentColumn;\n\n      return;\n    }\n  }\n\n  // Set state\n  columnVisibilityData.value = [];\n  previousColumn.value = undefined;\n  currentColumn.value = undefined;\n};\n\nconst handleHeaderButtonFocus = (event: Event) => {\n  if (\n    !scrollContainer.value ||\n    event.target == null ||\n    columnVisibilityData.value.length === 0\n  ) {\n    return;\n  }\n\n  const target = event.target as HTMLElement;\n  const currentCell = target.parentNode as HTMLTableCellElement;\n\n  const tableScrollLeft = scrollContainer.value.scrollLeft;\n  const tableViewableWidth = scrollContainer.value.offsetWidth;\n  const tableRightEdge = tableScrollLeft + tableViewableWidth;\n  const nthColumnWidth =\n    columnVisibilityData.value.length > 0\n      ? columnVisibilityData.value[fixedFirstColumns.value]?.rightEdge\n      : 0;\n  const currentColumnLeftEdge = currentCell.offsetLeft;\n  const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;\n\n  if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {\n    scrollContainer.value.scrollLeft = currentColumnLeftEdge - nthColumnWidth;\n  }\n\n  if (currentColumnRightEdge > tableRightEdge) {\n    scrollContainer.value.scrollLeft =\n      currentColumnRightEdge - tableViewableWidth;\n  }\n};\n\nconst stickyHeaderScrolling = () => {\n  if (!stickyTable.value || !scrollContainer.value) {\n    return;\n  }\n\n  stickyTable.value.scrollLeft = scrollContainer.value.scrollLeft;\n};\n\nconst scrollListener = () => {\n  if (scrollStopTimer.value) {\n    clearTimeout(scrollStopTimer.value);\n  }\n\n  scrollStopTimer.value = setTimeout(() => {\n    calculateColumnVisibilityData(condensed.value);\n  }, 100);\n\n  if (isScrolledFarthestLeft.value !== (scrollContainer.value?.scrollLeft === 0)) {\n    isScrolledFarthestLeft.value = scrollContainer.value?.scrollLeft === 0;\n  }\n\n  if (props.stickyHeader && stickyHeaderActive.value) {\n    stickyHeaderScrolling();\n  }\n};\n\nconst handleHover = (row?: number) => () => {\n  rowHovered.value = row;\n};\n\nconst handleFocus = (event: FocusEvent) => {\n  if (!scrollContainer.value || !event.target) {\n    return;\n  }\n\n  const currentCell = (event.target as Element).parentNode as HTMLTableCellElement;\n\n  const hasFixedFirstColumn = columnVisibilityData.value.length > 0;\n  const nthColumnWidth = hasFixedFirstColumn\n    ? columnVisibilityData.value[fixedFirstColumns.value]?.rightEdge\n    : 0;\n  const currentColumnLeftEdge = currentCell.offsetLeft;\n  const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;\n\n  if (scrollContainer.value.scrollLeft > desiredScrollLeft) {\n    scrollContainer.value.scrollLeft = desiredScrollLeft;\n  }\n\n  // focus fixed first column if present\n};\n\nconst navigateTable = (direction: string) => {\n  const nthColumnWidth = columnVisibilityData.value[fixedFirstColumns.value - 1]?.rightEdge;\n  if (!currentColumn.value || !previousColumn.value) {\n    return;\n  }\n\n  let prevWidths = 0;\n  for (let index = 0; index < currentColumn.value.index; index++) {\n    prevWidths += columnVisibilityData.value[index].width;\n  }\n\n  const handleScroll = () => {\n    let newScrollLeft = 0;\n    if (fixedFirstColumns.value) {\n      newScrollLeft =\n        direction === 'right'\n          ? prevWidths - nthColumnWidth + (currentColumn.value?.width ?? 0)\n          : prevWidths - (previousColumn.value?.width ?? 0) - nthColumnWidth;\n    } else {\n      newScrollLeft =\n        direction === 'right'\n          ? (currentColumn.value?.rightEdge ?? 0)\n          : (previousColumn.value?.leftEdge ?? 0);\n    }\n\n    if (scrollContainer.value) {\n      scrollContainer.value.scrollLeft = newScrollLeft;\n\n      requestAnimationFrame(() => {\n        calculateColumnVisibilityData(condensed.value);\n      });\n    }\n  };\n\n  return handleScroll;\n};\n\nconst getColSpan = (\n  rowLength: number,\n  headingsLength: number,\n  contentTypesLength: number,\n  cellIndex: number,\n) => {\n  if (fixedFirstColumns.value) {\n    return 1;\n  }\n  const rowLen = rowLength ? rowLength : 1;\n  const colLen = headingsLength ? headingsLength : contentTypesLength;\n  const colSpan = Math.floor(colLen / rowLen);\n  const remainder = colLen % rowLen;\n\n  return cellIndex === 0 ? colSpan + remainder : colSpan;\n};\n\nconst defaultOnSort = (headingIndex: number) => {\n  sortDirection.value = sortDirection.value ?? toRaw(props.defaultSortDirection || 'ascending');\n  sortedColumnIndex.value = sortedColumnIndex.value ?? toRaw(props.initialSortColumnIndex);\n\n  let newSortDirection = props.defaultSortDirection || 'ascending';\n\n  if (sortedColumnIndex.value === headingIndex) {\n    newSortDirection =\n      sortDirection.value === 'ascending' ? 'descending' : 'ascending';\n  }\n\n  const handleSort = () => {\n    sortDirection.value = newSortDirection;\n    sortedColumnIndex.value = headingIndex;\n    emits('sort', headingIndex, newSortDirection);\n  };\n\n  return handleSort;\n};\n\nconst stickyHandler = (isSticky: boolean) => {\n  setTimeout(changeHeadingFocus, 10);\n  stickyHeaderActive.value = isSticky;\n};\n\n/*\n * ===== Rendering functions =====\n * This component is a bit complex and has a lot of rendering logic\n * So we have a few rendering functions to keep the main template clean\n */\n\n// Navigation markup\nconst navigationMarkup = (location: 'sticky' | 'header') => h(\n  Navigation,\n  {\n    columnVisibilityData: columnVisibilityData.value,\n    isScrolledFarthestLeft: isScrolledFarthestLeft.value,\n    isScrolledFarthestRight: isScrolledFarthestRight.value,\n    onNavigateTableLeft: navigateTable('left'),\n    onNavigateTableRight: navigateTable('right'),\n    fixedFirstColumns: fixedFirstColumns.value,\n    setRef: (ref: HTMLDivElement) => {\n      if (location === 'sticky') {\n        stickyNav.value = ref;\n      } else {\n        headerNav.value = ref;\n      }\n    },\n  },\n);\n\n// Render heading\nconst renderHeading = ({\n  heading,\n  headingIndex,\n  inFixedNthColumn,\n  inStickyHeader,\n}: {\n  heading: VueNode;\n  headingIndex: number;\n  inFixedNthColumn: boolean;\n  inStickyHeader: boolean;\n}) => {\n  sortDirection.value = sortDirection.value ?? props.defaultSortDirection;\n  sortedColumnIndex.value = sortedColumnIndex.value ?? (props.initialSortColumnIndex || 0);\n\n  let sortableHeadingProps;\n  const headingCellId = `heading-cell-${headingIndex}`;\n  const stickyHeaderId = `stickyheader-${headingIndex}`;\n  const id = inStickyHeader ? stickyHeaderId : headingCellId;\n\n  if (props.sortable) {\n    const isSortable = props.sortable[headingIndex];\n    const isSorted = isSortable && sortedColumnIndex.value === headingIndex;\n    const direction = isSorted ? sortDirection.value : 'none';\n\n    sortableHeadingProps = {\n      defaultSortDirection: props.defaultSortDirection,\n      sorted: isSorted,\n      sortable: isSortable,\n      sortDirection: direction,\n      inFixedNthColumn: fixedFirstColumns.value,\n      onSort: defaultOnSort(headingIndex),\n    };\n  }\n\n  const stickyCellWidth = inStickyHeader\n    ? tableHeadingWidths.value[headingIndex]\n    : undefined;\n\n  const fixedCellVisible = !isScrolledFarthestLeft.value;\n\n  const cellProps = {\n    header: true,\n    stickyHeadingCell: inStickyHeader,\n    contentType: props.columnContentTypes[headingIndex],\n    nthColumn: headingIndex < fixedFirstColumns.value,\n    truncate: props.truncate,\n    ...sortableHeadingProps,\n    verticalAlign: props.verticalAlign,\n    stickyCellWidth,\n    fixedCellVisible,\n    firstColumnMinWidth: props.firstColumnMinWidth,\n    onFocus: handleFocus,\n  };\n\n  if (inFixedNthColumn && inStickyHeader) {\n    // need two cells for fixed first column (actual cell and the overlapping one)\n    // the sticky cell is second so that the index is associated with the sticky\n    // cell and not the underlying one. This helps `changeHeadingFocus` to put\n    // focus on the right cell when switching from sticky to non-sticky headers\n    return () => [\n      h(Cell, {\n        key: id,\n        ...cellProps,\n        setRef: (ref: HTMLTableCellElement | null) => {\n          setCellRef({cellRef: ref, index: headingIndex, inStickyHeader});\n        },\n        inFixedNthColumn: false,\n      }, () => heading),\n      h(Cell, {\n        key: `${id}-sticky`,\n        ...cellProps,\n        setRef: (ref: HTMLTableCellElement | null) => {\n          setCellRef({cellRef: ref, index: headingIndex, inStickyHeader});\n        },\n        inFixedNthColumn: Boolean(fixedFirstColumns.value),\n        lastFixedFirstColumn: headingIndex === fixedFirstColumns.value - 1,\n        style: { left: `${columnVisibilityData.value[headingIndex]?.leftEdge}px` },\n      }, () => heading),\n    ];\n  }\n\n  return () => h(Cell, {\n    key: id,\n    ...cellProps,\n    setRef: (ref: HTMLTableCellElement | null) => {\n      setCellRef({cellRef: ref, index: headingIndex, inStickyHeader});\n    },\n    inFixedNthColumn,\n    lastFixedFirstColumn: headingIndex === fixedFirstColumns.value - 1,\n  }, () => heading);\n};\n\n// Render totals\nconst renderTotals = ({ total, index }: {\n  total: TableData;\n  index: number;\n}) => {\n  const id = `totals-cell-${index}`;\n\n  let content: TableData;\n  let contentType: string;\n\n  if (!index) {\n    content = totalsRowHeading.value;\n  }\n\n  if (total !== '' && index > 0) {\n    content = total;\n    contentType = props.columnContentTypes[index];\n  }\n\n  return () => h(Cell, {\n    key: id,\n    total: true,\n    totalInFooter: props.showTotalsInFooter,\n    nthColumn: index <= fixedFirstColumns.value - 1,\n    firstColumn: !index,\n    contentType,\n    truncate: props.truncate,\n    verticalAlign: props.verticalAlign,\n  }, () => content);\n};\n\n// Default render row\nconst defaultRenderRow = ({\n  row,\n  index,\n  inFixedNthColumn,\n  rowHeights,\n}: {\n  row: TableData[];\n  index: number;\n  inFixedNthColumn: boolean;\n  rowHeights?: number[];\n}) => {\n  return () => h(\n    'tr',\n    {\n      key: `row-${index}`,\n      class: tableRowClassName.value,\n      onMouseenter: handleHover(index),\n      onMouseleave: handleHover(),\n    },\n    row.map((content, cellIndex) => {\n      const hovered = rowHovered.value === index;\n      const id = `cell-${cellIndex}-row-${index}`;\n      const colSpan = getColSpan(row.length, props.headings.length, props.columnContentTypes.length, cellIndex);\n\n      return h(Cell, {\n        key: id,\n        contentType: props.columnContentTypes[cellIndex],\n        nthColumn: cellIndex <= fixedFirstColumns.value - 1,\n        firstColumn: cellIndex === 0,\n        truncate: props.truncate,\n        verticalAlign: props.verticalAlign,\n        colSpan,\n        hovered,\n        inFixedNthColumn: condensed.value && inFixedNthColumn,\n        style: { height: rowHeights ? `${rowHeights?.[index]}px` : undefined },\n      }, () => content);\n    }),\n  );\n};\n</script>\n"],"names":["condensed","_a","Navigation","ref","Cell"],"mappings":"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"}