{"version":3,"file":"TrapFocus.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/TrapFocus/TrapFocus.vue"],"sourcesContent":["<template lang=\"pug\">\nFocus(\n  :disabled=\"disableFocus\",\n  :root=\"wrapperNode\",\n)\n  div(ref=\"wrapperNode\")\n    EventListener(\n      event=\"focusin\",\n      :handler=\"handleFocusIn\",\n    )\n    KeypressListener(\n      :key-code=\"Key.Tab\",\n      :handler=\"handleTab\",\n      key-event=\"keydown\",\n    )\n    slot\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch } from 'vue';\nimport { portal } from '@polaris/components/shared';\nimport {\n  focusFirstFocusableNode,\n  findFirstKeyboardFocusableNode,\n  findLastKeyboardFocusableNode,\n  focusFirstKeyboardFocusableNode,\n  focusLastKeyboardFocusableNode,\n} from '@/utilities/focus';\nimport {\n  Focus,\n  EventListener,\n  KeypressListener,\n} from '@/components';\nimport { useFocusManager } from '@/use/useFocusManager';\nimport { Key } from '@/utilities/types';\n\ninterface Props {\n  trapping?: boolean;\n}\n\nconst props = withDefaults(defineProps<Props>(), { trapping: true });\n\nconst { canSafelyFocus } = useFocusManager({ trapping: props.trapping });\n\nconst wrapperNode = ref<HTMLElement | null>(null);\n\nconst disableFocus = ref<boolean>(true);\n\nwatch([() => props.trapping], () => {\n  disableFocus.value = canSafelyFocus.value\n    && !(wrapperNode.value && wrapperNode.value.contains(document.activeElement))\n    ? !props.trapping\n    : true;\n});\n\nconst handleFocusIn = (event: FocusEvent) => {\n  if (!props.trapping\n    || !wrapperNode.value\n    || wrapperNode.value.contains(document.activeElement)\n    || (event.target instanceof Element && event.target.matches(`${portal.selector} *`))\n  ) {\n    return;\n  }\n\n  if (canSafelyFocus.value\n    && event.target instanceof HTMLElement\n    && wrapperNode.value !== event.target\n    && wrapperNode.value.contains(event.target)\n  ) {\n    focusFirstFocusableNode(wrapperNode.value);\n  }\n}\n\nconst handleTab = (event: KeyboardEvent) => {\n  if (!props.trapping || !wrapperNode.value) {\n    return;\n  }\n\n  const firstFocusableNode = findFirstKeyboardFocusableNode(wrapperNode.value);\n  const lastFocusableNode = findLastKeyboardFocusableNode(wrapperNode.value);\n\n  if (event.target === lastFocusableNode && !event.shiftKey) {\n    event.preventDefault();\n    focusFirstKeyboardFocusableNode(wrapperNode.value);\n  }\n\n  if (event.target === firstFocusableNode && event.shiftKey) {\n    event.preventDefault();\n    focusLastKeyboardFocusableNode(wrapperNode.value);\n  }\n}\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAwCA,UAAM,QAAQ;AAER,UAAA,EAAE,mBAAmB,gBAAgB,EAAE,UAAU,MAAM,UAAU;AAEjE,UAAA,cAAc,IAAwB,IAAI;AAE1C,UAAA,eAAe,IAAa,IAAI;AAEtC,UAAM,CAAC,MAAM,MAAM,QAAQ,GAAG,MAAM;AAClC,mBAAa,QAAQ,eAAe,SAC/B,EAAE,YAAY,SAAS,YAAY,MAAM,SAAS,SAAS,aAAa,KACzE,CAAC,MAAM,WACP;AAAA,IAAA,CACL;AAEK,UAAA,gBAAgB,CAAC,UAAsB;AACvC,UAAA,CAAC,MAAM,YACN,CAAC,YAAY,SACb,YAAY,MAAM,SAAS,SAAS,aAAa,KAChD,MAAM,kBAAkB,WAAW,MAAM,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,GAClF;AACA;AAAA,MACF;AAEA,UAAI,eAAe,SACd,MAAM,kBAAkB,eACxB,YAAY,UAAU,MAAM,UAC5B,YAAY,MAAM,SAAS,MAAM,MAAM,GAC1C;AACA,gCAAwB,YAAY,KAAK;AAAA,MAC3C;AAAA,IAAA;AAGI,UAAA,YAAY,CAAC,UAAyB;AAC1C,UAAI,CAAC,MAAM,YAAY,CAAC,YAAY,OAAO;AACzC;AAAA,MACF;AAEM,YAAA,qBAAqB,+BAA+B,YAAY,KAAK;AACrE,YAAA,oBAAoB,8BAA8B,YAAY,KAAK;AAEzE,UAAI,MAAM,WAAW,qBAAqB,CAAC,MAAM,UAAU;AACzD,cAAM,eAAe;AACrB,wCAAgC,YAAY,KAAK;AAAA,MACnD;AAEA,UAAI,MAAM,WAAW,sBAAsB,MAAM,UAAU;AACzD,cAAM,eAAe;AACrB,uCAA+B,YAAY,KAAK;AAAA,MAClD;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}