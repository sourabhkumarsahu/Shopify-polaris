import { defineComponent, useSlots, ref, computed, watch, openBlock, createBlock, unref, withCtx, createVNode, createElementVNode, normalizeClass, createTextVNode, toDisplayString, createCommentVNode, renderSlot } from "vue";
import { u as useHasSlot } from "../../use/useHasSlot.js";
import { c as classNames } from "../../utilities/css.js";
import { _ as _sfc_main$2 } from "../BlockStack/BlockStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$6 } from "../Button/ButtonFrom.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../Image/Image.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$5 } from "../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$4 } from "../Text/Text.vue_vue_type_script_setup_true_lang.js";
const ImageContainer = "Polaris-EmptyState__ImageContainer";
const Image = "Polaris-EmptyState__Image";
const loaded = "Polaris-EmptyState--loaded";
const imageContained = "Polaris-EmptyState--imageContained";
const SkeletonImageContainer = "Polaris-EmptyState__SkeletonImageContainer";
const SkeletonImage = "Polaris-EmptyState__SkeletonImage";
const styles = {
  ImageContainer,
  Image,
  loaded,
  imageContained,
  SkeletonImageContainer,
  SkeletonImage
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "EmptyState",
  props: {
    heading: {},
    image: {},
    largeImage: {},
    imageContained: { type: Boolean },
    fullWidth: { type: Boolean, default: false },
    action: {},
    secondaryAction: {}
  },
  setup(__props) {
    const { hasSlot } = useHasSlot();
    const slots = useSlots();
    const props = __props;
    const imageLoaded = ref(false);
    const imageRef = ref(null);
    const imageClassName = computed(() => classNames(
      styles.Image,
      imageLoaded.value && styles.loaded,
      props.imageContained && styles.imageContained
    ));
    const skeletonImageClass = computed(() => classNames(
      styles.SkeletonImage,
      imageLoaded.value && styles.loaded
    ));
    const imageContainerClass = computed(() => classNames(
      props.imageContained && styles.imageContained,
      !imageLoaded.value && styles.SkeletonImageContainer
    ));
    const sourceSet = computed(() => {
      return [
        { source: props.image, descriptor: "568w" },
        { source: props.largeImage, descriptor: "1136w" }
      ];
    });
    watch(
      () => imageRef.value,
      (newVal) => {
        if (newVal && newVal.complete) {
          imageLoaded.value = true;
        }
      }
    );
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), {
        "padding-inline-start": "0",
        "padding-inline-end": "0",
        "padding-block-start": "500",
        "padding-block-end": "1600"
      }, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), { "inline-align": "center" }, {
            default: withCtx(() => [
              createElementVNode("div", {
                class: normalizeClass(imageContainerClass.value)
              }, [
                _ctx.largeImage ? (openBlock(), createBlock(unref(_sfc_main$3), {
                  key: 0,
                  ref_key: "imageRef",
                  ref: imageRef,
                  alt: "",
                  role: "presentation",
                  source: _ctx.largeImage,
                  "class-name": imageClassName.value,
                  "source-set": sourceSet.value,
                  onLoad: _cache[0] || (_cache[0] = ($event) => imageLoaded.value = true)
                }, null, 8, ["source", "class-name", "source-set"])) : (openBlock(), createBlock(unref(_sfc_main$3), {
                  key: 1,
                  ref_key: "imageRef",
                  ref: imageRef,
                  alt: "",
                  role: "presentation",
                  "class-name": imageClassName.value,
                  source: _ctx.image,
                  onLoad: _cache[1] || (_cache[1] = ($event) => imageLoaded.value = true)
                }, null, 8, ["class-name", "source"])),
                createElementVNode("div", {
                  class: normalizeClass(skeletonImageClass.value)
                }, null, 2)
              ], 2),
              createVNode(unref(_sfc_main$1), {
                "max-width": _ctx.fullWidth ? "100%" : "400px"
              }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$2), { "inline-align": "center" }, {
                    default: withCtx(() => [
                      _ctx.heading || unref(hasSlot)(slots.default) ? (openBlock(), createBlock(unref(_sfc_main$1), {
                        key: 0,
                        "padding-block-end": "400"
                      }, {
                        default: withCtx(() => [
                          _ctx.heading ? (openBlock(), createBlock(unref(_sfc_main$1), {
                            key: 0,
                            "padding-block-end": "150"
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$4), {
                                variant: "headingMd",
                                as: "p",
                                alignment: "center"
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(toDisplayString(_ctx.heading), 1)
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })) : createCommentVNode("", true),
                          unref(hasSlot)(slots.default) ? (openBlock(), createBlock(unref(_sfc_main$4), {
                            key: 1,
                            as: "span",
                            alignment: "center",
                            variant: "bodySm"
                          }, {
                            default: withCtx(() => [
                              renderSlot(_ctx.$slots, "default")
                            ]),
                            _: 3
                          })) : createCommentVNode("", true)
                        ]),
                        _: 3
                      })) : createCommentVNode("", true),
                      createVNode(unref(_sfc_main$5), {
                        align: "center",
                        gap: "200"
                      }, {
                        default: withCtx(() => [
                          _ctx.secondaryAction ? (openBlock(), createBlock(unref(_sfc_main$6), {
                            key: 0,
                            action: _ctx.secondaryAction
                          }, null, 8, ["action"])) : createCommentVNode("", true),
                          _ctx.action ? (openBlock(), createBlock(unref(_sfc_main$6), {
                            key: 1,
                            action: _ctx.action,
                            overrides: { variant: "primary", size: "medium" }
                          }, null, 8, ["action"])) : createCommentVNode("", true)
                        ]),
                        _: 1
                      }),
                      unref(hasSlot)(slots.footerContent) ? (openBlock(), createBlock(unref(_sfc_main$1), {
                        key: 1,
                        "padding-block-start": "400"
                      }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$4), {
                            as: "span",
                            alignment: "center",
                            variant: "bodySm"
                          }, {
                            default: withCtx(() => [
                              renderSlot(_ctx.$slots, "footerContent")
                            ]),
                            _: 3
                          })
                        ]),
                        _: 3
                      })) : createCommentVNode("", true)
                    ]),
                    _: 3
                  })
                ]),
                _: 3
              }, 8, ["max-width"])
            ]),
            _: 3
          })
        ]),
        _: 3
      });
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=EmptyState.vue_vue_type_script_setup_true_lang.js.map
