{"version":3,"file":"ColorPicker.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/ColorPicker/ColorPicker.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  :class=\"className\",\n  :id=\"id\",\n  @mousedown=\"handlePickerDrag\"\n)\n  div(ref=\"colorNode\", :class=\"styles.MainColor\")\n    div(\n      :class=\"styles.ColorLayer\",\n      :style=\"{ backgroundColor: colorString }\"\n    )\n    Slidable(\n      :draggerX=\"draggerX\",\n      :draggerY=\"draggerY\",\n      @change=\"handleDraggerMove\",\n    )\n  HuePicker(\n    ref=\"huePickerRef\",\n    :hue=\"colorHsb.hue\",\n    @change=\"handleHueChange\",\n  )\n  AlphaPicker(\n    v-if=\"allowAlpha\",\n    :alpha=\"alpha\",\n    :color=\"colorHsb\",\n    @change=\"handleAlphaChange\",\n  )\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, onBeforeUnmount, reactive, ref } from 'vue';\nimport { debounce } from '@polaris/utilities/debounce';\nimport { clamp } from '@polaris/utilities/clamp';\nimport { classNames } from '@/utilities/css';\nimport type { HSBColor, HSBAColor, RGBAColor } from '@polaris/utilities/color-types';\nimport {\n  hsbToRgb,\n  hsbToHex,\n  hexToRgb,\n  rgbToHsb,\n} from '@/utilities/color-transformers';\nimport { AlphaPicker, HuePicker, Slidable } from './components';\nimport styles from '@polaris/components/ColorPicker/ColorPicker.module.css';\n\ninterface Color extends HSBColor {\n  /** Level of transparency */\n  alpha?: HSBAColor['alpha'];\n}\n\nexport type ColorPickerProps = {\n  /** ID for the element */\n  id?: string;\n  /** Allow user to select an alpha value */\n  allowAlpha?: boolean;\n  /** Allow HuePicker to take the full width */\n  fullWidth?: boolean;\n  /** Color output format */\n  output?: 'hsb' | 'rgb' | 'hex';\n}\n\ntype ColorPickerEvents = {\n  /** Callback when color is selected */\n  'change': [color: HSBAColor | string];\n}\n\nconst props = defineProps<ColorPickerProps>();\nconst emits = defineEmits<ColorPickerEvents>();\n\nconst RESIZE_DEBOUNCE_TIME_MS = 200;\n\nconst model = defineModel<Color | string>();\n\nconst pickerSize = reactive<{\n  width: number;\n  height: number;\n}>({ width: 0, height: 0 });\n\nconst colorHsb = reactive<HSBAColor>({\n  hue: 0,\n  saturation: 0,\n  brightness: 0,\n  alpha: 1,\n});\n\nconst colorNode = ref<HTMLElement | null>(null);\nconst observer = ref<ResizeObserver | null>(null);\nconst huePickerRef = ref<HTMLElement | null>(null);\n\nconst draggerX = computed(() => clamp(colorHsb.saturation * pickerSize.width, 0, pickerSize.width));\nconst draggerY = computed(() => clamp(pickerSize.height - (colorHsb.brightness * pickerSize.height), 0, pickerSize.height));\n\nconst alpha = computed(() => {\n  return colorHsb.alpha !== undefined && props.allowAlpha ? colorHsb.alpha : 1;\n});\n\nconst outputColor = computed<HSBAColor | string>(() => {\n  if (props.output === 'hex') {\n    return hsbToHex(colorHsb);\n  }\n\n  if (props.output === 'rgb') {\n    const rgbColor = hsbToRgb(colorHsb);\n    return `rgba(${rgbColor.red}, ${rgbColor.green}, ${rgbColor.blue}, ${alpha.value})`;\n  }\n\n  return colorHsb;\n});\n\nconst className = classNames(\n  styles.ColorPicker,\n  props.fullWidth && styles.fullWidth,\n);\n\nconst colorString = computed(() => {\n  const { red, green, blue } = hsbToRgb({\n    hue: colorHsb.hue,\n    saturation: 1,\n    brightness: 1,\n  });\n\n  return `rgba(${red}, ${green}, ${blue}, ${alpha.value})`;\n});\n\n/**\n * Initialize\n * Convert hex & rgba to hsb\n */\n// HSB populate\nif (typeof model.value === 'object') {\n  colorHsb.alpha = model.value.alpha || 1;\n  colorHsb.hue = model.value.hue;\n  colorHsb.saturation = model.value.saturation;\n  colorHsb.brightness = model.value.brightness;\n}\n// Hex / RGBA populate\nif (typeof model.value === 'string') {\n  let colorRgb: RGBAColor;\n\n  // Convert from hex to rgba object\n  if (/#[0-9abcdef]{3,6}/.test(model.value)) {\n    colorRgb = { ...hexToRgb(model.value), alpha: 1 };\n  } else {\n    // Convert from rgba string to object\n    const colorRgbArr = model.value.replace(/^rgba?\\(|\\s+|\\)$/g, '').split(',');\n    colorRgb = {\n      red: parseInt(colorRgbArr[0], 10),\n      green: parseInt(colorRgbArr[1], 10),\n      blue: parseInt(colorRgbArr[2], 10),\n      alpha: parseFloat(colorRgbArr[3]) ? parseFloat(colorRgbArr[3]) : 1,\n    };\n  }\n\n  Object.assign(colorHsb, { ...rgbToHsb(colorRgb), alpha: colorRgb.alpha });\n}\n\nonMounted(() => {\n  if (!colorNode.value) {\n    return;\n  }\n\n  observer.value = new ResizeObserver(handleResize);\n  observer.value.observe(colorNode.value);\n\n  pickerSize.width = colorNode.value.clientWidth;\n  pickerSize.height = colorNode.value.clientHeight;\n});\n\nconst handleResize = debounce(() => {\n  if (!colorNode.value) {\n    return;\n  }\n\n  pickerSize.width = colorNode.value.clientWidth;\n  pickerSize.height = colorNode.value.clientHeight;\n}, RESIZE_DEBOUNCE_TIME_MS, { leading: true, trailing: true, maxWait: RESIZE_DEBOUNCE_TIME_MS });\n\nonBeforeUnmount(() => {\n  observer.value?.disconnect();\n})\n\nconst handleHueChange = (hue: number) => {\n  colorHsb.hue = hue;\n\n  model.value = outputColor.value;\n  emits('change', outputColor.value);\n};\n\nconst handleAlphaChange = (alpha: number) => {\n  colorHsb.alpha = alpha;\n\n  model.value = outputColor.value;\n  emits('change', outputColor.value);\n};\n\nconst handleDraggerMove = ({ x, y }: { x: number; y: number }) => {\n  colorHsb.saturation = clamp(x / pickerSize.width, 0, 1);\n  colorHsb.brightness = clamp(1 - (y / pickerSize.height), 0, 1);\n\n  model.value = outputColor.value;\n  emits('change', outputColor.value);\n}\n\nconst handlePickerDrag = (e: MouseEvent) => {\n  e.preventDefault();\n}\n</script>\n"],"names":["_useModel","alpha"],"mappings":"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"}