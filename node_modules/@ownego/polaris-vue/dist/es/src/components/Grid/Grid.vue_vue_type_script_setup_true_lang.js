import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, normalizeStyle, renderSlot } from "vue";
const Grid = "Polaris-Grid";
const styles = {
  Grid
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Grid",
  props: {
    areas: {},
    columns: {},
    gap: {}
  },
  setup(__props) {
    const props = __props;
    const style = computed(() => {
      var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o;
      return {
        "--pc-grid-gap-xs": (_a = props.gap) == null ? void 0 : _a.xs,
        "--pc-grid-gap-sm": (_b = props.gap) == null ? void 0 : _b.sm,
        "--pc-grid-gap-md": (_c = props.gap) == null ? void 0 : _c.md,
        "--pc-grid-gap-lg": (_d = props.gap) == null ? void 0 : _d.lg,
        "--pc-grid-gap-xl": (_e = props.gap) == null ? void 0 : _e.xl,
        "--pc-grid-columns-xs": (_f = props.columns) == null ? void 0 : _f.xs,
        "--pc-grid-columns-sm": (_g = props.columns) == null ? void 0 : _g.sm,
        "--pc-grid-columns-md": (_h = props.columns) == null ? void 0 : _h.md,
        "--pc-grid-columns-lg": (_i = props.columns) == null ? void 0 : _i.lg,
        "--pc-grid-columns-xl": (_j = props.columns) == null ? void 0 : _j.xl,
        "--pc-grid-areas-xs": formatAreas((_k = props.areas) == null ? void 0 : _k.xs),
        "--pc-grid-areas-sm": formatAreas((_l = props.areas) == null ? void 0 : _l.sm),
        "--pc-grid-areas-md": formatAreas((_m = props.areas) == null ? void 0 : _m.md),
        "--pc-grid-areas-lg": formatAreas((_n = props.areas) == null ? void 0 : _n.lg),
        "--pc-grid-areas-xl": formatAreas((_o = props.areas) == null ? void 0 : _o.xl)
      };
    });
    function formatAreas(areas) {
      if (!areas) return;
      return `'${areas == null ? void 0 : areas.join(`' '`)}'`;
    }
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(unref(styles).Grid),
        style: normalizeStyle(style.value)
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 6);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Grid.vue_vue_type_script_setup_true_lang.js.map
