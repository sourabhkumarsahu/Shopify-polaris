{"version":3,"file":"Bleed.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Bleed/Bleed.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(:className=\"className\" :style=\"sanitizeCustomProperties(style)\")\n  slot\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { SpaceScale } from '@shopify/polaris-tokens';\nimport {\n  getResponsiveProps,\n  sanitizeCustomProperties,\n  classNames,\n} from '@/utilities/css';\nimport type { VueNode } from '@/utilities/types';\nimport type { ResponsiveProp } from '../../utilities/css';\nimport styles from '@polaris/components/Bleed/Bleed.module.css';\n\ntype Spacing = ResponsiveProp<SpaceScale>;\n\ninterface BleedProps {\n  /** Negative horizontal space around children */\n  marginInline?: Spacing;\n  /** Negative vertical space around children */\n  marginBlock?: Spacing;\n  /** Negative top space around children */\n  marginBlockStart?: Spacing;\n  /** Negative bottom space around children */\n  marginBlockEnd?: Spacing;\n  /** Negative left space around children */\n  marginInlineStart?: Spacing;\n  /** Negative right space around children */\n  marginInlineEnd?: Spacing;\n}\n\nexport type BleedSlots = {\n  default: (_: VueNode) => any;\n}\n\ndefineSlots<BleedSlots>();\n\nconst props = defineProps<BleedProps>();\n\nconst className = computed(() => {\n  return classNames(\n    styles.Bleed,\n  );\n});\n\nconst style = computed(() => {\n  return {\n    ...getResponsiveProps(\n      'bleed',\n      'margin-block-start',\n      'space',\n      negativeMarginBlockStart,\n    ),\n    ...getResponsiveProps(\n      'bleed',\n      'margin-block-end',\n      'space',\n      negativeMarginBlockEnd,\n    ),\n    ...getResponsiveProps(\n      'bleed',\n      'margin-inline-start',\n      'space',\n      negativeMarginInlineStart,\n    ),\n    ...getResponsiveProps(\n      'bleed',\n      'margin-inline-end',\n      'space',\n      negativeMarginInlineEnd,\n    ),\n  };\n});\n\nconst getNegativeMargins = (direction: string) => {\n    const xAxis = ['marginInlineStart', 'marginInlineEnd'];\n    const yAxis = ['marginBlockStart', 'marginBlockEnd'];\n\n    const directionValues: {[key: string]: Spacing | undefined} = {\n      marginBlockStart: props.marginBlockStart,\n      marginBlockEnd: props.marginBlockEnd,\n      marginInlineStart: props.marginInlineStart,\n      marginInlineEnd: props.marginInlineEnd,\n      marginInline: props.marginInline,\n      marginBlock: props.marginBlock,\n    };\n\n    if (directionValues[direction]) {\n      return directionValues[direction];\n    } else if (xAxis.includes(direction) && props.marginInline) {\n      return directionValues.marginInline;\n    } else if (yAxis.includes(direction) && props.marginBlock) {\n      return directionValues.marginBlock;\n    }\n  };\n\nconst negativeMarginBlockStart = getNegativeMargins('marginBlockStart');\nconst negativeMarginBlockEnd = getNegativeMargins('marginBlockEnd');\nconst negativeMarginInlineStart = getNegativeMargins('marginInlineStart');\nconst negativeMarginInlineEnd = getNegativeMargins('marginInlineEnd');\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAwCA,UAAM,QAAQ;AAER,UAAA,YAAY,SAAS,MAAM;AACxB,aAAA;AAAA,QACL,OAAO;AAAA,MAAA;AAAA,IACT,CACD;AAEK,UAAA,QAAQ,SAAS,MAAM;AACpB,aAAA;AAAA,QACL,GAAG;AAAA,UACD;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,GAAG;AAAA,UACD;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,GAAG;AAAA,UACD;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA,GAAG;AAAA,UACD;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MAAA;AAAA,IACF,CACD;AAEK,UAAA,qBAAqB,CAAC,cAAsB;AACxC,YAAA,QAAQ,CAAC,qBAAqB,iBAAiB;AAC/C,YAAA,QAAQ,CAAC,oBAAoB,gBAAgB;AAEnD,YAAM,kBAAwD;AAAA,QAC5D,kBAAkB,MAAM;AAAA,QACxB,gBAAgB,MAAM;AAAA,QACtB,mBAAmB,MAAM;AAAA,QACzB,iBAAiB,MAAM;AAAA,QACvB,cAAc,MAAM;AAAA,QACpB,aAAa,MAAM;AAAA,MAAA;AAGjB,UAAA,gBAAgB,SAAS,GAAG;AAC9B,eAAO,gBAAgB,SAAS;AAAA,MAAA,WACvB,MAAM,SAAS,SAAS,KAAK,MAAM,cAAc;AAC1D,eAAO,gBAAgB;AAAA,MAAA,WACd,MAAM,SAAS,SAAS,KAAK,MAAM,aAAa;AACzD,eAAO,gBAAgB;AAAA,MACzB;AAAA,IAAA;AAGE,UAAA,2BAA2B,mBAAmB,kBAAkB;AAChE,UAAA,yBAAyB,mBAAmB,gBAAgB;AAC5D,UAAA,4BAA4B,mBAAmB,mBAAmB;AAClE,UAAA,0BAA0B,mBAAmB,iBAAiB;;;;;;;;;;;"}