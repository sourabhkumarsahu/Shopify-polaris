{"version":3,"file":"utils.js","sources":["../../../../../src/components/Avatar/utils.ts"],"sourcesContent":["export const STYLE_CLASSES = [\n  'one',\n  'two',\n  'three',\n  'four',\n  'five',\n  'six',\n  'seven',\n] as const;\n\n\nexport type Size = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\nexport interface AvatarProps {\n  /**\n   * Size of avatar\n   * @default 'medium'\n   */\n  size?: Size;\n  /** The name of the person */\n  name?: string;\n  /** Initials of person to display */\n  initials?: string;\n  /** Whether the avatar is for a customer */\n  customer?: boolean;\n  /** URL of the avatar image which falls back to initials if the image fails to load */\n  source?: string;\n  /** Accessible label for the avatar image */\n  accessibilityLabel?: string;\n}\n\n/**\n * Computes a rudimentary hash from a string by xoring the character codes\n * of all characters\n */\nexport function xorHash(str: string) {\n  let hash = 0;\n\n  for (const char of str) {\n    hash ^= char.charCodeAt(0);\n  }\n\n  return hash;\n}\n\nexport function styleClass(name?: string) {\n  return name\n    ? STYLE_CLASSES[xorHash(name) % STYLE_CLASSES.length]\n    : STYLE_CLASSES[0];\n}\n"],"names":[],"mappings":"AAAO,MAAM,gBAAgB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AA2BO,SAAS,QAAQ,KAAa;AACnC,MAAI,OAAO;AAEX,aAAW,QAAQ,KAAK;AACd,YAAA,KAAK,WAAW,CAAC;AAAA,EAC3B;AAEO,SAAA;AACT;AAEO,SAAS,WAAW,MAAe;AACjC,SAAA,OACH,cAAc,QAAQ,IAAI,IAAI,cAAc,MAAM,IAClD,cAAc,CAAC;AACrB;"}