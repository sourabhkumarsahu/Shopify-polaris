import { defineComponent, useSlots, computed, openBlock, createBlock, unref, withCtx, createVNode, createCommentVNode, createElementBlock, renderSlot, toDisplayString } from "vue";
import { u as useBreakpoints } from "../../use/useBreakpoints.js";
import { u as useHasSlot } from "../../use/useHasSlot.js";
import { _ as _sfc_main$5 } from "../Avatar/Avatar.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$6 } from "../BlockStack/BlockStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$8 } from "../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../Button/ButtonFrom.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../Card/Card.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$4 } from "../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../SettingAction/SettingAction.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$7 } from "../Text/Text.vue_vue_type_script_setup_true_lang.js";
const _hoisted_1 = { key: 0 };
const _hoisted_2 = { key: 1 };
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "AccountConnection",
  props: {
    accountName: { default: "" },
    avatarUrl: {},
    connected: { type: Boolean, default: false },
    action: {}
  },
  setup(__props) {
    const breakpoints = useBreakpoints();
    const { hasSlot } = useHasSlot();
    const props = __props;
    const slots = useSlots();
    const initials = computed(() => {
      return props.accountName ? props.accountName.split(/\s+/).map((name) => name[0]).join("") : void 0;
    });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), null, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), null, {
            action: withCtx(() => [
              _ctx.action ? (openBlock(), createBlock(unref(_sfc_main$3), {
                key: 0,
                action: _ctx.action,
                overrides: { variant: _ctx.connected ? void 0 : "primary" }
              }, null, 8, ["action", "overrides"])) : createCommentVNode("", true)
            ]),
            default: withCtx(() => [
              createVNode(unref(_sfc_main$4), { gap: "400" }, {
                default: withCtx(() => [
                  _ctx.connected ? (openBlock(), createElementBlock("span", _hoisted_1, [
                    createVNode(unref(_sfc_main$5), {
                      "accessibility-label": "",
                      name: _ctx.accountName,
                      initials: initials.value,
                      source: _ctx.avatarUrl
                    }, null, 8, ["name", "initials", "source"])
                  ])) : createCommentVNode("", true),
                  createVNode(unref(_sfc_main$6), { gap: "100" }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$7), {
                        as: "h2",
                        variant: "headingSm"
                      }, {
                        default: withCtx(() => [
                          unref(hasSlot)(unref(slots).title) ? renderSlot(_ctx.$slots, "title", { key: 0 }) : (openBlock(), createElementBlock("span", _hoisted_2, toDisplayString(_ctx.accountName), 1))
                        ]),
                        _: 3
                      }),
                      unref(hasSlot)(unref(slots).details) ? (openBlock(), createBlock(unref(_sfc_main$7), {
                        key: 0,
                        as: "span",
                        variant: "bodyMd",
                        tone: "subdued"
                      }, {
                        default: withCtx(() => [
                          renderSlot(_ctx.$slots, "details")
                        ]),
                        _: 3
                      })) : createCommentVNode("", true)
                    ]),
                    _: 3
                  })
                ]),
                _: 3
              })
            ]),
            _: 3
          }),
          unref(hasSlot)(unref(slots)["term-of-service"]) ? (openBlock(), createBlock(unref(_sfc_main$8), {
            key: 0,
            "padding-block-start": unref(breakpoints).mdUp ? "400" : "500"
          }, {
            default: withCtx(() => [
              createVNode(unref(_sfc_main$7), {
                as: "span",
                variant: "bodyMd"
              }, {
                default: withCtx(() => [
                  renderSlot(_ctx.$slots, "term-of-service")
                ]),
                _: 3
              })
            ]),
            _: 3
          }, 8, ["padding-block-start"])) : createCommentVNode("", true)
        ]),
        _: 3
      });
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=AccountConnection.vue_vue_type_script_setup_true_lang.js.map
