{"version":3,"file":"ButtonGroup.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/ButtonGroup/ButtonGroup.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  :class=\"className\",\n  :data-buttongroup-variant=\"variant\",\n  :data-buttongroup-connected-top=\"connectedTop\",\n  :data-buttongroup-full-width=\"fullWidth\",\n  :data-buttongroup-no-wrap=\"noWrap\",\n)\n  Item(\n    v-for=\"item, index in slotsElms\",\n    :key=\"index\",\n    :button-elm=\"item\",\n  )\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { useExtractFragment } from '@/use/useExtractFragment';\nimport { classNames, variationName } from '@/utilities/css';\nimport type { VueNode } from '@/utilities/types';\nimport { Item } from './components';\nimport type { ButtonGroupProps } from './types';\nimport styles from '@polaris/components/ButtonGroup/ButtonGroup.module.css';\n\nconst slots = defineSlots<{\n  /** Button components */\n  default: (_?: VueNode) => any;\n}>();\n\nconst { slotsElms } = useExtractFragment(slots.default);\n\nconst props = defineProps<ButtonGroupProps>();\n\nconst className = computed(() => classNames(\n  styles.ButtonGroup,\n  props.gap && styles[props.gap],\n  props.variant && styles[variationName('variant', props.variant)],\n  props.fullWidth && styles.fullWidth,\n  props.noWrap && styles.noWrap,\n));\n</script>\n"],"names":["_useSlots"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,UAAM,QAAQA;AAKd,UAAM,EAAE,UAAc,IAAA,mBAAmB,MAAM,OAAO;AAEtD,UAAM,QAAQ;AAER,UAAA,YAAY,SAAS,MAAM;AAAA,MAC/B,OAAO;AAAA,MACP,MAAM,OAAO,OAAO,MAAM,GAAG;AAAA,MAC7B,MAAM,WAAW,OAAO,cAAc,WAAW,MAAM,OAAO,CAAC;AAAA,MAC/D,MAAM,aAAa,OAAO;AAAA,MAC1B,MAAM,UAAU,OAAO;AAAA,IAAA,CACxB;;;;;;;;;;;;;;;;;;;"}