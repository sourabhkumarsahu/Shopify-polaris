import { defineComponent, ref, computed, openBlock, createElementBlock, normalizeClass, createBlock, resolveDynamicComponent } from "vue";
import { c as classNames } from "../../../../utilities/css.js";
import { s as styles } from "../../ButtonGroup.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Item",
  props: {
    buttonElm: {}
  },
  setup(__props) {
    const props = __props;
    const focusValue = ref(false);
    const forceTrueFocused = () => {
      focusValue.value = true;
    };
    const forceFalseFocused = () => {
      focusValue.value = false;
    };
    const className = computed(() => {
      var _a;
      return classNames(
        styles.Item,
        focusValue.value && styles["Item-focused"],
        ((_a = props.buttonElm.props) == null ? void 0 : _a.variant) === "plain" && styles["Item-plain"]
      );
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(className.value),
        onFocus: forceTrueFocused,
        onBlur: forceFalseFocused
      }, [
        (openBlock(), createBlock(resolveDynamicComponent(_ctx.buttonElm)))
      ], 34);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Item.vue_vue_type_script_setup_true_lang.js.map
