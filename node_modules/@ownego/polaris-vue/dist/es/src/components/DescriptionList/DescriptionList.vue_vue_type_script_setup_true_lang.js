import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, renderSlot } from "vue";
import { c as classNames } from "../../utilities/css.js";
const DescriptionList = "Polaris-DescriptionList";
const Term = "Polaris-DescriptionList__Term";
const spacingTight = "Polaris-DescriptionList--spacingTight";
const Description = "Polaris-DescriptionList__Description";
const styles = {
  DescriptionList,
  Term,
  spacingTight,
  Description
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "DescriptionList",
  props: {
    gap: { default: "loose" }
  },
  setup(__props) {
    const prop = __props;
    const className = computed(() => classNames(
      styles.DescriptionList,
      prop.gap === "tight" && styles.spacingTight
    ));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("dl", {
        class: normalizeClass(className.value)
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 2);
    };
  }
});
export {
  _sfc_main as _,
  styles as s
};
//# sourceMappingURL=DescriptionList.vue_vue_type_script_setup_true_lang.js.map
