{"version":3,"file":"PopoverOverlay.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/Popover/components/PopoverOverlay/PopoverOverlay.vue"],"sourcesContent":["<template lang=\"pug\">\nPositionedOverlay(\n  v-if=\"state.transitionStatus !== TransitionStatus.Exited && active\",\n  ref=\"overlayRef\",\n  :full-width=\"fullWidth\",\n  :active=\"active\",\n  :activator=\"activator\",\n  :prefer-input-activator=\"preferInputActivator\",\n  :preferred-position=\"preferredPosition\",\n  :preferred-alignment=\"preferredAlignment\",\n  :fixed=\"fixed\",\n  :class=\"positionOverlayClass\",\n  :z-index-override=\"zIndexOverride\",\n  @scroll-out=\"handleScrollOut\",\n)\n  div(\n    v-bind=\"overlay.props\",\n    :class=\"popoverOverlayClass\",\n  )\n    EventListener(event=\"click\", :handler=\"handleClick\", :custom-window=\"window\")\n    EventListener(event=\"touchstart\", :handler=\"handleClick\", :custom-window=\"window\")\n    KeypressListener(:key-code=\"Key.Escape\", :handler=\"handleEscape\", :custom-window=\"window\")\n    div(\n      tabindex=\"0\",\n      :class=\"styles.FocusTracker\",\n      @focus=\"handleFocusFirstItem\",\n    )\n    div(:class=\"styles.ContentContainer\")\n      div(\n        ref=\"contentNode\",\n        :id=\"id\",\n        :tabindex=\"autofocusTarget === 'none' ? undefined : -1\",\n        :class=\"contentClassNames\",\n        :style=\"contentStyles\",\n      )\n        template(v-if=\"isChildContentWrappedByPane\")\n          slot\n        template(v-else)\n          Pane(\n            :capture-overscroll=\"captureOverscroll\",\n            :sectioned=\"sectioned\",\n          )\n            slot\n    div(\n      :class=\"styles.FocusTracker\",\n      tabindex=\"0\",\n      @focus=\"handleFocusLastItem\",\n    )\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  type Ref,\n  useSlots,\n  ref,\n  reactive,\n  computed,\n  watch,\n  onMounted,\n  onBeforeUnmount,\n} from 'vue';\nimport styles from '@polaris/components/Popover/Popover.module.css';\nimport { themeDefault } from '@shopify/polaris-tokens';\nimport { overlay } from '@polaris/components/shared';\nimport { classNames } from '@/utilities/css';\nimport usePortalsManager from '@/use/usePortalsManager';\nimport { findFirstKeyboardFocusableNode } from '@/utilities/focus';\nimport { isElementOfType } from '@/utilities/component';\n\nimport {\n  EventListener,\n  KeypressListener,\n  PositionedOverlay,\n} from '@/components';\nimport { Pane } from '../Pane';\n\nimport { Key } from '@/utilities/types';\nimport type { PopoverOverlayProps } from './types';\nimport { PopoverCloseSource } from './types';\n\nenum TransitionStatus {\n  Entering = 'entering',\n  Entered = 'entered',\n  Exiting = 'exiting',\n  Exited = 'exited',\n}\n\ninterface State {\n  transitionStatus: TransitionStatus;\n}\n\ntype Emit = {\n  close: [event: PopoverCloseSource];\n}\n\nconst slots = useSlots();\n\nconst context = usePortalsManager();\n\nconst props = withDefaults(defineProps<PopoverOverlayProps>(), {\n  preferredPosition: 'below',\n  preferredAlignment: 'center',\n  preferInputActivator: true,\n});\n\nconst emits = defineEmits<Emit>();\n\nconst state = reactive<State>({\n  transitionStatus: props.active\n    ? TransitionStatus.Entering\n    : TransitionStatus.Exited,\n});\n\nconst contentNode = ref<HTMLDivElement | null>(null);\nconst enteringTimer = ref<number | undefined>(undefined);\nconst overlayRef = ref<InstanceType<typeof PositionedOverlay> | null>(null);\nconst observer = ref<ResizeObserver | null>(null);\nconst window = ref<Window>(globalThis.window);\n\nconst overlayDetails = computed(() => (overlayRef.value as InstanceType<typeof PositionedOverlay>)?.overlayDetails);\n\nconst positionOverlayClass = computed(() => {\n  return classNames(\n    styles.PopoverOverlay,\n    state.transitionStatus === TransitionStatus.Entering && styles['PopoverOverlay-entering'],\n    state.transitionStatus === TransitionStatus.Entered && styles['PopoverOverlay-open'],\n    state.transitionStatus === TransitionStatus.Exiting && styles['PopoverOverlay-exiting'],\n  )\n});\n\nconst popoverOverlayClass = computed(() => {\n  return classNames(\n    styles.Popover,\n    overlayDetails.value?.positioning === 'above' && styles.positionedAbove,\n    props.fullWidth && styles.fullWidth,\n    overlayDetails.value?.measuring && styles.measuring,\n    props.hideOnPrint && styles['PopoverOverlay-hideOnPrint'],\n  );\n});\n\nconst contentStyles = computed(() => {\n  return overlayDetails.value?.measuring\n    ? undefined\n    : { height: `${overlayDetails.value?.desiredHeight}px` };\n});\n\nconst contentClassNames = computed(() => {\n  return classNames(\n    styles.Content,\n    props.fullHeight && styles['Content-fullHeight'],\n    props.fluidContent && styles['Content-fluidContent'],\n  );\n});\n\nconst isChildContentWrappedByPane = computed(() => {\n  const childContents: any = slots.default?.() || [];\n\n  if (!childContents.length) {\n    return false;\n  }\n\n  const children = childContents[0].children && childContents[0].children.length\n    ? childContents[0].children[0]\n    : childContents[0];\n\n  return isElementOfType(children, Pane);\n});\n\nwatch(\n  () => props.active,\n  (newVal, oldVal) => {\n    if (newVal && !oldVal) {\n      focusContent();\n      changeTransitionStatus(TransitionStatus.Entering, () => {\n        clearTransitionTimeout();\n\n        enteringTimer.value = window.value.setTimeout(() => {\n          state.transitionStatus = TransitionStatus.Entered;\n          // Important: This will not update when the active theme changes.\n          // Update this to `useTheme` once converted to a function component.\n        }, parseInt(themeDefault.motion['motion-duration-100'], 10));\n      })\n    }\n\n    if (!newVal && oldVal) {\n      clearTransitionTimeout();\n\n      state.transitionStatus = TransitionStatus.Exited;\n    }\n  }\n);\n\nwatch(\n  () => props.activator,\n  (newVal, oldVal) => {\n    if (newVal !== oldVal) {\n      observer.value?.unobserve(oldVal);\n      observer.value?.observe(newVal);\n    }\n  }\n);\n\nonMounted(() => {\n  if (props.active) {\n    focusContent();\n\n    changeTransitionStatus(TransitionStatus.Entered);\n  }\n\n  if (!props.activator) return;\n\n  observer.value = new ResizeObserver(() => {\n    window.value = props.activator.ownerDocument.defaultView!;\n  });\n\n  observer.value.observe(props.activator);\n});\n\nonBeforeUnmount(() => {\n  clearTransitionTimeout();\n\n  observer.value?.disconnect();\n});\n\nconst changeTransitionStatus = (transitionStatus: TransitionStatus, callback?: () => void) => {\n  state.transitionStatus = transitionStatus;\n\n  callback && callback();\n\n  contentNode.value && contentNode.value.getBoundingClientRect();\n};\n\nfunction clearTransitionTimeout() {\n  if (enteringTimer.value) {\n    window.value.clearTimeout(enteringTimer.value);\n  }\n}\n\nfunction focusContent() {\n  const { autofocusTarget = 'container' } = props;\n\n  if (autofocusTarget === 'none' || contentNode.value === null) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    if (contentNode.value === null) {\n      return;\n    }\n\n    const focusableChild = findFirstKeyboardFocusableNode(contentNode.value);\n\n    // TODO: check if env variables is using correctly\n    if (focusableChild && autofocusTarget === 'first-node') {\n      focusableChild.focus({\n        preventScroll: process.env.NODE_ENV === 'development',\n      })!;\n    } else {\n      contentNode.value.focus({\n        preventScroll: process.env.NODE_ENV === 'development',\n      });\n    }\n  });\n}\n\nfunction handleClick(event: Event) {\n  const target = event.target as HTMLElement;\n  const { activator, preventCloseOnChildOverlayClick } = props;\n  const composedPath = event.composedPath();\n  const wasDescendant = preventCloseOnChildOverlayClick\n    ? wasPolarisPortalDescendant(composedPath, context)\n    : wasContentNodeDescendant(composedPath, contentNode);\n  const isActivatorDescendant = nodeContainsDescendant(activator, target);\n\n  if (\n    wasDescendant\n    || isActivatorDescendant\n    || state.transitionStatus !== TransitionStatus.Entered\n  ) {\n    return;\n  }\n\n  emits('close', PopoverCloseSource.Click);\n}\n\nfunction handleScrollOut() {\n  emits('close', PopoverCloseSource.ScrollOut);\n}\n\nfunction handleEscape(event: Event) {\n  const target = event.target as HTMLElement;\n  const { activator } = props;\n  const composedPath = event.composedPath();\n  const wasDescendant = wasContentNodeDescendant(composedPath, contentNode);\n  const isActivatorDescendant = nodeContainsDescendant(activator, target);\n\n  if (wasDescendant || isActivatorDescendant) {\n    emits('close', PopoverCloseSource.EscapeKeypress);\n  }\n}\n\nfunction handleFocusFirstItem() {\n  emits('close', PopoverCloseSource.FocusOut);\n}\n\nfunction handleFocusLastItem() {\n  emits('close', PopoverCloseSource.FocusOut);\n}\n\nfunction nodeContainsDescendant(\n  rootNode: HTMLElement,\n  descendant: HTMLElement,\n): boolean {\n  if (rootNode === descendant) {\n    return true;\n  }\n\n  let parent = descendant.parentNode;\n\n  while (parent != null) {\n    if (parent === rootNode) {\n      return true;\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return false;\n}\n\nfunction wasContentNodeDescendant(\n  composedPath: readonly EventTarget[],\n  contentNode: Ref<HTMLDivElement | null>,\n) {\n  return (contentNode.value != null && composedPath.includes(contentNode.value));\n}\n\nfunction wasPolarisPortalDescendant(\n  composedPath: readonly EventTarget[],\n  portalsContainerElement: Ref<HTMLElement | null>,\n): boolean {\n  return composedPath\n    .some((eventTarget) => eventTarget instanceof Node && portalsContainerElement.value?.contains(eventTarget));\n}\n\nfunction forceUpdatePosition() {\n  (overlayRef.value as InstanceType<typeof PositionedOverlay>).forceUpdatePosition();\n}\n\ndefineExpose({ forceUpdatePosition });\n</script>\n"],"names":["Pane","contentNode"],"mappings":"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"}