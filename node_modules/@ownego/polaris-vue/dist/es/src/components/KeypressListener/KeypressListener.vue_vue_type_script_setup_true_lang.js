import { defineComponent, ref, onMounted, onBeforeUnmount } from "vue";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "KeypressListener",
  props: {
    keyCode: {},
    handler: {},
    keyEvent: { default: "keyup" },
    useCapture: { type: Boolean },
    options: {}
  },
  setup(__props) {
    const props = __props;
    const tracked = ref({
      handler: props.handler,
      keyCode: props.keyCode
    });
    onMounted(() => {
      document.addEventListener(
        props.keyEvent || "keyup",
        handleKeyEvent,
        props.useCapture || props.options
      );
    });
    onBeforeUnmount(() => {
      document.removeEventListener(
        props.keyEvent || "keyup",
        handleKeyEvent,
        props.useCapture || props.options
      );
    });
    const handleKeyEvent = (event) => {
      const { handler, keyCode } = tracked.value;
      if (event.keyCode === keyCode) {
        handler(event);
      }
    };
    return (_ctx, _cache) => {
      return null;
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=KeypressListener.vue_vue_type_script_setup_true_lang.js.map
