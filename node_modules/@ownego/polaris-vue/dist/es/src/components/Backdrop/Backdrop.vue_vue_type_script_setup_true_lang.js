import { defineComponent, computed, openBlock, createElementBlock, Fragment, createVNode, unref, createElementVNode, normalizeClass } from "vue";
import { c as classNames } from "../../utilities/css.js";
import { _ as _sfc_main$1 } from "../ScrollLock/ScrollLock.vue_vue_type_script_setup_true_lang.js";
const Backdrop = "Polaris-Backdrop";
const transparent = "Polaris-Backdrop--transparent";
const belowNavigation = "Polaris-Backdrop--belowNavigation";
const styles = {
  Backdrop,
  transparent,
  belowNavigation
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Backdrop",
  props: {
    belowNavigation: { type: Boolean },
    transparent: { type: Boolean }
  },
  emits: ["click", "touch-start", "closing"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const className = computed(() => {
      return classNames(
        styles.Backdrop,
        props.belowNavigation && styles.belowNavigation,
        props.transparent && styles.transparent
      );
    });
    const handleMouseDown = () => {
      emits("closing", true);
    };
    const handleMouseUp = () => {
      emits("closing", false);
      emits("click");
    };
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(Fragment, null, [
        createVNode(unref(_sfc_main$1)),
        createElementVNode("div", {
          class: normalizeClass(className.value),
          onClick: _cache[0] || (_cache[0] = ($event) => emits("click")),
          onTouchstart: _cache[1] || (_cache[1] = ($event) => emits("touch-start")),
          onMousedown: handleMouseDown,
          onMouseup: handleMouseUp
        }, null, 34)
      ], 64);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Backdrop.vue_vue_type_script_setup_true_lang.js.map
