{"version":3,"file":"LegacyCard.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/LegacyCard/LegacyCard.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  ref=\"legacyCardRef\",\n  :class=\"className\",\n)\n  Header(\n    v-if=\"title || hasSlot(slots.title) || actions\",\n    :actions=\"actions\",\n    :title=\"title\",\n  )\n    slot(v-if=\"hasSlot(slots.title)\", name=\"title\")\n  Section(v-if=\"sectioned\")\n    slot\n  slot(v-else)\n  div(\n    v-if=\"primaryFooterAction || (secondaryFooterActions && secondaryFooterActions.length)\",\n    :class=\"footerMarkupStyle\",\n  )\n    ButtonGroup(v-if=\"footerActionAlignment === 'right'\")\n      ButtonFrom(\n        v-if=\"secondaryFooterActions && secondaryFooterActions.length === 1\",\n        :action=\"secondaryFooterActions[0]\",\n      )\n      Popover(\n        v-else,\n        :active=\"secondaryActionsPopoverOpen\",\n        @close=\"toggleSecondaryActionsPopoverOpen\",\n      )\n        template(#activator)\n          Button(\n            :disclosure=\"true\",\n            @click=\"toggleSecondaryActionsPopoverOpen\")\n            | {{ secondaryFooterActionsDisclosureText || i18n.translate('Polaris.Common.more') }}\n        ActionList(:items=\"secondaryFooterActions\")\n      ButtonFrom(\n        v-if=\"primaryFooterAction\",\n        :action=\"primaryFooterAction\",\n        :overrides=\"{ variant: 'primary' }\",\n      )\n    ButtonGroup(v-else)\n      ButtonFrom(\n        v-if=\"primaryFooterAction\",\n        :action=\"primaryFooterAction\",\n        :overrides=\"{ variant: 'primary' }\",\n      )\n      ButtonFrom(\n        v-if=\"secondaryFooterActions && secondaryFooterActions.length === 1\",\n        :action=\"secondaryFooterActions[0]\",\n      )\n      Popover(\n        v-else,\n        :active=\"secondaryActionsPopoverOpen\",\n        @close=\"toggleSecondaryActionsPopoverOpen\",\n      )\n        template(#activator)\n          Button(\n            :disclosure=\"true\",\n            @click=\"toggleSecondaryActionsPopoverOpen\")\n            | {{ secondaryFooterActionsDisclosureText || i18n.translate('Polaris.Common.more') }}\n        ActionList(:items=\"secondaryFooterActions\")\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, useSlots, provide } from 'vue';\nimport type {\n  ComplexAction,\n  DisableableAction,\n} from '@/utilities/types';\nimport useI18n from '@/use/useI18n';\nimport { useToggle } from '@/use/useToggle';\nimport { useLegacyCardPaddingObserverRef } from '@/use/useLegacyCard';\nimport { classNames } from '@/utilities/css';\nimport { Button, ButtonFrom, ButtonGroup, Popover, ActionList } from '@/components';\nimport { useHasSlot } from '@/use/useHasSlot';\nimport styles from '@polaris/components/LegacyCard/LegacyCard.module.css';\nimport { Header, Section } from './components';\n\ninterface LegacyCardProps {\n  /** Title content for the card */\n  title?: string;\n  /** A less prominent card */\n  subdued?: boolean;\n  /** Auto wrap content in section */\n  sectioned?: boolean;\n  /** Card header actions */\n  actions?: DisableableAction[];\n  /** Primary action in the card footer */\n  primaryFooterAction?: ComplexAction;\n  /** Secondary actions in the card footer */\n  secondaryFooterActions?: ComplexAction[];\n  /** The content of the disclosure button rendered when there is more than one secondary footer action */\n  secondaryFooterActionsDisclosureText?: string;\n  /** Alignment of the footer actions on the card, defaults to right */\n  footerActionAlignment?: 'right' | 'left';\n  /** Allow the card to be hidden when printing */\n  hideOnPrint?: boolean;\n}\n\nconst props = withDefaults(defineProps<LegacyCardProps>(), {\n  footerActionAlignment: 'right',\n});\n\nconst i18n = useI18n();\nconst slots = useSlots();\nconst legacyCardRef = useLegacyCardPaddingObserverRef();\nconst { hasSlot } = useHasSlot();\n\nconst {\n  value: secondaryActionsPopoverOpen,\n  toggle: toggleSecondaryActionsPopoverOpen,\n} = useToggle(false);\n\nconst className = computed(() =>\n  classNames(\n    styles.LegacyCard,\n    props.subdued && styles.subdued,\n    props.hideOnPrint && styles.hideOnPrint,\n  ),\n);\n\nconst footerMarkupStyle = computed(() =>\n  classNames(\n    styles.Footer,\n    props.footerActionAlignment === 'left' && styles.LeftJustified,\n  ),\n);\n\nprovide('within-content-context', true);\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA,UAAM,QAAQ;AAId,UAAM,OAAO;AACb,UAAM,QAAQ;AACd,UAAM,gBAAgB;AAChB,UAAA,EAAE,YAAY;AAEd,UAAA;AAAA,MACJ,OAAO;AAAA,MACP,QAAQ;AAAA,IAAA,IACN,UAAU,KAAK;AAEnB,UAAM,YAAY;AAAA,MAAS,MACzB;AAAA,QACE,OAAO;AAAA,QACP,MAAM,WAAW,OAAO;AAAA,QACxB,MAAM,eAAe,OAAO;AAAA,MAC9B;AAAA,IAAA;AAGF,UAAM,oBAAoB;AAAA,MAAS,MACjC;AAAA,QACE,OAAO;AAAA,QACP,MAAM,0BAA0B,UAAU,OAAO;AAAA,MACnD;AAAA,IAAA;AAGF,YAAQ,0BAA0B,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}