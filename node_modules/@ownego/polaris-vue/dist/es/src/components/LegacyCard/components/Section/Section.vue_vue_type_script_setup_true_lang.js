import { defineComponent, useSlots, computed, openBlock, createElementBlock, normalizeClass, unref, createBlock, withCtx, createVNode, createTextVNode, toDisplayString, renderSlot, Fragment, renderList, createCommentVNode } from "vue";
import { u as useHasSlot } from "../../../../use/useHasSlot.js";
import { c as classNames } from "../../../../utilities/css.js";
import { _ as _sfc_main$5 } from "../../../Button/ButtonFrom.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$4 } from "../../../ButtonGroup/ButtonGroup.vue_vue_type_script_setup_true_lang.js";
import { s as styles } from "../../LegacyCard.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../../LegacyStack/LegacyStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../../../LegacyStack/components/Item/Item.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../../../Text/Text.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Section",
  props: {
    title: {},
    subdued: { type: Boolean },
    flush: { type: Boolean },
    fullWidth: { type: Boolean },
    hideOnPrint: { type: Boolean },
    actions: {}
  },
  setup(__props) {
    const props = __props;
    const { hasSlot } = useHasSlot();
    const slots = useSlots();
    const className = computed(
      () => classNames(
        styles.Section,
        props.flush && styles["Section-flush"],
        props.subdued && styles["Section-subdued"],
        props.fullWidth && styles["Section-fullWidth"],
        props.hideOnPrint && styles["Section-hideOnPrint"]
      )
    );
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(className.value)
      }, [
        _ctx.title || unref(hasSlot)(unref(slots).title) || _ctx.actions ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(unref(styles).SectionHeader)
        }, [
          _ctx.actions ? (openBlock(), createBlock(unref(_sfc_main$1), {
            key: 0,
            alignment: "baseline"
          }, {
            default: withCtx(() => [
              createVNode(unref(_sfc_main$2), { fill: "" }, {
                default: withCtx(() => [
                  typeof _ctx.title === "string" ? (openBlock(), createBlock(unref(_sfc_main$3), {
                    key: 0,
                    variant: "headingSm",
                    as: "h3",
                    fontWeight: "medium"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(toDisplayString(_ctx.title), 1)
                    ]),
                    _: 1
                  })) : renderSlot(_ctx.$slots, "title", { key: 1 })
                ]),
                _: 3
              }),
              _ctx.actions ? (openBlock(), createBlock(unref(_sfc_main$4), { key: 0 }, {
                default: withCtx(() => [
                  (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.actions, (action, index) => {
                    return openBlock(), createBlock(unref(_sfc_main$5), {
                      key: index,
                      action,
                      overrides: { variant: "plain" }
                    }, null, 8, ["action"]);
                  }), 128))
                ]),
                _: 1
              })) : createCommentVNode("", true)
            ]),
            _: 3
          })) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
            typeof _ctx.title === "string" ? (openBlock(), createBlock(unref(_sfc_main$3), {
              key: 0,
              variant: "headingSm",
              as: "h3",
              fontWeight: "medium"
            }, {
              default: withCtx(() => [
                createTextVNode(toDisplayString(_ctx.title), 1)
              ]),
              _: 1
            })) : renderSlot(_ctx.$slots, "title", { key: 1 })
          ], 64))
        ], 2)) : createCommentVNode("", true),
        unref(hasSlot)(unref(slots).default) ? renderSlot(_ctx.$slots, "default", { key: 1 }) : createCommentVNode("", true)
      ], 2);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Section.vue_vue_type_script_setup_true_lang.js.map
