import { defineComponent, useSlots, computed, openBlock, createElementBlock, normalizeClass, unref, createBlock, withCtx, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createVNode, Fragment, renderList } from "vue";
import { u as useHasSlot } from "../../../../use/useHasSlot.js";
import { _ as _sfc_main$4 } from "../../../Button/ButtonFrom.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../../../ButtonGroup/ButtonGroup.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
import { s as styles } from "../../LegacyCard.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../../../Text/Text.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Header",
  props: {
    title: {},
    actions: {}
  },
  setup(__props) {
    const { hasSlot } = useHasSlot();
    const slots = useSlots();
    const isTextOnlyTitle = computed(() => {
      var _a, _b, _c, _d, _e;
      if (slots.title && slots.title().length === 1) {
        if (((_a = slots.title()[0]) == null ? void 0 : _a.type.toString()) === "Symbol(v-txt)" || ((_b = slots.title()[0]) == null ? void 0 : _b.type.toString()) === "Symbol()") {
          return true;
        } else {
          return slots.title()[0].children && ((_c = slots.title()[0].children) == null ? void 0 : _c.length) === 1 && (((_d = slots.title()[0].children) == null ? void 0 : _d[0].type.toString()) === "Symbol(v-txt)" || ((_e = slots.title()[0].children) == null ? void 0 : _e[0].type.toString()) === "Symbol()");
        }
      }
      return false;
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(unref(styles).Header)
      }, [
        _ctx.actions || unref(hasSlot)(unref(slots).default) ? (openBlock(), createBlock(unref(_sfc_main$1), {
          key: 0,
          align: "space-between",
          blockAlign: "center",
          wrap: false,
          gap: "200"
        }, {
          default: withCtx(() => [
            isTextOnlyTitle.value ? renderSlot(_ctx.$slots, "title", { key: 0 }) : _ctx.title ? (openBlock(), createBlock(unref(_sfc_main$2), {
              key: 1,
              variant: "headingSm",
              as: "h2"
            }, {
              default: withCtx(() => [
                createTextVNode(toDisplayString(_ctx.title), 1)
              ]),
              _: 1
            })) : createCommentVNode("", true),
            createVNode(unref(_sfc_main$1), {
              blockAlign: "center",
              wrap: false,
              gap: "400"
            }, {
              default: withCtx(() => [
                _ctx.actions ? (openBlock(), createBlock(unref(_sfc_main$3), { key: 0 }, {
                  default: withCtx(() => [
                    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.actions, (action, index) => {
                      return openBlock(), createBlock(unref(_sfc_main$4), {
                        key: index,
                        action,
                        overrides: { variant: "plain" }
                      }, null, 8, ["action"]);
                    }), 128))
                  ]),
                  _: 1
                })) : createCommentVNode("", true),
                unref(hasSlot)(unref(slots).default) ? renderSlot(_ctx.$slots, "default", { key: 1 }) : createCommentVNode("", true)
              ]),
              _: 3
            })
          ]),
          _: 3
        })) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
          isTextOnlyTitle.value ? renderSlot(_ctx.$slots, "title", { key: 0 }) : _ctx.title ? (openBlock(), createBlock(unref(_sfc_main$2), {
            key: 1,
            variant: "headingSm",
            as: "h2"
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(_ctx.title), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true)
        ], 64))
      ], 2);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Header.vue_vue_type_script_setup_true_lang.js.map
