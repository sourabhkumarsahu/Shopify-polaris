import { defineComponent, ref, onMounted, openBlock, createBlock, unref, withCtx, renderSlot, createVNode } from "vue";
import { u as useTheme } from "../../../use/useTheme.js";
import { _ as _sfc_main$3 } from "../../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../../Text/Text.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../Tooltip/Tooltip.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "TruncateText",
  setup(__props) {
    const theme = useTheme();
    const textRef = ref(null);
    const isOverflowing = ref(false);
    onMounted(
      () => {
        if (textRef.value) {
          isOverflowing.value = textRef.value.scrollWidth > textRef.value.offsetWidth;
        }
      }
    );
    return (_ctx, _cache) => {
      return isOverflowing.value ? (openBlock(), createBlock(unref(_sfc_main$1), {
        key: 0,
        preferredPosition: "above",
        dismissOnMouseOut: "",
        "z-index-override": Number(unref(theme).zIndex["z-index-11"]),
        "hover-delay": 1e3
      }, {
        content: withCtx(() => [
          renderSlot(_ctx.$slots, "default")
        ]),
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), {
            as: "span",
            truncate: ""
          }, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          })
        ]),
        _: 3
      }, 8, ["z-index-override"])) : (openBlock(), createBlock(unref(_sfc_main$2), {
        key: 1,
        as: "span",
        truncate: ""
      }, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$3), {
            width: "100%",
            ref_key: "textRef",
            ref: textRef
          }, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }, 512)
        ]),
        _: 3
      }));
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=TruncateText.vue_vue_type_script_setup_true_lang.js.map
