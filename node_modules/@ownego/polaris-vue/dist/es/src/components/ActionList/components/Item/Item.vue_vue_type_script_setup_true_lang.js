import { defineComponent, useSlots, computed, openBlock, createElementBlock, Fragment, createBlock, unref, createCommentVNode, normalizeClass, withCtx, createVNode, resolveDynamicComponent, normalizeStyle, createElementVNode, createTextVNode, toDisplayString } from "vue";
import { c as classNames } from "../../../../utilities/css.js";
import { h as handleMouseUpByBlurring } from "../../../../utilities/focus.js";
import { _ as _sfc_main$6 } from "../TruncateText.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$8 } from "../../../Badge/Badge.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../../../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../../../UnstyledLink/UnstyledLink.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$5 } from "../../../Icon/Icon.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$4 } from "../../../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../../Scrollable/components/ScrollTo/ScrollTo.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$7 } from "../../../Text/Text.vue_vue_type_script_setup_true_lang.js";
const Item = "Polaris-ActionList__Item";
const active = "Polaris-ActionList--active";
const destructive = "Polaris-ActionList--destructive";
const disabled = "Polaris-ActionList--disabled";
const Prefix = "Polaris-ActionList__Prefix";
const Suffix = "Polaris-ActionList__Suffix";
const indented = "Polaris-ActionList--indented";
const menu = "Polaris-ActionList--menu";
const Text = "Polaris-ActionList__Text";
const styles = {
  Item,
  "default": "Polaris-ActionList--default",
  active,
  destructive,
  disabled,
  Prefix,
  Suffix,
  indented,
  menu,
  Text
};
const _hoisted_1 = ["className"];
const _hoisted_2 = ["className"];
const _hoisted_3 = { key: 0 };
const _hoisted_4 = { key: 1 };
const _hoisted_5 = ["className"];
const _hoisted_6 = ["id", "disabled", "role", "aria-label"];
const _hoisted_7 = ["className"];
const _hoisted_8 = ["className"];
const _hoisted_9 = { key: 0 };
const _hoisted_10 = { key: 1 };
const _hoisted_11 = ["className"];
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Item",
  props: {
    accessibilityLabel: {},
    badge: {},
    prefix: { type: [String, Number, Boolean, Function, Object, null] },
    suffix: { type: [String, Number, Boolean, Function, Object, null] },
    helpText: {},
    icon: {},
    image: {},
    ellipsis: { type: Boolean },
    truncate: { type: Boolean },
    active: { type: Boolean },
    variant: { default: "default" },
    role: {},
    disabled: { type: Boolean },
    id: {},
    content: {},
    url: {},
    external: { type: Boolean },
    target: {},
    onAction: {},
    onMouseEnter: {},
    onTouchStart: {},
    destructive: { type: Boolean }
  },
  emits: ["action"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    useSlots();
    const className = computed(() => classNames(
      styles.Item,
      props.disabled && styles.disabled,
      props.destructive && styles.destructive,
      props.active && styles.active,
      props.variant === "default" && styles.default,
      props.variant === "indented" && styles.indented,
      props.variant === "menu" && styles.menu
    ));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(Fragment, null, [
        _ctx.active ? (openBlock(), createBlock(unref(_sfc_main$1), { key: 0 })) : createCommentVNode("", true),
        _ctx.url ? (openBlock(), createBlock(unref(_sfc_main$2), {
          key: 1,
          id: _ctx.id,
          url: _ctx.disabled ? null : _ctx.url,
          class: normalizeClass(className.value),
          external: _ctx.external,
          role: _ctx.role,
          "aria-label": _ctx.accessibilityLabel,
          onClick: _cache[0] || (_cache[0] = ($event) => _ctx.disabled ? null : emits("action"))
        }, {
          default: withCtx(() => [
            createVNode(unref(_sfc_main$3), { width: "100%" }, {
              default: withCtx(() => [
                createVNode(unref(_sfc_main$4), {
                  "block-align": "center",
                  gap: "150",
                  wrap: false
                }, {
                  default: withCtx(() => [
                    _ctx.prefix ? (openBlock(), createElementBlock("span", {
                      key: 0,
                      className: unref(styles).Prefix
                    }, [
                      (openBlock(), createBlock(resolveDynamicComponent(_ctx.prefix)))
                    ], 8, _hoisted_1)) : createCommentVNode("", true),
                    _ctx.icon ? (openBlock(), createElementBlock("span", {
                      key: 1,
                      class: normalizeClass(unref(styles).Prefix)
                    }, [
                      createVNode(unref(_sfc_main$5), { source: _ctx.icon }, null, 8, ["source"])
                    ], 2)) : createCommentVNode("", true),
                    _ctx.image ? (openBlock(), createElementBlock("span", {
                      key: 2,
                      role: "presentation",
                      class: normalizeClass(unref(styles).Prefix),
                      style: normalizeStyle({ backgroundImage: `url(${_ctx.image})` })
                    }, null, 6)) : createCommentVNode("", true),
                    createElementVNode("span", {
                      className: unref(styles).Text
                    }, [
                      _ctx.helpText ? (openBlock(), createElementBlock("div", _hoisted_3, [
                        createVNode(unref(_sfc_main$3), null, {
                          default: withCtx(() => [
                            _ctx.truncate && _ctx.content ? (openBlock(), createBlock(_sfc_main$6, { key: 0 }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString(_ctx.content), 1)
                              ]),
                              _: 1
                            })) : _ctx.ellipsis ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                              createTextVNode(toDisplayString(`${_ctx.content}...`), 1)
                            ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 2 }, [
                              createTextVNode(toDisplayString(_ctx.content), 1)
                            ], 64))
                          ]),
                          _: 1
                        }),
                        createVNode(unref(_sfc_main$7), {
                          as: "span",
                          variant: "bodySm",
                          tone: _ctx.active || _ctx.disabled ? void 0 : "subdued"
                        }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(_ctx.helpText), 1)
                          ]),
                          _: 1
                        }, 8, ["tone"])
                      ])) : (openBlock(), createElementBlock("div", _hoisted_4, [
                        _ctx.truncate && _ctx.content ? (openBlock(), createBlock(_sfc_main$6, { key: 0 }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(_ctx.content), 1)
                          ]),
                          _: 1
                        })) : _ctx.ellipsis ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                          createTextVNode(toDisplayString(`${_ctx.content}...`), 1)
                        ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 2 }, [
                          createTextVNode(toDisplayString(_ctx.content), 1)
                        ], 64))
                      ]))
                    ], 8, _hoisted_2),
                    _ctx.badge ? (openBlock(), createElementBlock("span", {
                      key: 3,
                      class: normalizeClass(unref(styles).Suffix)
                    }, [
                      createVNode(unref(_sfc_main$8), {
                        tone: _ctx.badge.tone
                      }, {
                        default: withCtx(() => [
                          createTextVNode(toDisplayString(_ctx.badge.content), 1)
                        ]),
                        _: 1
                      }, 8, ["tone"])
                    ], 2)) : createCommentVNode("", true),
                    _ctx.suffix ? (openBlock(), createBlock(unref(_sfc_main$3), { key: 4 }, {
                      default: withCtx(() => [
                        createElementVNode("span", {
                          className: unref(styles).Suffix
                        }, [
                          (openBlock(), createBlock(resolveDynamicComponent(_ctx.suffix)))
                        ], 8, _hoisted_5)
                      ]),
                      _: 1
                    })) : createCommentVNode("", true)
                  ]),
                  _: 1
                })
              ]),
              _: 1
            })
          ]),
          _: 1
        }, 8, ["id", "url", "class", "external", "role", "aria-label"])) : (openBlock(), createElementBlock("button", {
          key: 2,
          id: _ctx.id,
          type: "button",
          class: normalizeClass(className.value),
          disabled: _ctx.disabled,
          role: _ctx.role,
          "aria-label": _ctx.accessibilityLabel,
          onClick: _cache[1] || (_cache[1] = ($event) => emits("action")),
          onMouseup: _cache[2] || (_cache[2] = //@ts-ignore
          (...args) => unref(handleMouseUpByBlurring) && unref(handleMouseUpByBlurring)(...args)),
          onMouseenter: _cache[3] || (_cache[3] = //@ts-ignore
          (...args) => _ctx.onMouseEnter && _ctx.onMouseEnter(...args))
        }, [
          createVNode(unref(_sfc_main$3), { width: "100%" }, {
            default: withCtx(() => [
              createVNode(unref(_sfc_main$4), {
                "block-align": "center",
                gap: "150",
                wrap: !_ctx.truncate
              }, {
                default: withCtx(() => [
                  _ctx.prefix ? (openBlock(), createElementBlock("span", {
                    key: 0,
                    className: unref(styles).Prefix
                  }, [
                    (openBlock(), createBlock(resolveDynamicComponent(_ctx.prefix)))
                  ], 8, _hoisted_7)) : createCommentVNode("", true),
                  _ctx.icon ? (openBlock(), createElementBlock("span", {
                    key: 1,
                    class: normalizeClass(unref(styles).Prefix)
                  }, [
                    createVNode(unref(_sfc_main$5), { source: _ctx.icon }, null, 8, ["source"])
                  ], 2)) : createCommentVNode("", true),
                  _ctx.image ? (openBlock(), createElementBlock("span", {
                    key: 2,
                    role: "presentation",
                    class: normalizeClass(unref(styles).Prefix),
                    style: normalizeStyle({ backgroundImage: `url(${_ctx.image})` })
                  }, null, 6)) : createCommentVNode("", true),
                  createElementVNode("span", {
                    className: unref(styles).Text
                  }, [
                    _ctx.helpText ? (openBlock(), createElementBlock("div", _hoisted_9, [
                      createVNode(unref(_sfc_main$3), null, {
                        default: withCtx(() => [
                          _ctx.truncate && _ctx.content ? (openBlock(), createBlock(_sfc_main$6, { key: 0 }, {
                            default: withCtx(() => [
                              createTextVNode(toDisplayString(_ctx.content), 1)
                            ]),
                            _: 1
                          })) : _ctx.ellipsis ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                            createTextVNode(toDisplayString(`${_ctx.content}...`), 1)
                          ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 2 }, [
                            createTextVNode(toDisplayString(_ctx.content), 1)
                          ], 64))
                        ]),
                        _: 1
                      }),
                      createVNode(unref(_sfc_main$7), {
                        as: "span",
                        variant: "bodySm",
                        tone: _ctx.active || _ctx.disabled ? void 0 : "subdued"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(toDisplayString(_ctx.helpText), 1)
                        ]),
                        _: 1
                      }, 8, ["tone"])
                    ])) : (openBlock(), createElementBlock("div", _hoisted_10, [
                      _ctx.truncate && _ctx.content ? (openBlock(), createBlock(_sfc_main$6, { key: 0 }, {
                        default: withCtx(() => [
                          createTextVNode(toDisplayString(_ctx.content), 1)
                        ]),
                        _: 1
                      })) : _ctx.ellipsis ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                        createTextVNode(toDisplayString(`${_ctx.content}...`), 1)
                      ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 2 }, [
                        createTextVNode(toDisplayString(_ctx.content), 1)
                      ], 64))
                    ]))
                  ], 8, _hoisted_8),
                  _ctx.badge ? (openBlock(), createElementBlock("span", {
                    key: 3,
                    class: normalizeClass(unref(styles).Suffix)
                  }, [
                    createVNode(unref(_sfc_main$8), {
                      tone: _ctx.badge.tone
                    }, {
                      default: withCtx(() => [
                        createTextVNode(toDisplayString(_ctx.badge.content), 1)
                      ]),
                      _: 1
                    }, 8, ["tone"])
                  ], 2)) : createCommentVNode("", true),
                  _ctx.suffix ? (openBlock(), createBlock(unref(_sfc_main$3), { key: 4 }, {
                    default: withCtx(() => [
                      createElementVNode("span", {
                        className: unref(styles).Suffix
                      }, [
                        (openBlock(), createBlock(resolveDynamicComponent(_ctx.suffix)))
                      ], 8, _hoisted_11)
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ]),
                _: 1
              }, 8, ["wrap"])
            ]),
            _: 1
          })
        ], 42, _hoisted_6))
      ], 64);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Item.vue_vue_type_script_setup_true_lang.js.map
