{"version":3,"file":"Section.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/ActionList/components/Section/Section.vue"],"sourcesContent":["<template lang=\"pug\">\nBox(\n  v-if=\"hasMultipleSections\"\n  as=\"li\",\n  role=\"presentation\",\n  borderColor=\"border-secondary\",\n  :border-block-start-width=\"!isFirst ? '025' : undefined\",\n  :padding-block-stack=\"!section.title ? '150' : undefined\",\n)\n  SectionMarkUp(\n    v-bind=\"SectionMarkUpProps\",\n    @action-any-item=\"emits('action-any-item')\",\n  )\ntemplate(v-else)\n  SectionMarkUp(\n    v-bind=\"SectionMarkUpProps\",\n    @action-any-item=\"emits('action-any-item')\",\n  )\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { Box } from '@/components';\nimport SectionMarkUp from './SectionMarkUp.vue';\nimport type { ActionListSection } from '../../../../utilities/types';\n\ninterface SectionProps {\n  /** Section of action items */\n  section: ActionListSection;\n  /** Should there be multiple sections */\n  hasMultipleSections: boolean;\n  /** Defines a specific role attribute for each action in the list */\n  actionRole?: 'option' | 'menuitem' | string;\n  /** Whether it is the first in a group of sections */\n  isFirst?: boolean;\n}\n\nconst props = defineProps<SectionProps>();\nconst emits = defineEmits<{\n  /** Callback when any item is clicked or keypressed */\n  'action-any-item': [];\n}>();\n\nconst SectionMarkUpProps = computed(() => {\n  return {\n    section: props.section,\n    hasMultipleSections: props.hasMultipleSections,\n    actionRole: props.actionRole,\n    isFirst: props.isFirst,\n  }\n});\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAqCA,UAAM,QAAQ;AACd,UAAM,QAAQ;AAKR,UAAA,qBAAqB,SAAS,MAAM;AACjC,aAAA;AAAA,QACL,SAAS,MAAM;AAAA,QACf,qBAAqB,MAAM;AAAA,QAC3B,YAAY,MAAM;AAAA,QAClB,SAAS,MAAM;AAAA,MAAA;AAAA,IACjB,CACD;;;;;;;;;;;;;;;;;;;;;;"}