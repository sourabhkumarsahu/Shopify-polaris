{"version":3,"file":"Checkbox.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/IndexTable/components/Checkbox/Checkbox.vue"],"sourcesContent":["<template lang=\"pug\">\ntd(\n  ref=\"checkboxNode\",\n  :class=\"checkboxClassName\",\n)\n  div(\n    :class=\"styles.Wrapper\",\n    @click=\"onInteraction\",\n    @keyup=\"() => {}\",\n  )\n    PolarisCheckbox(\n      :id=\"`Select-${itemId}`\",\n      label-hidden,\n      :checked=\"selected\",\n      :disabled=\"disabled\",\n    )\n      template(#label) {{ label }}\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue';\nimport { debounce } from '@polaris/utilities/debounce';\nimport { classNames } from '@/utilities/css';\nimport useI18n from '@/use/useI18n';\nimport { useIndexContext } from '@/components/IndexProvider/context';\nimport { Checkbox as PolarisCheckbox } from '@/components';\nimport { setRootProperty } from '@polaris/utilities/set-root-property';\nimport { useRowContext } from '../../context';\n\nimport sharedStyles from '@polaris/components/IndexTable/IndexTable.module.css';\nimport styles from '@polaris/components/IndexTable/components/Checkbox/Checkbox.module.css';\n\ntype CheckboxProps = {\n  accessibilityLabel?: string;\n}\n\nconst props = defineProps<CheckboxProps>();\n\nconst i18n = useI18n();\n\nconst indexContext = useIndexContext();\nconst { resourceName } = indexContext;\n\nconst { itemId, selected, disabled, position, onInteraction } = useRowContext();\n\nconst checkboxNode = ref<HTMLTableDataCellElement | null>(null);\n\nconst label = computed(() => (\n  props.accessibilityLabel || i18n.translate('Polaris.IndexTable.selectItem', {\n    resourceName: resourceName?.singular,\n  })\n));\n\nconst checkboxClassName = classNames(\n  sharedStyles.TableCell,\n  sharedStyles['TableCell-first'],\n)\n\nconst handleResize = debounce(() => {\n  if (position?.value !== 0 || !checkboxNode.value) return;\n\n  const {width} = checkboxNode.value.getBoundingClientRect();\n  setRootProperty('--pc-checkbox-offset', `${width}px`);\n});\n\nonMounted(() => {\n  handleResize();\n\n  if (!checkboxNode.value) return;\n\n  window.addEventListener('resize', handleResize);\n});\n\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', handleResize);\n});\n</script>\n"],"names":["sharedStyles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAoCA,UAAM,QAAQ;AAEd,UAAM,OAAO;AAEb,UAAM,eAAe;AACf,UAAA,EAAE,aAAiB,IAAA;AAEzB,UAAM,EAAE,QAAQ,UAAU,UAAU,UAAU,cAAA,IAAkB;AAE1D,UAAA,eAAe,IAAqC,IAAI;AAE9D,UAAM,QAAQ,SAAS,MACrB,MAAM,sBAAsB,KAAK,UAAU,iCAAiC;AAAA,MAC1E,cAAc,6CAAc;AAAA,IAC7B,CAAA,CACF;AAED,UAAM,oBAAoB;AAAA,MACxBA,SAAa;AAAA,MACbA,SAAa,iBAAiB;AAAA,IAAA;AAG1B,UAAA,eAAe,SAAS,MAAM;AAClC,WAAI,qCAAU,WAAU,KAAK,CAAC,aAAa,MAAO;AAElD,YAAM,EAAC,MAAS,IAAA,aAAa,MAAM,sBAAsB;AACzC,sBAAA,wBAAwB,GAAG,KAAK,IAAI;AAAA,IAAA,CACrD;AAED,cAAU,MAAM;AACD;AAET,UAAA,CAAC,aAAa,MAAO;AAElB,aAAA,iBAAiB,UAAU,YAAY;AAAA,IAAA,CAC/C;AAED,oBAAgB,MAAM;AACb,aAAA,oBAAoB,UAAU,YAAY;AAAA,IAAA,CAClD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}