{"version":3,"file":"IndexTableBase.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/IndexTable/IndexTableBase.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"styles.IndexTable\")\n  div(:class=\"styles.IndexTableWrapper\")\n    //- loadingMarkup\n    component(\n      v-if=\"!condensed && loading\",\n      :is=\"loadingMarkup\",\n    )\n    //- tableContentMarkup\n    template(v-if=\"itemCount > 0\")\n      EventListener(event=\"resize\", :handler=\"handleResize\")\n      div(\n        :class=\"stickyTableClassNames\",\n        role=\"presentation\",\n      )\n        Sticky(:boundingElement=\"stickyWrapper\", @sticky-change=\"onStickyChange\")\n          div(\n            v-if=\"condensed\",\n            :class=\"headerWrapperClassNames\",\n          )\n            component(:is=\"loadingMarkup\")\n            slot(name=\"sort\")\n\n          div(\n            v-else,\n            :class=\"stickyHeaderClassNames\",\n            ref=\"stickyHeaderWrapperElement\",\n          )\n            component(:is=\"loadingMarkup\")\n            div(:class=\"styles.StickyTableHeadings\", ref=\"stickyHeaderElement\")\n              template(\n                v-for=\"heading, index in headings\",\n                :key=\"getHeadingKey(heading)\",\n              )\n                component(\n                  v-for=\"headingEl in renderHeading(heading, index, 'div', { 'data-index-table-sticky-heading': true })\",\n                  :is=\"headingEl\",\n                )\n\n          component(\n            v-if=\"!condensed\",\n            :is=\"bulkActionsMarkup\",\n          )\n\n      //- bodyMarkup\n      ul(\n        v-if=\"condensed\",\n        ref=\"condensedListElement\",\n        :class=\"condensedClassNames\",\n        :data-selectmode=\"Boolean(selectMode)\",\n      )\n        slot\n\n      ScrollContainer(\n        v-else,\n        ref=\"scrollableContainerElementRef\",\n        @scroll=\"handleScrollContainerScroll\",\n      )\n        table(ref=\"tableElement\", :class=\"tableClassNames\")\n          thead\n            tr(:class=\"styles.HeadingRow\")\n              template(v-for=\"heading, index in headings\")\n                component(\n                  v-for=\"headingEl in renderHeading(heading, index, 'th', { 'data-index-table-heading': true }, getHeadingKey(heading))\",\n                  :is=\"headingEl\",\n                )\n\n          tbody(:ref=\"tableBodyRef\")\n            slot\n\n    div(v-else, :class=\"styles.EmptySearchResultWrapper\")\n      slot(v-if=\"hasSlot(slots.emptyState)\", name=\"emptyState\")\n      EmptySearchResult(\n        v-else,\n        with-illustration,\n        :title=\"i18n.translate('Polaris.IndexTable.emptySearchTitle', { resourceNamePlural: contextResourceName.plural })\",\n        :description=\"i18n.translate('Polaris.IndexTable.emptySearchDescription')\",\n      )\n\n    //- scrollBarMarkup\n    div(\n      v-if=\"itemCount > 0\",\n      ref=\"scrollContainerElement\",\n      :class=\"scrollBarWrapperClassNames\",\n    )\n      div(\n        ref=\"scrollBarElement\",\n        :class=\"styles.ScrollBar\",\n        @scroll=\"handleScrollBarScroll\",\n      )\n        div(:class=\"scrollBarClassNames\")\n\n    div(v-if=\"pagination\", :class=\"styles.PaginationWrapper\")\n      Pagination(type=\"table\", v-bind=\"pagination\")\n</template>\n\n<script setup lang=\"ts\">\nimport { type VNode, computed, h, onMounted, ref, toRef, watch } from 'vue';\nimport { debounce } from '@polaris/utilities/debounce';\nimport { classNames } from '@/utilities/css';\nimport { useToggle } from '@/use/useToggle';\nimport useI18n from '@/use/useI18n';\nimport { useHasSlot } from '@/use/useHasSlot';\nimport {\n  Badge,\n  Checkbox as PolarisCheckbox,\n  EmptySearchResult,\n  EventListener,\n  LegacyStack,\n  Sticky,\n  Spinner,\n  Text,\n  Tooltip,\n  UnstyledButton,\n  BulkActions,\n  Pagination,\n} from '@/components';\nimport {\n  useIndexContext,\n  useIndexSelectionChangeContext,\n} from '@/components/IndexProvider/context';\nimport { SELECT_ALL_ITEMS, SelectionType } from '@/components/IndexProvider/types';\nimport type { BorderRadius, Padding } from '@/components/Tooltip/types';\nimport type { TooltipOverlayProps } from '@/components/Tooltip/components/TooltipOverlay/utils';\nimport { getTableHeadingsBySelector } from './utils';\nimport { ScrollContainer } from './components';\nimport type {\n  IndexTableBaseProps,\n  IndexTableBaseEvents,\n  IndexTableSlots,\n  IndexTableHeading,\n  IndexTableSortDirection,\n  TableHeadingRect,\n} from './types';\n\nimport SortAscendingIcon from '@icons/SortAscendingIcon.svg';\nimport SortDescendingIcon from '@icons/SortDescendingIcon.svg';\nimport styles from '@polaris/components/IndexTable/IndexTable.module.css';\n\n\nconst SCROLL_BAR_PADDING = 16;\nconst SCROLL_BAR_DEBOUNCE_PERIOD = 300;\n\nconst props = withDefaults(defineProps<IndexTableBaseProps>(), {\n  // IndexTableBaseProps\n  bulkActions: () => [],\n  promotedBulkActions: () => [],\n  lastColumnSticky: false,\n  defaultSortDirection: 'descending',\n});\nconst slots = defineSlots<IndexTableSlots>();\nconst emits = defineEmits<IndexTableBaseEvents>();\n\nconst i18n = useI18n();\nconst { hasSlot } = useHasSlot();\n\nconst {\n  loading,\n  bulkSelectState,\n  resourceName: contextResourceName,\n  bulkActionsAccessibilityLabel,\n  selectMode,\n  selectable = toRef(props, 'selectable'),\n  paginatedSelectAllText,\n  itemCount,\n  hasMoreItems,\n  selectedItemsCount,\n  condensed,\n} = useIndexContext();\nconst handleSelectionChange = useIndexSelectionChangeContext();\n\nconst {\n  value: hasMoreLeftColumns,\n  toggle: toggleHasMoreLeftColumns,\n} = useToggle(false);\n\nconst tablePosition = ref({ top: 0, left: 0 });\nconst tableHeadingRects = ref<TableHeadingRect[]>([]);\n\nconst scrollableContainerElement = ref<HTMLDivElement | null>(null);\nconst scrollableContainerElementRef = ref<InstanceType<typeof ScrollContainer> | null>(null);\nconst tableElement = ref<HTMLTableElement | null>(null);\nconst tableBodyElement = ref<Element | null>(null);\nconst condensedListElement = ref<HTMLUListElement | null>(null);\n\nconst tableInitialized = ref(false);\nconst stickyWrapper = ref<HTMLElement | null>(null);\nconst hideScrollContainer = ref(true);\nconst canFitStickyColumn = ref(true);\n\nconst tableHeadings = ref<HTMLElement[]>([]);\nconst stickyTableHeadings = ref<HTMLElement[]>([]);\nconst stickyHeaderWrapperElement = ref<HTMLDivElement | null>(null);\nconst firstStickyHeaderElement = ref<HTMLDivElement | null>(null);\nconst stickyHeaderElement = ref<HTMLDivElement | null>(null);\nconst scrollBarElement = ref<HTMLDivElement | null>(null);\nconst scrollContainerElement = ref<HTMLDivElement | null>(null);\nconst scrollingWithBar = ref(false);\nconst scrollingContainer = ref(false);\nconst canScrollRight = ref(true);\nconst isMounted = ref(false);\nconst lastSortedColumnIndex = ref<number | undefined>(props.sortColumnIndex);\nconst renderAfterSelectEvent = ref(false);\nconst lastSelectedItemsCount = ref<number | 'All'>(0);\nconst hasSelected = ref(false);\n\nconst selectedItemsCountValue = computed(() => {\n  if (selectedItemsCount.value === SELECT_ALL_ITEMS || selectedItemsCount.value > 0) {\n    return selectedItemsCount.value === SELECT_ALL_ITEMS\n      ? `${itemCount.value}+`\n      : selectedItemsCount.value;\n  }\n});\n\nconst selectAllActionsLabel = computed(() => i18n.translate('Polaris.IndexTable.selected', {\n  selectedItemsCount: `${selectedItemsCountValue.value}`,\n}));\n\n\nconst paginatedSelectAllAction = computed(() => {\n  if (!selectable?.value || !hasMoreItems?.value) {\n    return;\n  }\n\n  const customActionText =\n    props.paginatedSelectAllActionText ??\n    i18n.translate('Polaris.IndexTable.selectAllItems', {\n      itemsLength: itemCount.value,\n      resourceNamePlural: contextResourceName.plural.toLocaleLowerCase(),\n    });\n\n  const actionText =\n    selectedItemsCount.value === SELECT_ALL_ITEMS\n      ? i18n.translate('Polaris.IndexTable.undo')\n      : customActionText;\n\n  return {\n    content: actionText,\n    onAction: handleSelectAllItemsInStore,\n  };\n});\n\nconst stickyTableClassNames = computed(() => classNames(\n  styles.StickyTable,\n  hasMoreLeftColumns.value && styles['StickyTable-scrolling'],\n  condensed?.value && styles['StickyTable-condensed'],\n));\n\nconst scrollBarWrapperClassNames = computed(() => classNames(\n  styles.ScrollBarContainer,\n  props.pagination && styles.ScrollBarContainerWithPagination,\n  condensed?.value && styles.scrollBarContainerCondensed,\n  hideScrollContainer.value && styles.scrollBarContainerHidden,\n));\n\nconst scrollBarClassNames = computed(() => classNames(\n  tableElement.value && tableInitialized.value && styles.ScrollBarContent,\n));\n\nconst shouldShowActions = computed(() =>\n  !condensed?.value || selectedItemsCount.value,\n);\n\nconst promotedActions = computed(() =>\n  shouldShowActions.value ? props.promotedBulkActions : [],\n);\n\nconst actions = computed(() => shouldShowActions.value ? props.bulkActions : []);\n\nconst headerWrapperClassNames = computed(() => classNames(\n  styles.HeaderWrapper,\n  (!selectable.value || condensed?.value) && styles.unselectable,\n));\n\nconst stickyHeaderClassNames = computed(() => classNames(\n  styles.StickyTableHeader,\n  isSticky.value && styles['StickyTableHeader-isSticky'],\n  // Has a sticky left column enabled\n  canFitStickyColumn.value && styles['StickyTableHeader-sticky'],\n  // ie; is scrolled to the right\n  hasMoreLeftColumns.value && styles['StickyTableHeader-scrolling'],\n  // Has a sticky right column enabled\n  canFitStickyColumn.value &&\n    props.lastColumnSticky &&\n    styles['StickyTableHeader-sticky-last'],\n  // ie; is scrolled to the left\n  canFitStickyColumn.value &&\n    props.lastColumnSticky &&\n    canScrollRight.value &&\n    styles['StickyTableHeader-sticky-scrolling'],\n));\n\nconst condensedClassNames = computed(() => classNames(\n  styles.CondensedList,\n  props.hasZebraStriping && styles.ZebraStriping,\n));\n\nconst isSortable = computed(() => props.sortable?.some((v) => v));\n\nconst tableClassNames = computed(() => classNames(\n  styles.Table,\n  hasMoreLeftColumns.value && styles['Table-scrolling'],\n  selectMode.value && styles.disableTextSelection,\n  !selectable.value && styles['Table-unselectable'],\n  canFitStickyColumn.value && styles['Table-sticky'],\n  isSortable.value && styles['Table-sortable'],\n  canFitStickyColumn.value && props.lastColumnSticky && styles['Table-sticky-last'],\n  canFitStickyColumn.value &&\n    props.lastColumnSticky &&\n    canScrollRight.value &&\n    styles['Table-sticky-scrolling'],\n  props.hasZebraStriping && styles.ZebraStriping,\n));\n\nconst bulkActionsClassName = computed(() => classNames(\n  styles.BulkActionsWrapper,\n  selectMode.value && styles.BulkActionsWrapperVisible,\n  condensed?.value && styles['StickyTableHeader-condensed'],\n  isSticky.value && styles['StickyTableHeader-isSticky'],\n));\n\nconst isSticky = ref(false);\nconst onStickyChange = (value: boolean) => {\n  isSticky.value = value;\n};\n\nconst resizeTableHeadings = debounce(() => {\n  if (!tableElement.value || !scrollableContainerElement.value) {\n    return;\n  }\n\n  const boundingRect = scrollableContainerElement.value.getBoundingClientRect();\n  tablePosition.value = {\n    top: boundingRect.top,\n    left: boundingRect.left,\n  };\n\n  tableHeadingRects.value = tableHeadings.value.map((heading) => ({\n    offsetWidth: heading.offsetWidth || 0,\n    offsetLeft: heading.offsetLeft || 0,\n  }));\n\n  if (tableHeadings.value.length === 0) {\n    return;\n  }\n\n  // update left offset for first column\n  if (selectable?.value && tableHeadings.value.length > 1) {\n    tableHeadings.value[1].style.left = `${tableHeadingRects.value[0].offsetWidth}px`;\n\n    if (stickyTableHeadings.value.length) {\n      stickyTableHeadings.value[1].style.left = `${tableHeadingRects.value[0].offsetWidth}px`;\n    }\n  }\n\n  if (stickyTableHeadings.value.length) {\n    stickyTableHeadings.value.forEach((heading, index) => {\n      heading.style.minWidth = `${tableHeadingRects.value[index]?.offsetWidth || 0}px`;\n    });\n  }\n});\n\nonMounted(() => {\n  isMounted.value = true;\n\n  handleCanScrollRight();\n\n  if (selectedItemsCount.value !== lastSelectedItemsCount.value) {\n    renderAfterSelectEvent.value = true;\n    lastSelectedItemsCount.value = selectedItemsCount.value;\n  }\n\n  if (!hasSelected.value && selectedItemsCount.value !== 0) {\n    hasSelected.value = true;\n  }\n\n  if (scrollableContainerElementRef.value) {\n    const { scrollableContainerRef } = scrollableContainerElementRef.value;\n    scrollableContainerElement.value = scrollableContainerRef;\n  }\n\n  triggerResizeTableHeadings();\n  triggerResizeTableScrollBar();\n});\n\nwatch(\n  () => [props.headings, firstStickyHeaderElement.value, tableInitialized.value],\n  triggerResizeTableHeadings,\n  );\n\nwatch(\n  () => [tableInitialized.value, condensed?.value],\n  triggerResizeTableScrollBar,\n);\n\nwatch(\n  () => tableInitialized.value,\n  () => {\n    if (tableInitialized.value) {\n      handleCanFitStickyColumn();\n    }\n  },\n);\n\nconst tableBodyRef = (node: any) => {\n  if (node !== null && !tableInitialized.value) {\n    tableInitialized.value = true;\n  }\n\n  tableBodyElement.value = node;\n};\n\nconst handleSelectAllItemsInStore = () => {\n  handleSelectionChange(\n    selectedItemsCount.value === SELECT_ALL_ITEMS\n    ? SelectionType.Page\n    : SelectionType.All,\n    true,\n  );\n};\n\nconst debounceResizeTableScrollbar = () => debounce(\n  resizeTableScrollBar,\n  SCROLL_BAR_DEBOUNCE_PERIOD,\n  {\n    trailing: true,\n  },\n);\n\nconst handleCanScrollRight = debounce(() => {\n  if (\n    !props.lastColumnSticky ||\n    !tableElement.value ||\n    !scrollableContainerElement.value\n  ) {\n    return;\n  }\n\n  const tableRect = tableElement.value.getBoundingClientRect();\n  const scrollableRect = scrollableContainerElement.value.getBoundingClientRect();\n\n  canScrollRight.value = tableRect.width > scrollableRect.width;\n});\n\nconst handleCanFitStickyColumn = () => {\n  if (!scrollableContainerElement.value || !tableHeadings.value.length) {\n    return;\n  }\n  const scrollableRect = scrollableContainerElement.value?.getBoundingClientRect();\n  const checkboxColumnWidth = selectable.value\n    ? tableHeadings.value[0].getBoundingClientRect().width\n    : 0;\n  const firstStickyColumnWidth =\n    tableHeadings.value[selectable.value ? 1 : 0].getBoundingClientRect().width;\n  const lastColumnIsNotTheFirst = selectable.value\n    ? tableHeadings.value.length > 2\n    : 1;\n  // Don't consider the last column in the calculations if it's not sticky\n  const lastStickyColumnWidth =\n    props.lastColumnSticky && lastColumnIsNotTheFirst\n      ? tableHeadings.value[\n        tableHeadings.value.length - 1\n      ].getBoundingClientRect().width\n      : 0;\n  // Secure some space for the remaining columns to be visible\n  const restOfContentMinWidth = 100;\n\n  canFitStickyColumn.value = (scrollableRect?.width || 0) >\n    firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth;\n};\n\nconst handleResize = () => {\n  // hide the scrollbar when resizing\n  scrollBarElement.value?.style.setProperty(\n    '--pc-index-table-scroll-bar-content-width',\n    `0px`,\n  );\n\n  resizeTableHeadings();\n  debounceResizeTableScrollbar();\n  handleCanScrollRight();\n  handleCanFitStickyColumn();\n};\n\nconst handleScrollContainerScroll = (tmpCanScrollLeft: boolean, tmpCanScrollRight: boolean) => {\n  if (!scrollableContainerElement.value || !scrollBarElement.value) {\n    return;\n  }\n\n  if (!scrollingWithBar.value) {\n    scrollingContainer.value = true;\n    scrollBarElement.value.scrollLeft =\n    scrollableContainerElement.value.scrollLeft;\n  }\n  scrollingWithBar.value = false;\n\n  if (stickyHeaderElement.value) {\n    stickyHeaderElement.value.scrollLeft = scrollableContainerElement.value.scrollLeft;\n  }\n\n  if (\n    (tmpCanScrollLeft && !hasMoreLeftColumns.value) ||\n    (!tmpCanScrollLeft && hasMoreLeftColumns.value)\n  ) {\n    toggleHasMoreLeftColumns();\n  }\n\n  canScrollRight.value = tmpCanScrollRight;\n};\n\nconst handleScrollBarScroll = () => {\n  if (!scrollableContainerElement.value || !scrollBarElement.value) {\n    return;\n  }\n\n  if (!scrollingContainer.value) {\n    scrollingWithBar.value = true;\n    scrollableContainerElement.value.scrollLeft = scrollBarElement.value.scrollLeft;\n  }\n  scrollingContainer.value = false;\n};\n\nconst handleTogglePage = () => {\n  handleSelectionChange(\n    SelectionType.Page,\n    Boolean(!bulkSelectState?.value || bulkSelectState?.value === 'indeterminate'),\n  );\n};\n\nconst getHeadingKey = (heading: IndexTableHeading): string => {\n  if (heading.id) {\n    return heading.id;\n  }\n\n  if (typeof heading.title === 'string') {\n    return heading.title;\n  }\n\n  return '';\n}\n\nfunction triggerResizeTableHeadings() {\n  tableHeadings.value = getTableHeadingsBySelector(\n    tableElement.value,\n    '[data-index-table-heading]',\n  );\n\n  stickyTableHeadings.value = getTableHeadingsBySelector(\n    stickyHeaderWrapperElement.value,\n    '[data-index-table-sticky-heading]',\n  );\n  resizeTableHeadings();\n};\n\nfunction resizeTableScrollBar() {\n  if (scrollBarElement.value && tableElement.value && tableInitialized.value) {\n    scrollBarElement.value.style.setProperty(\n      '--pc-index-table-scroll-bar-content-width',\n      `${tableElement.value.offsetWidth - SCROLL_BAR_PADDING}px`,\n    );\n\n    hideScrollContainer.value = scrollContainerElement.value?.offsetWidth === tableElement.value?.offsetWidth;\n  }\n}\n\nfunction triggerResizeTableScrollBar() {\n  resizeTableScrollBar();\n  stickyWrapper.value = condensed?.value\n    ? condensedListElement.value : tableElement.value;\n};\n\nfunction handleSelectModeToggle() {\n  handleSelectionChange(SelectionType.All, false);\n}\n\nfunction handleSelectPage(checked: boolean) {\n  handleSelectionChange(SelectionType.Page, checked);\n}\n\nfunction handleSortHeadingClick(\n  index: number,\n  direction: IndexTableSortDirection,\n) {\n  renderAfterSelectEvent.value = false;\n  hasSelected.value = false;\n  lastSortedColumnIndex.value = props.sortColumnIndex;\n\n  emits('sort', index, direction);\n}\n\n/**\n * ===== Render functions =====\n * This component is a bit complex, so we have to split the render functions\n * Based on original Polaris IndexTable markup functions\n */\n\n// loadingMarkup\nconst loadingMarkup = computed(() => {\n  return loading?.value && h(\n    'div',\n    {\n      class: classNames(\n        styles.LoadingPanel,\n        loading?.value && styles.LoadingPanelEntered,\n      )\n    },\n    () => h(\n      'div',\n      { class: styles.LoadingPanelRow },\n      [\n        h(Spinner, { size: 'small' }),\n        h(\n          'span',\n          { class: styles.LoadingPanelText },\n          i18n.translate('Polaris.IndexTable.resourceLoadingAccessibilityLabel', {\n            resourceNamePlural: contextResourceName.plural.toLocaleLowerCase(),\n          }),\n        ),\n      ],\n    ),\n  );\n});\n\nconst bulkActionsMarkup = computed(() => (\n  shouldShowActions.value && !condensed?.value\n  ? h(\n    'div',\n    { class: bulkActionsClassName.value },\n    [\n      h(\n        BulkActions,\n        {\n          selectMode: selectMode.value,\n          paginatedSelectAllText: paginatedSelectAllText?.value,\n          paginatedSelectAllAction: paginatedSelectAllAction.value,\n          accessibilityLabel: bulkActionsAccessibilityLabel?.value,\n          selected: bulkSelectState?.value,\n          promotedActions: promotedActions.value,\n          actions: actions.value,\n          label: selectAllActionsLabel.value,\n          buttonSize: 'micro',\n          onToggleAll: handleTogglePage,\n          onSelectModeToggle: condensed?.value && handleSelectModeToggle,\n        },\n      ),\n      loadingMarkup.value,\n    ],\n  )\n  : null\n));\n\n// renderHeading\nconst renderHeading = (\n  heading: IndexTableHeading,\n  index: number,\n  Tag: string,\n  tagProps: {[x: string]: unknown},\n  id?: string,\n) => {\n  const isSecond = index === 0;\n  const isLast = index === props.headings.length - 1;\n  const hasSortable = props.sortable?.some((value) => value === true);\n  const headingAlignment = heading.alignment || 'start';\n\n  const headingContentClassName = classNames(\n    styles.TableHeading,\n    headingAlignment === 'center' && styles['TableHeading-align-center'],\n    headingAlignment === 'end' && styles['TableHeading-align-end'],\n    hasSortable && styles['TableHeading-sortable'],\n    isSecond && styles['TableHeading-second'],\n    isLast && !heading.hidden && styles['TableHeading-last'],\n    !selectable.value && styles['TableHeading-unselectable'],\n    heading.flush && styles['TableHeading-flush'],\n  );\n\n  const stickyPositioningStyle =\n    selectable.value !== false &&\n    isSecond &&\n    tableHeadingRects.value &&\n    tableHeadingRects.value.length > 0\n      ? {left: `${tableHeadingRects.value[0].offsetWidth}px`}\n      : undefined;\n\n  const headingContent = h(\n    Tag,\n    {\n      id: id,\n      class: headingContentClassName,\n      key: getHeadingKey(heading),\n      style: stickyPositioningStyle,\n      ...tagProps,\n    },\n    renderHeadingContent(heading, index),\n  );\n\n  if (index !== 0 || !selectable.value) {\n    return [headingContent];\n  }\n\n  const checkboxClassName = classNames(\n    styles.TableHeading,\n    hasSortable && styles['TableHeading-sortable'],\n    index === 0 && styles['TableHeading-first'],\n  );\n\n  const checkboxContent = h(\n    Tag,\n    {\n      class: checkboxClassName,\n      key: `${heading}-${index}`,\n      ...tagProps,\n    },\n    renderCheckboxContent(),\n  );\n\n  return [checkboxContent, headingContent];\n};\n\n// checkboxContent\nfunction renderCheckboxContent() {\n  return h(\n    'div',\n    { class: styles.ColumnHeaderCheckboxWrapper },\n    h(\n      PolarisCheckbox,\n      {\n        label: i18n.translate('Polaris.IndexTable.selectAllLabel', {\n          resourceNamePlural: contextResourceName.plural,\n        }),\n        labelHidden: true,\n        checked: bulkSelectState?.value,\n        onChange: handleSelectPage,\n      },\n    ),\n  );\n}\n\n// headingContent\nfunction renderHeadingContent(heading: IndexTableHeading, index: number) {\n  let headingContent: VNode;\n\n  const defaultTooltipProps = {\n    width: heading.tooltipWidth ?? 'default',\n    activatorWrapper: 'div',\n    dismissOnMouseOut: true,\n    persistOnClick: heading.tooltipPersistsOnClick,\n  };\n\n  const defaultHeaderTooltipProps = {\n    ...defaultTooltipProps,\n    padding: '400' as Padding,\n    borderRadius: '200' as BorderRadius,\n    preferredPosition: 'above' as TooltipOverlayProps['preferredPosition'],\n  };\n\n  const headingTitle = h(\n    Text,\n    {\n      as: 'span',\n      variant: 'bodySm',\n      fontWeight: 'medium',\n      visuallyHidden: heading.hidden,\n    },\n    () => heading.title,\n  );\n\n  if (heading.new) {\n    headingContent = h(\n      LegacyStack,\n      { wrap: false, alignment: 'center' },\n      () => [\n        headingTitle,\n        h(Badge, { tone: 'new' }, i18n.translate('Polaris.IndexTable.onboardingBadgeText')),\n      ]\n    );\n  } else {\n    headingContent = headingTitle;\n  }\n\n  const style = {\n    '--pc-index-table-heading-extra-padding-right': heading.paddingBlockEnd\n      ? `var(--p-space-${heading.paddingBlockEnd})`\n      : '0',\n  }\n\n  if (props.sortable?.[index]) {\n    const isCurrentlySorted = index === props.sortColumnIndex;\n    const isPreviouslySorted =\n      !isCurrentlySorted && index === lastSortedColumnIndex.value;\n    const isRenderAfterSelectEvent =\n      renderAfterSelectEvent.value || (!hasSelected.value && selectedItemsCount.value !== 0);\n    const isAscending = props.sortDirection === 'ascending';\n\n    let newDirection: IndexTableSortDirection = heading.defaultSortDirection ?? props.defaultSortDirection;\n\n    let SourceComponent = newDirection === 'ascending' ? SortAscendingIcon : SortDescendingIcon;\n    if (isCurrentlySorted) {\n      newDirection = isAscending ? 'descending' : 'ascending';\n      SourceComponent =\n        props.sortDirection === 'ascending'\n          ? SortAscendingIcon\n          : SortDescendingIcon;\n    }\n\n    const iconMarkup = h(\n      'span',\n      {\n        class: classNames(\n          styles.TableHeadingSortIcon,\n          heading?.alignment === 'end' &&\n            styles['TableHeadingSortIcon-heading-align-end'],\n          isCurrentlySorted && styles['TableHeadingSortIcon-visible'],\n        ),\n      },\n      () => h(SourceComponent, { className: styles.TableHeadingSortSvg, ariaHidden: true, focusable: false }),\n    );\n\n    const defaultSortButtonProps = {\n      onClick: () => handleSortHeadingClick(index, newDirection),\n      class: classNames(\n        styles.TableHeadingSortButton,\n        !isCurrentlySorted &&\n          heading?.alignment === 'end' &&\n          styles['TableHeadingSortButton-heading-align-end'],\n        isCurrentlySorted &&\n          heading?.alignment === 'end' &&\n          styles['TableHeadingSortButton-heading-align-end-currently-sorted'],\n        isPreviouslySorted &&\n          !isRenderAfterSelectEvent &&\n          heading?.alignment === 'end' &&\n          styles['TableHeadingSortButton-heading-align-end-previously-sorted'],\n      ),\n      tabIndex: selectMode.value ? -1 : 0,\n    };\n\n    const sortMarkup = h(\n      UnstyledButton,\n      defaultSortButtonProps,\n      () => [\n        iconMarkup,\n        h(\n          'span',\n          {\n            class: classNames(\n              props.sortToggleLabels &&\n              selectMode.value &&\n              heading.tooltipContent &&\n              styles.TableHeadingTooltipUnderlinePlaceholder,\n            ),\n          },\n          () => headingContent,\n        )\n      ],\n    );\n\n    if (!props.sortToggleLabels || selectMode.value) {\n      return h(\n        'div', { class: styles.SortableTableHeadingWithCustomMarkup },\n        () => sortMarkup,\n      )\n    }\n\n    const tooltipDirection = isCurrentlySorted ? props.sortDirection! : newDirection;\n    const sortTooltipContent = props.sortToggleLabels[index][tooltipDirection];\n\n    if (!heading.tooltipContent) {\n      return h(\n        'div',\n        {\n          style,\n          class: classNames(\n            heading.paddingBlockEnd &&\n            styles['TableHeading-extra-padding-right'],\n          ),\n        },\n        h(\n          Tooltip,\n          {\n            ...defaultTooltipProps,\n            preferredPosition: 'above',\n          },\n          {\n            content: () => sortTooltipContent,\n            default: () => sortMarkup,\n          },\n        ),\n      );\n    }\n\n    if (heading.tooltipContent) {\n      return h(\n        'div',\n        {\n          style,\n          class: classNames(\n            styles.SortableTableHeadingWithCustomMarkup,\n            heading.paddingBlockEnd && styles['TableHeading-extra-padding-right'],\n          ),\n        },\n        h(\n          UnstyledButton,\n          { ...defaultSortButtonProps },\n          () => [\n            h(\n              Tooltip, { ...defaultHeaderTooltipProps },\n              {\n                content: () => heading.tooltipContent,\n                default: () => h(\n                  'span',\n                  { class: styles.TableHeadingUnderline },\n                  headingContent,\n                ),\n              }\n            ),\n            h(\n              Tooltip, { ...defaultTooltipProps, preferredPosition: 'above' },\n              () => iconMarkup,\n            ),\n          ],\n        ),\n      );\n    }\n  }\n\n  if (heading.tooltipContent) {\n    return h(\n      'div',\n      {\n        style,\n        class: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right']),\n      },\n      h(\n        Tooltip,\n        { ...defaultHeaderTooltipProps, activatorWrapper: 'span' },\n        {\n          content: () => heading.tooltipContent,\n          default: () => h(\n            'span',\n            { class: classNames(styles.TableHeadingUnderline, styles.SortableTableHeaderWrapper) },\n            headingContent,\n          ),\n        },\n      )\n    )\n  }\n\n  return h(\n    'div',\n    {\n      style,\n      class: classNames(heading.paddingBlockEnd && styles['TableHeading-extra-padding-right']),\n    },\n    headingContent,\n  );\n}\n</script>\n"],"names":["_useSlots","Spinner","BulkActions","PolarisCheckbox","Text","LegacyStack","Badge","UnstyledButton","Tooltip"],"mappings":"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"}