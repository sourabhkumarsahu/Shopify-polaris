{"version":3,"file":"context.js","sources":["../../../../../src/components/IndexTable/context.ts"],"sourcesContent":["import { inject, type Ref } from 'vue';\n\nexport interface RowContextType {\n  itemId?: Ref<string>;\n  selected?: Ref<boolean | 'indeterminate' | undefined>;\n  disabled?: Ref<boolean>;\n  position?: Ref<number>;\n  onInteraction?: (event: MouseEvent | KeyboardEvent) => void;\n}\n\nexport function useRowContext() {\n  const context = inject<RowContextType>('rowContext', {});\n\n  return context;\n}\n\nexport function useRowHoveredContext() {\n  const context = inject<Ref<boolean> | undefined>('rowHoveredContext');\n\n  return context;\n}\n\nexport interface ScrollContextType {\n  scrollableContainer: HTMLDivElement | null;\n  canScrollLeft: boolean;\n  canScrollRight: boolean;\n}\n\nexport const scrollDefaultContext = {\n  scrollableContainer: null,\n  canScrollLeft: false,\n  canScrollRight: false,\n};\n\nexport function useScrollContext() {\n  const context = inject<Ref<ScrollContextType> | undefined>('scrollContext');\n\n  return context;\n}\n"],"names":[],"mappings":";AAUO,SAAS,gBAAgB;AAC9B,QAAM,UAAU,OAAuB,cAAc,CAAE,CAAA;AAEhD,SAAA;AACT;AAcO,MAAM,uBAAuB;AAAA,EAClC,qBAAqB;AAAA,EACrB,eAAe;AAAA,EACf,gBAAgB;AAClB;"}