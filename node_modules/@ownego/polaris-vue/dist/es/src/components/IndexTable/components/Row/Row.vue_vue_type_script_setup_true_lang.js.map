{"version":3,"file":"Row.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/IndexTable/components/Row/Row.vue"],"sourcesContent":["<template lang=\"pug\">\ncomponent(\n  :is=\"condensed ? 'li' : 'tr'\",\n  :key=\"id\",\n  :id=\"id\",\n  :class=\"rowClassName\",\n  ref=\"tableRowRef\",\n  @click=\"handleRowClick\",\n  @mouseenter=\"setHoverIn\",\n  @mouseleave=\"setHoverOut\",\n)\n  Checkbox(\n    v-if=\"selectable\",\n    :accessibilityLabel=\"accessibilityLabel\",\n  )\n  slot\n</template>\n\n<script setup lang=\"ts\">\nimport { type VNode, ref, computed, provide, onMounted, type Ref, toRef, getCurrentInstance } from 'vue';\nimport { useToggle } from '@/use/useToggle';\nimport { classNames, variationName } from '@/utilities/css';\nimport type { VueNode } from '@/utilities/types';\nimport { useIndexRowContext, useIndexSelectionChangeContext } from '@/components/IndexProvider/context';\nimport { SelectionType, type Range } from '@/components/IndexProvider/types';\nimport { type RowContextType } from '../../context';\nimport { Checkbox } from '../Checkbox';\nimport styles from '@polaris/components/IndexTable/IndexTable.module.css';\n\ntype RowType = 'data' | 'subheader' | 'child';\ntype RowStatus = 'subdued' | 'success' | 'warning' | 'critical';\ntype TableRowElementType = HTMLTableRowElement & HTMLLIElement;\n\nexport type RowProps = {\n  /** A unique identifier for the row */\n  id: string;\n  /** Whether the row is selected */\n  selected?: boolean | 'indeterminate';\n  /** The zero-indexed position of the row. Used for Shift key multi-selection */\n  position: number;\n  /** Whether the row should visually indicate its status with a background color */\n  tone?: RowStatus;\n  /** Whether the row should be disabled */\n  disabled?: boolean;\n  /** A tuple array with the first and last index of the range of other rows that this row describes. All rows in the range are selected when the selection range row is selected. */\n  selectionRange?: Range;\n  /**\n   * Indicates the relationship or role of the row's contents. A \"subheader\" row displays the same as the table header. Rows of type \"child\" are indented.\n   *  @default 'data' */\n  rowType?: RowType;\n  /** Label set on the row's checkbox\n   * @default \"Select {resourceName}\"\n   */\n  accessibilityLabel?: string;\n}\n\ntype RowSlots = {\n  default: (_: VueNode) => VNode[];\n}\n\ntype RowEvents = {\n  /** Callback fired when the row is clicked and contains a data-primary-link */\n  'navigation': [id: string];\n  /** Callback fired when the row is clicked. Overrides the default click behaviour. */\n  'click': [];\n}\n\nconst props = withDefaults(defineProps<RowProps>(), {\n  rowType: 'data',\n});\nconst slots = defineSlots<RowSlots>();\nconst emits = defineEmits<RowEvents>();\n\nconst { selectable, selectMode, condensed } = useIndexRowContext();\nconst onSelectionChange = useIndexSelectionChangeContext();\n\nconst currentInstance = getCurrentInstance();\n\nconst {\n  value: hovered,\n  setTrue: setHoverIn,\n  setFalse: setHoverOut,\n} = useToggle(false);\n\nconst primaryLinkElement = ref<HTMLAnchorElement | null>(null);\nconst isNavigating = ref<boolean>(false);\nconst tableRowRef = ref<TableRowElementType | null>(null);\n\nconst rowClassName = computed(() => classNames(\n  styles.TableRow,\n  props.rowType === 'subheader' && styles['TableRow-subheader'],\n  props.rowType === 'child' && styles['TableRow-child'],\n  selectable.value && condensed?.value && styles.condensedRow,\n  props.selected && styles['TableRow-selected'],\n  hovered.value && !condensed?.value && styles['TableRow-hovered'],\n  props.disabled && styles['TableRow-disabled'],\n  props.tone && styles[variationName('tone', props.tone)],\n  !selectable.value &&\n    !currentInstance?.vnode.props?.onClick &&\n    !primaryLinkElement.value &&\n    styles['TableRow-unclickable'],\n));\n\nconst handleInteraction = (event: MouseEvent | KeyboardEvent) => {\n  event.stopPropagation();\n  let selectionType = SelectionType.Single;\n\n  if (('key' in event && event.key !== ' ') || !onSelectionChange) return;\n\n  if (event.shiftKey) {\n    selectionType = SelectionType.Multi;\n  } else if (props.selectionRange) {\n    selectionType = SelectionType.Range;\n  }\n\n  const selection: string | Range = props.selectionRange ?? props.id;\n\n  onSelectionChange(selectionType, !props.selected, selection, props.position);\n};\n\nconst handleRowClick = (event: MouseEvent) => {\n  if ((props.disabled || !selectable.value)\n    && !currentInstance?.vnode.props?.onClick\n    && !primaryLinkElement.value\n  ) {\n    return;\n  }\n\n  if (props.rowType === 'subheader') {\n    return;\n  }\n\n  if (!tableRowRef.value || isNavigating.value) {\n    return;\n  }\n\n  event.stopPropagation();\n  event.preventDefault();\n\n  if (currentInstance?.vnode.props?.onClick) {\n    emits('click');\n    return;\n  }\n\n  if (primaryLinkElement.value && !selectMode.value) {\n    isNavigating.value = true;\n    const {ctrlKey, metaKey} = event;\n\n    emits('navigation', props.id);\n\n    if (\n      (ctrlKey || metaKey) &&\n      primaryLinkElement.value instanceof HTMLAnchorElement\n    ) {\n      isNavigating.value = false;\n      window.open(primaryLinkElement.value.href, '_blank');\n      return;\n    }\n\n    primaryLinkElement.value.dispatchEvent(\n      new MouseEvent(event.type, event),\n    );\n  } else {\n    isNavigating.value = false;\n    handleInteraction(event);\n  }\n};\n\nonMounted(() => {\n  const el = tableRowRef.value?.querySelector('[data-primary-link]');\n\n  if (el) {\n    primaryLinkElement.value = el as HTMLAnchorElement;\n  }\n});\n\nconst contextValue = {\n  itemId: toRef(props, 'id'),\n  selected: toRef(props, 'selected'),\n  disabled: toRef(props, 'disabled'),\n  position: toRef(props, 'position'),\n  onInteraction: handleInteraction,\n};\n\nprovide<RowContextType>('rowContext', contextValue);\nprovide<Ref<boolean> | undefined>('rowHoveredContext', hovered);\n</script>\n"],"names":["_useSlots"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAmEA,UAAM,QAAQ;AAGAA;AACd,UAAM,QAAQ;AAEd,UAAM,EAAE,YAAY,YAAY,cAAc,mBAAmB;AACjE,UAAM,oBAAoB;AAE1B,UAAM,kBAAkB;AAElB,UAAA;AAAA,MACJ,OAAO;AAAA,MACP,SAAS;AAAA,MACT,UAAU;AAAA,IAAA,IACR,UAAU,KAAK;AAEb,UAAA,qBAAqB,IAA8B,IAAI;AACvD,UAAA,eAAe,IAAa,KAAK;AACjC,UAAA,cAAc,IAAgC,IAAI;AAElD,UAAA,eAAe,SAAS;;AAAM;AAAA,QAClC,OAAO;AAAA,QACP,MAAM,YAAY,eAAe,OAAO,oBAAoB;AAAA,QAC5D,MAAM,YAAY,WAAW,OAAO,gBAAgB;AAAA,QACpD,WAAW,UAAS,uCAAW,UAAS,OAAO;AAAA,QAC/C,MAAM,YAAY,OAAO,mBAAmB;AAAA,QAC5C,QAAQ,SAAS,EAAC,uCAAW,UAAS,OAAO,kBAAkB;AAAA,QAC/D,MAAM,YAAY,OAAO,mBAAmB;AAAA,QAC5C,MAAM,QAAQ,OAAO,cAAc,QAAQ,MAAM,IAAI,CAAC;AAAA,QACtD,CAAC,WAAW,SACV,GAAC,wDAAiB,MAAM,UAAvB,mBAA8B,YAC/B,CAAC,mBAAmB,SACpB,OAAO,sBAAsB;AAAA,MAAA;AAAA,KAChC;AAEK,UAAA,oBAAoB,CAAC,UAAsC;AAC/D,YAAM,gBAAgB;AACtB,UAAI,gBAAgB,cAAc;AAElC,UAAK,SAAS,SAAS,MAAM,QAAQ,OAAQ,CAAC,kBAAmB;AAEjE,UAAI,MAAM,UAAU;AAClB,wBAAgB,cAAc;AAAA,MAAA,WACrB,MAAM,gBAAgB;AAC/B,wBAAgB,cAAc;AAAA,MAChC;AAEM,YAAA,YAA4B,MAAM,kBAAkB,MAAM;AAEhE,wBAAkB,eAAe,CAAC,MAAM,UAAU,WAAW,MAAM,QAAQ;AAAA,IAAA;AAGvE,UAAA,iBAAiB,CAAC,UAAsB;;AAC5C,WAAK,MAAM,YAAY,CAAC,WAAW,UAC9B,GAAC,wDAAiB,MAAM,UAAvB,mBAA8B,YAC/B,CAAC,mBAAmB,OACvB;AACA;AAAA,MACF;AAEI,UAAA,MAAM,YAAY,aAAa;AACjC;AAAA,MACF;AAEA,UAAI,CAAC,YAAY,SAAS,aAAa,OAAO;AAC5C;AAAA,MACF;AAEA,YAAM,gBAAgB;AACtB,YAAM,eAAe;AAEjB,WAAA,wDAAiB,MAAM,UAAvB,mBAA8B,SAAS;AACzC,cAAM,OAAO;AACb;AAAA,MACF;AAEA,UAAI,mBAAmB,SAAS,CAAC,WAAW,OAAO;AACjD,qBAAa,QAAQ;AACf,cAAA,EAAC,SAAS,QAAW,IAAA;AAErB,cAAA,cAAc,MAAM,EAAE;AAE5B,aACG,WAAW,YACZ,mBAAmB,iBAAiB,mBACpC;AACA,uBAAa,QAAQ;AACrB,iBAAO,KAAK,mBAAmB,MAAM,MAAM,QAAQ;AACnD;AAAA,QACF;AAEA,2BAAmB,MAAM;AAAA,UACvB,IAAI,WAAW,MAAM,MAAM,KAAK;AAAA,QAAA;AAAA,MAClC,OACK;AACL,qBAAa,QAAQ;AACrB,0BAAkB,KAAK;AAAA,MACzB;AAAA,IAAA;AAGF,cAAU,MAAM;;AACd,YAAM,MAAK,iBAAY,UAAZ,mBAAmB,cAAc;AAE5C,UAAI,IAAI;AACN,2BAAmB,QAAQ;AAAA,MAC7B;AAAA,IAAA,CACD;AAED,UAAM,eAAe;AAAA,MACnB,QAAQ,MAAM,OAAO,IAAI;AAAA,MACzB,UAAU,MAAM,OAAO,UAAU;AAAA,MACjC,UAAU,MAAM,OAAO,UAAU;AAAA,MACjC,UAAU,MAAM,OAAO,UAAU;AAAA,MACjC,eAAe;AAAA,IAAA;AAGjB,YAAwB,cAAc,YAAY;AAClD,YAAkC,qBAAqB,OAAO;;;;;;;;;;;;;;;;;;;;;;;;"}