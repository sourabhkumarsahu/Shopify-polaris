import { defineComponent, useSlots, computed, openBlock, createBlock, resolveDynamicComponent, normalizeClass, withCtx, renderSlot } from "vue";
import { c as classNames } from "../../../../utilities/css.js";
import { s as styles } from "../../IndexTableBase.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Cell",
  props: {
    as: { default: "td" },
    id: {},
    className: {},
    flush: { type: Boolean },
    colSpan: {},
    scope: {},
    headers: {}
  },
  setup(__props) {
    const props = __props;
    useSlots();
    const customClassName = computed(() => classNames(
      props.className,
      styles.TableCell,
      props.flush && styles["TableCell-flush"]
    ));
    return (_ctx, _cache) => {
      return openBlock(), createBlock(resolveDynamicComponent(_ctx.as), {
        id: _ctx.id,
        class: normalizeClass(customClassName.value),
        colspan: _ctx.colSpan,
        scope: _ctx.scope,
        headers: _ctx.headers
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["id", "class", "colspan", "scope", "headers"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Cell.vue_vue_type_script_setup_true_lang.js.map
