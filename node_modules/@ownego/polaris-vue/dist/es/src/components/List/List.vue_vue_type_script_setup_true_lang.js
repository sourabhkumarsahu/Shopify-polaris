import { defineComponent, useSlots, computed, openBlock, createBlock, resolveDynamicComponent, normalizeClass, withCtx, renderSlot } from "vue";
import { c as classNames, v as variationName } from "../../utilities/css.js";
const List = "Polaris-List";
const typeNumber = "Polaris-List--typeNumber";
const Item = "Polaris-List__Item";
const spacingLoose = "Polaris-List--spacingLoose";
const styles = {
  List,
  typeNumber,
  Item,
  spacingLoose
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "List",
  props: {
    gap: { default: "loose" },
    type: { default: "bullet" }
  },
  setup(__props) {
    const props = __props;
    useSlots();
    const className = computed(() => classNames(
      styles.List,
      props.gap && styles[variationName("spacing", props.gap)],
      props.type && styles[variationName("type", props.type)]
    ));
    const listElm = computed(() => props.type === "bullet" ? "ul" : "ol");
    return (_ctx, _cache) => {
      return openBlock(), createBlock(resolveDynamicComponent(listElm.value), {
        class: normalizeClass(className.value)
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"]);
    };
  }
});
export {
  _sfc_main as _,
  styles as s
};
//# sourceMappingURL=List.vue_vue_type_script_setup_true_lang.js.map
