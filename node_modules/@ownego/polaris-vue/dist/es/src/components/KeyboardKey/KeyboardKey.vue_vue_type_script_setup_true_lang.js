import { defineComponent, useSlots, computed, openBlock, createElementBlock, normalizeClass, renderSlot } from "vue";
import { c as classNames } from "../../utilities/css.js";
const KeyboardKey = "Polaris-KeyboardKey";
const small = "Polaris-KeyboardKey--small";
const styles = {
  KeyboardKey,
  small
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "KeyboardKey",
  props: {
    size: {}
  },
  setup(__props) {
    const props = __props;
    useSlots();
    const className = computed(
      () => classNames(styles.KeyboardKey, props.size && styles[props.size])
    );
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("kbd", {
        class: normalizeClass(className.value)
      }, [
        renderSlot(_ctx.$slots, "default")
      ], 2);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=KeyboardKey.vue_vue_type_script_setup_true_lang.js.map
