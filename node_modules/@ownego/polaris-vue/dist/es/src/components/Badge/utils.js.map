{"version":3,"file":"utils.js","sources":["../../../../../src/components/Badge/utils.ts"],"sourcesContent":["\n\nimport {ProgressValue, ToneValue} from './types';\nimport type {Progress, Tone} from './types';\nimport useI18n from '@/use/useI18n';\n\nexport function getDefaultAccessibilityLabel(\n  progress?: Progress,\n  tone?: Tone,\n): string {\n\n  const i18n = useI18n();\n\n  let progressLabel = '';\n  let toneLabel = '';\n\n  if (!progress && !tone) {\n    return '';\n  }\n   switch (progress) {\n    case ProgressValue.Incomplete:\n      progressLabel = i18n.translate(\n        'Polaris.Badge.PROGRESS_LABELS.incomplete',\n      );\n      break;\n    case ProgressValue.PartiallyComplete:\n      progressLabel = i18n.translate(\n        'Polaris.Badge.PROGRESS_LABELS.partiallyComplete',\n      );\n      break;\n    case ProgressValue.Complete:\n      progressLabel = i18n.translate('Polaris.Badge.PROGRESS_LABELS.complete');\n      break;\n  }\n\n  switch (tone) {\n    case ToneValue.Info:\n    case ToneValue.InfoStrong:\n      toneLabel = i18n.translate('Polaris.Badge.TONE_LABELS.info');\n      break;\n    case ToneValue.Success:\n    case ToneValue.SuccessStrong:\n      toneLabel = i18n.translate('Polaris.Badge.TONE_LABELS.success');\n      break;\n    case ToneValue.Warning:\n    case ToneValue.WarningStrong:\n      toneLabel = i18n.translate('Polaris.Badge.TONE_LABELS.warning');\n      break;\n    case ToneValue.Critical:\n    case ToneValue.CriticalStrong:\n      toneLabel = i18n.translate('Polaris.Badge.TONE_LABELS.critical');\n      break;\n    case ToneValue.Attention:\n    case ToneValue.AttentionStrong:\n      toneLabel = i18n.translate('Polaris.Badge.TONE_LABELS.attention');\n      break;\n    case ToneValue.New:\n      toneLabel = i18n.translate('Polaris.Badge.TONE_LABELS.new');\n      break;\n    case ToneValue.ReadOnly:\n      toneLabel = i18n.translate('Polaris.Badge.TONE_LABELS.readOnly');\n      break;\n    case ToneValue.Enabled:\n      toneLabel = i18n.translate('Polaris.Badge.TONE_LABELS.enabled');\n      break;\n  }\n\n  if (!tone && progress) {\n    return progressLabel;\n  } else if (tone && !progress) {\n    return toneLabel;\n  } else {\n    return i18n.translate('Polaris.Badge.progressAndTone', {\n      progressLabel,\n      toneLabel,\n    });\n  }\n}\n"],"names":[],"mappings":";;AAMgB,SAAA,6BACd,UACA,MACQ;AAER,QAAM,OAAO;AAEb,MAAI,gBAAgB;AACpB,MAAI,YAAY;AAEZ,MAAA,CAAC,YAAY,CAAC,MAAM;AACf,WAAA;AAAA,EACT;AACC,UAAQ,UAAU;AAAA,IACjB,KAAK,cAAc;AACjB,sBAAgB,KAAK;AAAA,QACnB;AAAA,MAAA;AAEF;AAAA,IACF,KAAK,cAAc;AACjB,sBAAgB,KAAK;AAAA,QACnB;AAAA,MAAA;AAEF;AAAA,IACF,KAAK,cAAc;AACD,sBAAA,KAAK,UAAU,wCAAwC;AACvE;AAAA,EACJ;AAEA,UAAQ,MAAM;AAAA,IACZ,KAAK,UAAU;AAAA,IACf,KAAK,UAAU;AACD,kBAAA,KAAK,UAAU,gCAAgC;AAC3D;AAAA,IACF,KAAK,UAAU;AAAA,IACf,KAAK,UAAU;AACD,kBAAA,KAAK,UAAU,mCAAmC;AAC9D;AAAA,IACF,KAAK,UAAU;AAAA,IACf,KAAK,UAAU;AACD,kBAAA,KAAK,UAAU,mCAAmC;AAC9D;AAAA,IACF,KAAK,UAAU;AAAA,IACf,KAAK,UAAU;AACD,kBAAA,KAAK,UAAU,oCAAoC;AAC/D;AAAA,IACF,KAAK,UAAU;AAAA,IACf,KAAK,UAAU;AACD,kBAAA,KAAK,UAAU,qCAAqC;AAChE;AAAA,IACF,KAAK,UAAU;AACD,kBAAA,KAAK,UAAU,+BAA+B;AAC1D;AAAA,IACF,KAAK,UAAU;AACD,kBAAA,KAAK,UAAU,oCAAoC;AAC/D;AAAA,IACF,KAAK,UAAU;AACD,kBAAA,KAAK,UAAU,mCAAmC;AAC9D;AAAA,EACJ;AAEI,MAAA,CAAC,QAAQ,UAAU;AACd,WAAA;AAAA,EAAA,WACE,QAAQ,CAAC,UAAU;AACrB,WAAA;AAAA,EAAA,OACF;AACE,WAAA,KAAK,UAAU,iCAAiC;AAAA,MACrD;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EACH;AACF;"}