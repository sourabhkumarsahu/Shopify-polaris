{"version":3,"file":"Badge.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Badge/Badge.vue"],"sourcesContent":["<template lang=\"pug\">\nspan(:class=\"className\")\n  span(\n    v-if=\"progress && !icon\",\n    :class=\"styles.Icon\",\n  )\n    Icon(\n      :source=\"progressIconMap[progress]\",\n      :accessibility-label=\"accessibilityLabel\",\n    )\n  Text(\n    v-if=\"Boolean(accessibilityLabel)\",\n    as=\"span\",\n    visually-hidden,\n  ) {{ accessibilityLabel }}\n  span(\n    v-if=\"icon\",\n    :class=\"styles.Icon\",\n  )\n    Icon(:source=\"icon\")\n  Text(\n    v-if=\"hasSlot(slots.default)\",\n    as=\"span\",\n    variant=\"bodySm\",\n    :font-weight=\"tone === 'new' ? 'medium' : undefined\",\n  )\n    slot\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject } from 'vue';\nimport { Text, Icon } from '@/components';\nimport { classNames, variationName } from '@/utilities/css';\nimport { getDefaultAccessibilityLabel } from './utils';\nimport { useHasSlot } from '@/use/useHasSlot';\nimport type { Tone, Progress, Size } from './types';\nimport type { IconSource, VueNode } from '@/utilities/types';\nimport CompleteSvg from '@/assets/Badge/complete.svg';\nimport PartiallySvg from '@/assets/Badge/partially.svg';\nimport IncompleteSvg from '@/assets/Badge/incomplete.svg'\nimport styles from '@polaris/components/Badge/Badge.module.css';\n\nconst DEFAULT_SIZE: Size = 'medium';\ninterface NonMutuallyExclusiveProps {\n  /** Colors and labels the badge with the given tone. */\n  tone?: Tone;\n  /** Render a pip showing the progress of a given task. */\n  progress?: Progress;\n  /** Icon to display to the left of the badgeâ€™s content. */\n  icon?: IconSource;\n  /**\n   * @default 'medium'\n   */\n  size?: Size;\n  /** Pass a custom accessibilityLabel */\n  toneAndProgressLabelOverride?: string;\n}\n\nexport type BadgeProps = NonMutuallyExclusiveProps &\n  (\n    | {progress?: Progress; icon?: undefined}\n    | {icon?: IconSource; progress?: undefined}\n  );\n\nconst { hasSlot } = useHasSlot();\n\nconst props = withDefaults(defineProps<BadgeProps>(), {\n  size: DEFAULT_SIZE,\n});\nconst slots = defineSlots<{\n  /** The content to display inside the badge. */\n  default: (_: VueNode) => any;\n}>();\n\nconst withinFilter = inject<boolean>('within-filter', false);\n\nconst className = computed(() => {\n  return classNames(\n    styles.Badge,\n    props.tone && styles[variationName('tone', props.tone)],\n    props.size && props.size !== DEFAULT_SIZE && styles[variationName('size', props.size)],\n    withinFilter && styles.withinFilter,\n  );\n});\nconst accessibilityLabel = computed(() => {\n  return props.toneAndProgressLabelOverride\n    ? props.toneAndProgressLabelOverride\n    : getDefaultAccessibilityLabel(props.progress, props.tone);\n});\nconst progressIconMap = computed<any>(() => {\n  return {\n    complete: CompleteSvg,\n    partiallyComplete: PartiallySvg,\n    incomplete: IncompleteSvg,\n  }\n});\n</script>\n\n"],"names":["_useSlots","withinFilter"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,MAAM,eAAqB;;;;;;;;;;;AAsBrB,UAAA,EAAE,YAAY;AAEpB,UAAM,QAAQ;AAGd,UAAM,QAAQA;AAKR,UAAAC,gBAAe,OAAgB,iBAAiB,KAAK;AAErD,UAAA,YAAY,SAAS,MAAM;AACxB,aAAA;AAAA,QACL,OAAO;AAAA,QACP,MAAM,QAAQ,OAAO,cAAc,QAAQ,MAAM,IAAI,CAAC;AAAA,QACtD,MAAM,QAAQ,MAAM,SAAS,gBAAgB,OAAO,cAAc,QAAQ,MAAM,IAAI,CAAC;AAAA,QACrFA,iBAAgB,OAAO;AAAA,MAAA;AAAA,IACzB,CACD;AACK,UAAA,qBAAqB,SAAS,MAAM;AACjC,aAAA,MAAM,+BACT,MAAM,+BACN,6BAA6B,MAAM,UAAU,MAAM,IAAI;AAAA,IAAA,CAC5D;AACK,UAAA,kBAAkB,SAAc,MAAM;AACnC,aAAA;AAAA,QACL,UAAU;AAAA,QACV,mBAAmB;AAAA,QACnB,YAAY;AAAA,MAAA;AAAA,IACd,CACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}