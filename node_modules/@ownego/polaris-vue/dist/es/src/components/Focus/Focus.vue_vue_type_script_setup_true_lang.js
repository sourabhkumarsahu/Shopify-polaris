import { defineComponent, watch, onMounted, renderSlot } from "vue";
import { f as focusFirstFocusableNode } from "../../utilities/focus.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Focus",
  props: {
    disabled: { type: Boolean },
    root: {}
  },
  setup(__props) {
    const props = __props;
    const focusNode = () => {
      if (props.disabled || !props.root) return;
      if (!props.root || props.root.querySelector("[autofocus]")) return;
      focusFirstFocusableNode(props.root, false);
    };
    watch(
      [
        () => props.disabled,
        () => props.root
      ],
      () => focusNode()
    );
    onMounted(() => {
      focusNode();
    });
    return (_ctx, _cache) => {
      return renderSlot(_ctx.$slots, "default");
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Focus.vue_vue_type_script_setup_true_lang.js.map
