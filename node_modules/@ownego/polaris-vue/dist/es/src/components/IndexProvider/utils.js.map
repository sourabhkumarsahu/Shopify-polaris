{"version":3,"file":"utils.js","sources":["../../../../../src/components/IndexProvider/utils.ts"],"sourcesContent":["import { computed, ref } from 'vue';\nimport useI18n from '@/use/useI18n';\n\nimport {SELECT_ALL_ITEMS, SelectionType} from './types';\nimport type {\n  HandleSelectionChange,\n  Range,\n  BulkSelectionDataOptions,\n  HandleBulkSelectionOptions,\n} from './types';\nimport {\n  useIndexContext,\n  useIndexRowContext,\n  useIndexSelectionChangeContext,\n} from './context';\n\n\nexport function useIndexSelectionChange() {\n  const onSelectionChange = useIndexSelectionChangeContext();\n  if (!onSelectionChange) {\n    throw new Error(`Missing IndexProvider context`);\n  }\n  return onSelectionChange;\n}\n\nexport function useIndexRow() {\n  const indexRow = useIndexRowContext();\n  if (!indexRow) {\n    throw new Error(`Missing IndexProvider context`);\n  }\n  return indexRow;\n}\n\nexport function useIndexValue() {\n  const index = useIndexContext();\n  if (!index) {\n    throw new Error(`Missing IndexProvider context`);\n  }\n  return index;\n}\n\nexport function useBulkSelectionData({\n  selectedItemsCount,\n  itemCount,\n  hasMoreItems,\n  resourceName: passedResourceName,\n  defaultPaginatedSelectAllText,\n}: BulkSelectionDataOptions) {\n  const i18n = useI18n();\n\n  const selectable = computed(() => Boolean(selectedItemsCount));\n  const selectMode = computed(() => selectedItemsCount.value === 'All' || selectedItemsCount.value > 0);\n\n  const defaultResourceName = {\n    singular: i18n.translate('Polaris.IndexProvider.defaultItemSingular'),\n    plural: i18n.translate('Polaris.IndexProvider.defaultItemPlural'),\n  };\n\n  const resourceName = passedResourceName\n    ? passedResourceName\n    : defaultResourceName;\n\n  const paginatedSelectAllText = computed(() => {\n    if (!selectable || !hasMoreItems) {\n      return;\n    }\n\n    if (selectedItemsCount.value === SELECT_ALL_ITEMS) {\n      if (defaultPaginatedSelectAllText) {\n        return defaultPaginatedSelectAllText;\n      }\n      return i18n.translate('Polaris.IndexProvider.allItemsSelected', {\n        itemsLength: itemCount.value,\n        resourceNamePlural: resourceName.plural.toLocaleLowerCase(),\n      });\n    }\n\n    return;\n  });\n\n  const bulkActionsLabel = computed(() => {\n    const selectedItemsCountLabel =\n      selectedItemsCount.value === SELECT_ALL_ITEMS\n        ? `${itemCount.value}+`\n        : selectedItemsCount.value;\n\n    return i18n.translate('Polaris.IndexProvider.selected', {\n      selectedItemsCount: selectedItemsCountLabel,\n    });\n  });\n\n  const bulkActionsAccessibilityLabel = computed(() => {\n    const totalItemsCount = itemCount.value;\n    const allSelected = selectedItemsCount.value === totalItemsCount;\n\n    if (totalItemsCount === 1 && allSelected) {\n      return i18n.translate(\n        'Polaris.IndexProvider.a11yCheckboxDeselectAllSingle',\n        {\n          resourceNameSingular: resourceName.singular,\n        },\n      );\n    }\n\n    if (totalItemsCount === 1) {\n      return i18n.translate(\n        'Polaris.IndexProvider.a11yCheckboxSelectAllSingle',\n        {\n          resourceNameSingular: resourceName.singular,\n        },\n      );\n    }\n\n    if (allSelected) {\n      return i18n.translate(\n        'Polaris.IndexProvider.a11yCheckboxDeselectAllMultiple',\n        {\n          itemsLength: itemCount.value,\n          resourceNamePlural: resourceName.plural,\n        },\n      );\n    }\n\n    return i18n.translate(\n      'Polaris.IndexProvider.a11yCheckboxSelectAllMultiple',\n      {\n        itemsLength: itemCount.value,\n        resourceNamePlural: resourceName.plural,\n      },\n    );\n  });\n\n  const bulkSelectState = computed<boolean | 'indeterminate' | undefined>(() => {\n    if (!selectedItemsCount.value || selectedItemsCount.value === 0) {\n      return undefined;\n    } else if (\n      selectedItemsCount.value === SELECT_ALL_ITEMS ||\n      selectedItemsCount.value === itemCount.value\n    ) {\n      return true;\n    }\n\n    return 'indeterminate';\n  });\n\n  return {\n    paginatedSelectAllText,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    resourceName,\n    selectMode,\n    bulkSelectState,\n    selectable,\n  };\n}\n\nexport function useHandleBulkSelection({\n  onSelectionChange = () => {},\n}: HandleBulkSelectionOptions) {\n  const lastSelected = ref<number | null>(null);\n\n  const handleSelectionChange: HandleSelectionChange = (\n    selectionType: SelectionType,\n    toggleType: boolean,\n    selection?: string | Range,\n    sortOrder?: number,\n  ) => {\n    const prevSelected = lastSelected.value;\n\n    if (typeof sortOrder === 'number') {\n      lastSelected.value = sortOrder;\n    }\n\n    if (\n      selectionType === SelectionType.Single ||\n      (selectionType === SelectionType.Multi &&\n        (typeof prevSelected !== 'number' || typeof sortOrder !== 'number'))\n    ) {\n      onSelectionChange(SelectionType.Single, toggleType, selection);\n    } else if (selectionType === SelectionType.Multi) {\n      const min = Math.min(prevSelected as number, sortOrder as number);\n      const max = Math.max(prevSelected as number, sortOrder as number);\n      onSelectionChange(selectionType, toggleType, [min, max]);\n    } else if (\n      selectionType === SelectionType.Page ||\n      selectionType === SelectionType.All\n      ) {\n      onSelectionChange(selectionType, toggleType);\n    } else if (selectionType === SelectionType.Range) {\n      onSelectionChange(SelectionType.Range, toggleType, selection);\n    }\n  };\n\n  return handleSelectionChange;\n}\n"],"names":[],"mappings":";;;AAyCO,SAAS,qBAAqB;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd;AACF,GAA6B;AAC3B,QAAM,OAAO;AAEb,QAAM,aAAa,SAAS,MAAM,QAAQ,kBAAkB,CAAC;AACvD,QAAA,aAAa,SAAS,MAAM,mBAAmB,UAAU,SAAS,mBAAmB,QAAQ,CAAC;AAEpG,QAAM,sBAAsB;AAAA,IAC1B,UAAU,KAAK,UAAU,2CAA2C;AAAA,IACpE,QAAQ,KAAK,UAAU,yCAAyC;AAAA,EAAA;AAG5D,QAAA,eAAe,qBACjB,qBACA;AAEE,QAAA,yBAAyB,SAAS,MAAM;AACxC,QAAA,CAAC,cAAc,CAAC,cAAc;AAChC;AAAA,IACF;AAEI,QAAA,mBAAmB,UAAU,kBAAkB;AACjD,UAAI,+BAA+B;AAC1B,eAAA;AAAA,MACT;AACO,aAAA,KAAK,UAAU,0CAA0C;AAAA,QAC9D,aAAa,UAAU;AAAA,QACvB,oBAAoB,aAAa,OAAO,kBAAkB;AAAA,MAAA,CAC3D;AAAA,IACH;AAEA;AAAA,EAAA,CACD;AAEK,QAAA,mBAAmB,SAAS,MAAM;AAChC,UAAA,0BACJ,mBAAmB,UAAU,mBACzB,GAAG,UAAU,KAAK,MAClB,mBAAmB;AAElB,WAAA,KAAK,UAAU,kCAAkC;AAAA,MACtD,oBAAoB;AAAA,IAAA,CACrB;AAAA,EAAA,CACF;AAEK,QAAA,gCAAgC,SAAS,MAAM;AACnD,UAAM,kBAAkB,UAAU;AAC5B,UAAA,cAAc,mBAAmB,UAAU;AAE7C,QAAA,oBAAoB,KAAK,aAAa;AACxC,aAAO,KAAK;AAAA,QACV;AAAA,QACA;AAAA,UACE,sBAAsB,aAAa;AAAA,QACrC;AAAA,MAAA;AAAA,IAEJ;AAEA,QAAI,oBAAoB,GAAG;AACzB,aAAO,KAAK;AAAA,QACV;AAAA,QACA;AAAA,UACE,sBAAsB,aAAa;AAAA,QACrC;AAAA,MAAA;AAAA,IAEJ;AAEA,QAAI,aAAa;AACf,aAAO,KAAK;AAAA,QACV;AAAA,QACA;AAAA,UACE,aAAa,UAAU;AAAA,UACvB,oBAAoB,aAAa;AAAA,QACnC;AAAA,MAAA;AAAA,IAEJ;AAEA,WAAO,KAAK;AAAA,MACV;AAAA,MACA;AAAA,QACE,aAAa,UAAU;AAAA,QACvB,oBAAoB,aAAa;AAAA,MACnC;AAAA,IAAA;AAAA,EACF,CACD;AAEK,QAAA,kBAAkB,SAAgD,MAAM;AAC5E,QAAI,CAAC,mBAAmB,SAAS,mBAAmB,UAAU,GAAG;AACxD,aAAA;AAAA,IAAA,WAEP,mBAAmB,UAAU,oBAC7B,mBAAmB,UAAU,UAAU,OACvC;AACO,aAAA;AAAA,IACT;AAEO,WAAA;AAAA,EAAA,CACR;AAEM,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;AAEO,SAAS,uBAAuB;AAAA,EACrC,oBAAoB,MAAM;AAAA,EAAC;AAC7B,GAA+B;AACvB,QAAA,eAAe,IAAmB,IAAI;AAE5C,QAAM,wBAA+C,CACnD,eACA,YACA,WACA,cACG;AACH,UAAM,eAAe,aAAa;AAE9B,QAAA,OAAO,cAAc,UAAU;AACjC,mBAAa,QAAQ;AAAA,IACvB;AAGE,QAAA,kBAAkB,cAAc,UAC/B,kBAAkB,cAAc,UAC9B,OAAO,iBAAiB,YAAY,OAAO,cAAc,WAC5D;AACkB,wBAAA,cAAc,QAAQ,YAAY,SAAS;AAAA,IAAA,WACpD,kBAAkB,cAAc,OAAO;AAChD,YAAM,MAAM,KAAK,IAAI,cAAwB,SAAmB;AAChE,YAAM,MAAM,KAAK,IAAI,cAAwB,SAAmB;AAChE,wBAAkB,eAAe,YAAY,CAAC,KAAK,GAAG,CAAC;AAAA,IAAA,WAEvD,kBAAkB,cAAc,QAChC,kBAAkB,cAAc,KAC9B;AACF,wBAAkB,eAAe,UAAU;AAAA,IAAA,WAClC,kBAAkB,cAAc,OAAO;AAC9B,wBAAA,cAAc,OAAO,YAAY,SAAS;AAAA,IAC9D;AAAA,EAAA;AAGK,SAAA;AACT;"}