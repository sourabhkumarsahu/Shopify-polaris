{"version":3,"file":"types.js","sources":["../../../../../src/components/IndexProvider/types.ts"],"sourcesContent":["import { type Ref } from \"vue\";\n\nexport type IndexSelectedItems = string[] | 'All';\n\nexport const SELECT_ALL_ITEMS = 'All';\n\nexport enum SelectionType {\n  All = 'all',\n  Page = 'page',\n  Multi = 'multi',\n  Single = 'single',\n  Range = 'range',\n}\n\nexport type Range = [number, number];\n\nexport type IndexProviderProps = {\n  selectable?: boolean;\n  itemCount: number;\n  selectedItemsCount?: 'All' | number;\n  resourceName?: {\n    singular: string;\n    plural: string;\n  };\n  loading?: boolean;\n  hasMoreItems?: boolean;\n  condensed?: boolean;\n  onSelectionChange?(\n    selectionType: SelectionType,\n    toggleType: boolean,\n    selection?: string | Range,\n    position?: number,\n  ): void;\n  paginatedSelectAllText?: string;\n}\n\nexport type HandleSelectionChange = (\n  selectionType: SelectionType,\n  toggleType: boolean,\n  selection?: string | Range,\n  sortOrder?: number,\n) => void;\n\nexport interface BulkSelectionDataOptions {\n  selectedItemsCount: Ref<number | typeof SELECT_ALL_ITEMS>;\n  itemCount: Ref<number>;\n  hasMoreItems?: Ref<boolean>;\n  resourceName?: {\n    singular: string;\n    plural: string;\n  };\n  defaultPaginatedSelectAllText?: string;\n}\n\nexport interface HandleBulkSelectionOptions {\n  onSelectionChange?: IndexProviderProps['onSelectionChange'];\n}\n"],"names":["SelectionType"],"mappings":"AAIO,MAAM,mBAAmB;AAEpB,IAAA,kCAAAA,mBAAL;AACLA,iBAAA,KAAM,IAAA;AACNA,iBAAA,MAAO,IAAA;AACPA,iBAAA,OAAQ,IAAA;AACRA,iBAAA,QAAS,IAAA;AACTA,iBAAA,OAAQ,IAAA;AALEA,SAAAA;AAAA,GAAA,iBAAA,CAAA,CAAA;"}