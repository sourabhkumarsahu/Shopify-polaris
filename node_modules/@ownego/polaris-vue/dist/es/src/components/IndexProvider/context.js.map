{"version":3,"file":"context.js","sources":["../../../../../src/components/IndexProvider/context.ts"],"sourcesContent":["import { type ComputedRef, inject, type Ref } from 'vue';\nimport { SelectionType, type Range } from './types';\n\nexport interface IndexContextType {\n  loading?: Ref<boolean | undefined>;\n  bulkSelectState?: ComputedRef<boolean | 'indeterminate' | undefined>;\n  resourceName: {\n    singular: string;\n    plural: string;\n  };\n  selectedItemsCount: Ref<'All' | number>;\n  bulkActionsAccessibilityLabel?: ComputedRef<string>;\n  selectMode: ComputedRef<boolean>;\n  paginatedSelectAllText?: ComputedRef<string | undefined>;\n  itemCount: Ref<number>;\n  selectable?: Ref<boolean>;\n  hasMoreItems?: Ref<boolean | undefined>;\n  condensed?: Ref<boolean | undefined>;\n}\n\nexport const useIndexContext = () => {\n  const context = inject<IndexContextType>('indexContext');\n\n  if (!context) {\n    throw new Error(`useIndexContext: Missing IndexProvider context`);\n  }\n\n  return context;\n};\n\nexport const useIndexSelectionChangeContext = () => {\n  const context = inject<((\n    selectionType: SelectionType,\n    toggleType: boolean,\n    selection?: string | Range,\n    position?: number,\n  ) => void)>('indexSelectionChangeContext');\n\n  if (!context) {\n    throw new Error(`Missing IndexProvider context`);\n  }\n\n  return context;\n};\n\nexport interface IndexRowContextType {\n  selectable: Ref<boolean>;\n  selectMode: ComputedRef<boolean>;\n  condensed?: Ref<boolean | undefined>;\n}\n\nexport const useIndexRowContext = () => {\n  const context = inject<IndexRowContextType>('indexRowContext');\n\n  if (!context) {\n    throw new Error(`Missing IndexProvider context`);\n  }\n\n  return context;\n};\n"],"names":[],"mappings":";AAoBO,MAAM,kBAAkB,MAAM;AAC7B,QAAA,UAAU,OAAyB,cAAc;AAEvD,MAAI,CAAC,SAAS;AACN,UAAA,IAAI,MAAM,gDAAgD;AAAA,EAClE;AAEO,SAAA;AACT;AAEO,MAAM,iCAAiC,MAAM;AAC5C,QAAA,UAAU,OAKJ,6BAA6B;AAEzC,MAAI,CAAC,SAAS;AACN,UAAA,IAAI,MAAM,+BAA+B;AAAA,EACjD;AAEO,SAAA;AACT;AAQO,MAAM,qBAAqB,MAAM;AAChC,QAAA,UAAU,OAA4B,iBAAiB;AAE7D,MAAI,CAAC,SAAS;AACN,UAAA,IAAI,MAAM,+BAA+B;AAAA,EACjD;AAEO,SAAA;AACT;"}