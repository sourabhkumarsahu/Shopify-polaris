import { defineComponent, computed, openBlock, createBlock, unref, withCtx, createVNode, renderSlot } from "vue";
import { u as useBreakpoints } from "../../use/useBreakpoints.js";
import { _ as _sfc_main$2 } from "../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../ShadowBevel/ShadowBevel.vue_vue_type_script_setup_true_lang.js";
const defaultBorderRadius = "300";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Card",
  props: {
    background: { default: "bg-surface" },
    padding: { default: "400" },
    roundedAbove: { default: "sm" }
  },
  setup(__props) {
    const props = __props;
    const breakpoints = useBreakpoints();
    const isSmUp = computed(() => Boolean(breakpoints.value.smUp));
    const hasBorderRadius = computed(() => !!breakpoints.value[`${props.roundedAbove}Up`]);
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), {
        bevel: isSmUp.value,
        "box-shadow": "100",
        "border-radius": hasBorderRadius.value ? defaultBorderRadius : "0",
        "z-index": "32"
      }, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), {
            background: _ctx.background,
            padding: _ctx.padding,
            "overflow-x": "clip",
            "overflow-y": "clip",
            "min-height": "100%"
          }, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          }, 8, ["background", "padding"])
        ]),
        _: 3
      }, 8, ["bevel", "border-radius"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Card.vue_vue_type_script_setup_true_lang.js.map
