{"version":3,"file":"context.js","sources":["../../../../../src/components/Combobox/context.ts"],"sourcesContent":["import { inject, type Ref } from 'vue';\n\nexport interface ComboboxTextFieldType {\n  // Value for the TextField aria-activedescendant. (also on list context when not in combobox)\n  activeOptionId?: Ref<string | undefined>;\n  // Value for the Combobox aria-owns and TextField aria-control\n  listboxId?: Ref<string | undefined>;\n  // Value for aria-expanded on TextField\n  expanded?: Ref<boolean>;\n  // Sets the value for the Listbox aria-labelledby\n  setTextFieldLabelId?(id: string): void;\n  // Sets a boolean to enable/disable keyboard control for the Listbox\n  setTextFieldFocused?(value: boolean): void;\n  // Callback fired when TextField is focused\n  onTextFieldFocus?(): void;\n  // Callback fired when TextField is blurred\n  onTextFieldBlur?(): void;\n  // Callback fired when TextField value changes\n  onTextFieldChange?(value: string): void;\n}\n\nexport function useComboboxTextField() {\n  const context = inject<ComboboxTextFieldType | undefined>('combobox-textfield', undefined);\n\n  if (!context) {\n    throw new Error('No Combobox was provided.');\n  }\n\n  return context;\n}\n"],"names":[],"mappings":";AAqBO,SAAS,uBAAuB;AAC/B,QAAA,UAAU,OAA0C,sBAAsB,MAAS;AAEzF,MAAI,CAAC,SAAS;AACN,UAAA,IAAI,MAAM,2BAA2B;AAAA,EAC7C;AAEO,SAAA;AACT;"}