{"version":3,"file":"Autocomplete.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Autocomplete/Autocomplete.vue"],"sourcesContent":["<template lang=\"pug\">\nCombobox(\n  :allow-multiple=\"allowMultiple\",\n  :preferred-position=\"preferredPosition\",\n  :will-load-more-options=\"willLoadMoreResults\",\n  @scrolled-to-bottom=\"emits('load-more-results')\",\n)\n  template(#activator)\n    slot(name=\"textField\")\n\n  Listbox(\n    :auto-selection=\"autoSelection\",\n    @select=\"updateSelection\",\n  )\n    MappedAction(\n      v-if=\"actionBefore\",\n      v-bind=\"actionBefore\",\n    )\n\n    div(\n      v-if=\"isSection(conditionalOptions) && !noOptions\",\n      :class=\"styles.SectionWrapper\",\n    )\n      template(\n        v-for=\"{ options, title } in conditionalOptions\",\n        :key=\"title\",\n      )\n        ListboxSection(\n          v-if=\"options.length > 0\",\n          :divider=\"false\",\n        )\n          template(#title)\n            ListboxHeader {{ title }}\n\n          MappedOption(\n            v-for=\"option in options\",\n            :key=\"option.id || option.value\",\n            v-bind=\"option\",\n            :selected=\"selected.includes(option.value)\",\n            :single-selection=\"!allowMultiple\",\n          )\n\n    template(v-else-if=\"!isSection(conditionalOptions) && !noOptions\")\n      ListboxSection(\n        v-if=\"listTitle\",\n        :divider=\"false\",\n      )\n        template(#title)\n          ListboxHeader {{ listTitle }}\n\n        MappedOption(\n          v-for=\"option in conditionalOptions\",\n          :key=\"option.id || option.value\",\n          v-bind=\"option\",\n          :selected=\"selected.includes(option.value)\",\n          :single-selection=\"!allowMultiple\",\n        )\n\n      template(v-else)\n        MappedOption(\n          v-for=\"option in conditionalOptions\",\n          :key=\"option.id || option.value\",\n          v-bind=\"option\",\n          :selected=\"selected.includes(option.value)\",\n          :single-selection=\"!allowMultiple\",\n        )\n\n    ListboxLoading(\n      v-if=\"loading\",\n      :accessibility-label=\"i18n.translate('Polaris.Autocomplete.spinnerAccessibilityLabel')\",\n    )\n\n    div(\n      v-if=\"hasSlot(slots.emptyState) && options.length === 0 && !loading\",\n      role=\"status\"\n    )\n      slot(name=\"emptyState\")\n\n</template>\n\n<script setup lang=\"ts\">\nimport { type VNode, computed } from 'vue';\nimport type {\n  ActionListItemDescriptor,\n  OptionDescriptor,\n  SectionDescriptor,\n  VueNode,\n} from '@/utilities/types';\nimport { isSection } from '@/utilities/options';\nimport useI18n from '@/use/useI18n';\nimport { Combobox, type PopoverProps } from '@/components';\nimport { AutoSelection } from '@/components/Listbox/utils';\nimport { useHasSlot } from '@/use/useHasSlot';\n\nimport { MappedAction, MappedOption } from './components';\nimport styles from '@polaris/components/Autocomplete/components/MappedAction/MappedAction.module.css';\nimport { Listbox, ListboxHeader, ListboxSection, ListboxLoading } from '../Listbox';\n\ntype AutocompleteProps = {\n  /** A unique identifier for the Autocomplete */\n  id?: string;\n  /** Collection of options to be listed */\n  options: SectionDescriptor[] | OptionDescriptor[];\n  /** The selected options */\n  selected: string[];\n  /** The preferred direction to open the popover */\n  preferredPosition?: PopoverProps['preferredPosition'];\n  /** Title of the list of options */\n  listTitle?: string;\n  /** Allow more than one option to be selected */\n  allowMultiple?: boolean;\n  /** An action to render above the list of options */\n  actionBefore?: ActionListItemDescriptor & {\n    /** Specifies that if the label is too long it will wrap instead of being hidden  */\n    wrapOverflow?: boolean;\n  };\n  /** Display loading state */\n  loading?: boolean;\n  /** Indicates if more results will load dynamically */\n  willLoadMoreResults?: boolean;\n};\n\ntype AutocompleteSlots = {\n  /** The text field component attached to the list of options */\n  textField: (_?: VueNode) => VNode[];\n  /** The content to display inside the popover */\n  default: (_?: VueNode) => VNode[];\n  /** Is rendered when there are no options */\n  emptyState: (_?: VueNode) => VNode[];\n};\n\ntype AutocompleteEvents = {\n  /** Callback when the selection of options is changed */\n  'select': [selected: string[]];\n  /** Callback when the end of the list is reached */\n  'load-more-results': [];\n}\n\nconst props = defineProps<AutocompleteProps>();\nconst slots = defineSlots<AutocompleteSlots>();\nconst emits = defineEmits<AutocompleteEvents>();\n\nconst i18n = useI18n();\nconst { hasSlot } = useHasSlot();\n\nconst autoSelection = computed(() => props.actionBefore ? AutoSelection.First : undefined);\n\nconst conditionalOptions = computed(() => props.loading && !props.willLoadMoreResults ? [] : props.options);\n\nconst noOptions = computed(() => {\n  if (isSection(conditionalOptions.value)) {\n    return conditionalOptions.value.every((section) => section.options.length === 0);\n  }\n\n  return conditionalOptions.value.length === 0;\n});\n\nconst updateSelection = (newSelection: string) => {\n  if (props.actionBefore && newSelection === props.actionBefore.content) {\n    props.actionBefore.onAction && props.actionBefore.onAction();\n    return;\n  }\n\n  if (props.allowMultiple) {\n    if (props.selected.includes(newSelection)) {\n      emits('select', props.selected.filter((option) => option !== newSelection));\n    } else {\n      emits('select', [...props.selected, newSelection]);\n    }\n  } else {\n    emits('select', [newSelection]);\n  }\n};\n</script>\n"],"names":["_useSlots"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0IA,UAAM,QAAQ;AACd,UAAM,QAAQA;AACd,UAAM,QAAQ;AAEd,UAAM,OAAO;AACP,UAAA,EAAE,YAAY;AAEpB,UAAM,gBAAgB,SAAS,MAAM,MAAM,eAAe,cAAc,QAAQ,MAAS;AAEnF,UAAA,qBAAqB,SAAS,MAAM,MAAM,WAAW,CAAC,MAAM,sBAAsB,CAAA,IAAK,MAAM,OAAO;AAEpG,UAAA,YAAY,SAAS,MAAM;AAC3B,UAAA,UAAU,mBAAmB,KAAK,GAAG;AAChC,eAAA,mBAAmB,MAAM,MAAM,CAAC,YAAY,QAAQ,QAAQ,WAAW,CAAC;AAAA,MACjF;AAEO,aAAA,mBAAmB,MAAM,WAAW;AAAA,IAAA,CAC5C;AAEK,UAAA,kBAAkB,CAAC,iBAAyB;AAChD,UAAI,MAAM,gBAAgB,iBAAiB,MAAM,aAAa,SAAS;AACrE,cAAM,aAAa,YAAY,MAAM,aAAa,SAAS;AAC3D;AAAA,MACF;AAEA,UAAI,MAAM,eAAe;AACvB,YAAI,MAAM,SAAS,SAAS,YAAY,GAAG;AACnC,gBAAA,UAAU,MAAM,SAAS,OAAO,CAAC,WAAW,WAAW,YAAY,CAAC;AAAA,QAAA,OACrE;AACL,gBAAM,UAAU,CAAC,GAAG,MAAM,UAAU,YAAY,CAAC;AAAA,QACnD;AAAA,MAAA,OACK;AACC,cAAA,UAAU,CAAC,YAAY,CAAC;AAAA,MAChC;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}