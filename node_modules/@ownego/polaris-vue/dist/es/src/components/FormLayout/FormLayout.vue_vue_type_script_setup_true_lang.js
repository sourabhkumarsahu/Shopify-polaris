import { defineComponent, useSlots, ref, openBlock, createBlock, unref, withCtx, createElementBlock, Fragment, renderList, resolveDynamicComponent, renderSlot } from "vue";
import { _ as _sfc_main$1 } from "../BlockStack/BlockStack.vue_vue_type_script_setup_true_lang.js";
import { u as useExtractFragment } from "../../use/useExtractFragment.js";
import { _ as _sfc_main$2 } from "./components/Item/Item.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "FormLayout",
  props: {
    noItemWrap: { type: Boolean }
  },
  setup(__props) {
    const slots = useSlots();
    const { slotsElms } = useExtractFragment(slots.default);
    const itemRefs = ref([]);
    const isGroup = (child) => {
      return typeof child.type !== "string" && (child.type.name === "FormLayoutGroup" || child.type.__name === "FormLayoutGroup");
    };
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), { gap: "400" }, {
        default: withCtx(() => [
          !_ctx.noItemWrap ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(unref(slotsElms), (child, index) => {
            return openBlock(), createElementBlock(Fragment, { key: index }, [
              !isGroup(child) ? (openBlock(), createBlock(unref(_sfc_main$2), { key: 0 }, {
                default: withCtx(() => [
                  (openBlock(), createBlock(resolveDynamicComponent(child), {
                    ref_for: true,
                    ref: (el) => {
                      itemRefs.value[index] = el;
                    }
                  }, null, 512))
                ]),
                _: 2
              }, 1024)) : (openBlock(), createBlock(resolveDynamicComponent(child), {
                key: 1,
                ref_for: true,
                ref: (el) => {
                  itemRefs.value[index] = el;
                }
              }, null, 512))
            ], 64);
          }), 128)) : renderSlot(_ctx.$slots, "default", { key: 1 })
        ]),
        _: 3
      });
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=FormLayout.vue_vue_type_script_setup_true_lang.js.map
