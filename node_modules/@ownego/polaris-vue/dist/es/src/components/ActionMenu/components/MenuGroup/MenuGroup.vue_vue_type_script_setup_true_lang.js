import { defineComponent, useSlots, resolveComponent, openBlock, createBlock, withCtx, createVNode, unref, createTextVNode, toDisplayString, createElementBlock, normalizeClass, renderSlot, createCommentVNode } from "vue";
import { _ as _sfc_main$2 } from "../../../ActionList/ActionList.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../SecondaryAction/SecondaryAction.vue_vue_type_script_setup_true_lang.js";
const Details = "Polaris-ActionMenu-MenuGroup__Details";
const styles = {
  Details
};
const __default__ = {
  inheritAttrs: false
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  ...__default__,
  __name: "MenuGroup",
  props: {
    badge: {},
    title: {},
    actions: {},
    icon: {},
    index: {},
    accessibilityLabel: {},
    active: { type: Boolean },
    disabled: { type: Boolean },
    sections: {}
  },
  emits: ["click", "open", "close"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const slots = useSlots();
    const emits = __emit;
    const handleClose = () => {
      emits("close", props.title);
    };
    const handleClick = () => {
      emits("click");
      emits("open", props.title);
    };
    return (_ctx, _cache) => {
      const _component_Popover = resolveComponent("Popover");
      return _ctx.actions.length ? (openBlock(), createBlock(_component_Popover, {
        key: 0,
        active: Boolean(_ctx.active),
        "preferred-alignment": "left",
        hideOnPrint: "",
        onClose: handleClose
      }, {
        activator: withCtx(() => [
          createVNode(unref(_sfc_main$1), {
            disclosure: true,
            icon: _ctx.icon,
            accessibilityLabel: _ctx.accessibilityLabel,
            disabled: _ctx.disabled,
            onClick: handleClick
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(_ctx.title), 1)
            ]),
            _: 1
          }, 8, ["icon", "accessibilityLabel", "disabled"])
        ]),
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), {
            items: _ctx.actions,
            sections: _ctx.sections,
            onActionAnyItem: handleClose
          }, null, 8, ["items", "sections"]),
          unref(slots).default ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: normalizeClass(unref(styles).Details)
          }, [
            renderSlot(_ctx.$slots, "default")
          ], 2)) : createCommentVNode("", true)
        ]),
        _: 3
      }, 8, ["active"])) : createCommentVNode("", true);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=MenuGroup.vue_vue_type_script_setup_true_lang.js.map
