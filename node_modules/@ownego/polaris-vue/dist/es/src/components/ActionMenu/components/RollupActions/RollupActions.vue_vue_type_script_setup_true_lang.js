import { defineComponent, ref, openBlock, createBlock, unref, withCtx, createElementVNode, normalizeClass, createVNode, createCommentVNode } from "vue";
import { _ as _sfc_main$3 } from "../../../ActionList/ActionList.vue_vue_type_script_setup_true_lang.js";
import { u as useI18n } from "../../../../use/useI18n.js";
import { M as MenuHorizontalIcon } from "../../../../../vendor.js";
import { _ as _sfc_main$2 } from "../../../Button/Button.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../../Popover/Popover.vue_vue_type_script_setup_true_lang.js";
const RollupActivator = "Polaris-ActionMenu-RollupActions__RollupActivator";
const styles = {
  RollupActivator
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "RollupActions",
  props: {
    accessibilityLabel: {},
    items: {},
    sections: {}
  },
  setup(__props) {
    const i18n = useI18n();
    const rollupOpen = ref(false);
    const toggleRollupOpen = () => {
      rollupOpen.value = !rollupOpen.value;
    };
    return (_ctx, _cache) => {
      var _a, _b;
      return ((_a = _ctx.items) == null ? void 0 : _a.length) || ((_b = _ctx.sections) == null ? void 0 : _b.length) ? (openBlock(), createBlock(unref(_sfc_main$1), {
        key: 0,
        active: rollupOpen.value,
        preferredAlignment: "right",
        onClose: toggleRollupOpen,
        hideOnPrint: ""
      }, {
        activator: withCtx(() => [
          createElementVNode("div", {
            class: normalizeClass(unref(styles).RollupActivator)
          }, [
            createVNode(unref(_sfc_main$2), {
              outline: "",
              icon: unref(MenuHorizontalIcon),
              accessibilityLabel: _ctx.accessibilityLabel || unref(i18n).translate("Polaris.ActionMenu.RollupActions.rollupButton"),
              onClick: toggleRollupOpen
            }, null, 8, ["icon", "accessibilityLabel"])
          ], 2)
        ]),
        default: withCtx(() => [
          createVNode(unref(_sfc_main$3), {
            items: _ctx.items,
            sections: _ctx.sections,
            onActionAnyItem: toggleRollupOpen
          }, null, 8, ["items", "sections"])
        ]),
        _: 1
      }, 8, ["active"])) : createCommentVNode("", true);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=RollupActions.vue_vue_type_script_setup_true_lang.js.map
