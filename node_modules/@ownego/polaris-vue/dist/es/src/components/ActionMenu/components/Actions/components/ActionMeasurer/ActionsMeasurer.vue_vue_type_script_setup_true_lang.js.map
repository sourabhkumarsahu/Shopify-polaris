{"version":3,"file":"ActionsMeasurer.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../../../src/components/ActionMenu/components/Actions/components/ActionMeasurer/ActionsMeasurer.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  ref=\"containerNode\",\n  :class=\"styles.ActionsLayoutMeasurer\",\n)\n  SecondaryAction(\n    v-for=\"action, index in actions\",\n    v-bind=\"getSecondaryActionProps(index)\",\n    :key=\"action.content\",\n    @click=\"action.onAction?.() || undefined\",\n  ) {{ action.content }}\n  SecondaryAction(\n    v-for=\"group in groups\",\n    :key=\"group.title\",\n    :disclosure=\"true\",\n    :icon=\"group.icon\",\n  ) {{ group.title }}\n  SecondaryAction(:disclosure=\"true\") {{ defaultRollupGroup.title }}\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue';\nimport useI18n from '@/use/useI18n';\nimport type { MenuActionDescriptor, MenuGroupDescriptor } from '@/utilities/types';\nimport { useEventListener } from '@/utilities/use-event-listener';\nimport styles from '@polaris/components/ActionMenu/components/Actions/Actions.module.css';\nimport type { SecondaryActionProps } from '../../../SecondaryAction/SecondaryAction.vue';\nimport { SecondaryAction } from '../../../SecondaryAction';\n\nexport interface ActionsMeasurements {\n  containerWidth: number;\n  disclosureWidth: number;\n  hiddenActionsWidths: number[];\n}\n\nexport interface ActionsMeasurerProps {\n  /** Collection of page-level secondary actions */\n  actions?: MenuActionDescriptor[];\n  /** Collection of page-level action groups */\n  groups?: MenuGroupDescriptor[];\n}\n\nconst ACTION_SPACING = 8;\n\nconst i18n = useI18n();\n\nconst props = defineProps<ActionsMeasurerProps>();\n\nconst emits = defineEmits<{\n  /** Callback that returns true when secondary actions are rolled up into action groups, and false when not */\n  'measurements': [value: ActionsMeasurements];\n}>();\nconst containerNode = ref<HTMLDivElement | null>(null);\n\nconst defaultRollupGroup = ref<MenuGroupDescriptor>({\n  title: i18n.translate('Polaris.ActionMenu.Actions.moreActions'),\n  actions: [],\n});\n\nconst handleMeasurement = () => {\n  if (!containerNode.value) {\n    return;\n  }\n\n  const containerWidth = containerNode.value.offsetWidth;\n  const hiddenActionNodes = containerNode.value.children;\n  const hiddenActionNodesArray = Array.from(hiddenActionNodes);\n  const hiddenActionsWidths = hiddenActionNodesArray.map((node) => {\n    const buttonWidth = Math.ceil(node.getBoundingClientRect().width);\n    return buttonWidth + ACTION_SPACING;\n  });\n  const disclosureWidth = hiddenActionsWidths.pop() || 0;\n\n  emits('measurements', {\n    containerWidth,\n    disclosureWidth,\n    hiddenActionsWidths,\n  });\n};\n\nonMounted(() => {\n  handleMeasurement();\n});\n\nconst getSecondaryActionProps = (index: number) => (\n  props.actions?.[index] as SecondaryActionProps\n);\n\nuseEventListener('resize', handleMeasurement);\n</script>\n"],"names":[],"mappings":";;;;;AA0CA,MAAM,iBAAiB;;;;;;;;;AAEvB,UAAM,OAAO;AAEb,UAAM,QAAQ;AAEd,UAAM,QAAQ;AAIR,UAAA,gBAAgB,IAA2B,IAAI;AAErD,UAAM,qBAAqB,IAAyB;AAAA,MAClD,OAAO,KAAK,UAAU,wCAAwC;AAAA,MAC9D,SAAS,CAAC;AAAA,IAAA,CACX;AAED,UAAM,oBAAoB,MAAM;AAC1B,UAAA,CAAC,cAAc,OAAO;AACxB;AAAA,MACF;AAEM,YAAA,iBAAiB,cAAc,MAAM;AACrC,YAAA,oBAAoB,cAAc,MAAM;AACxC,YAAA,yBAAyB,MAAM,KAAK,iBAAiB;AAC3D,YAAM,sBAAsB,uBAAuB,IAAI,CAAC,SAAS;AAC/D,cAAM,cAAc,KAAK,KAAK,KAAK,sBAAA,EAAwB,KAAK;AAChE,eAAO,cAAc;AAAA,MAAA,CACtB;AACK,YAAA,kBAAkB,oBAAoB,IAAA,KAAS;AAErD,YAAM,gBAAgB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,MAAA,CACD;AAAA,IAAA;AAGH,cAAU,MAAM;AACI;IAAA,CACnB;AAED,UAAM,0BAA0B,CAAC,UAC/B;;AAAA,yBAAM,YAAN,mBAAgB;AAAA;AAGlB,qBAAiB,UAAU,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}