{"version":3,"file":"MenuGroup.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/ActionMenu/components/MenuGroup/MenuGroup.vue"],"sourcesContent":["<template lang=\"pug\">\nPopover(\n  v-if=\"actions.length\",\n  :active=\"Boolean(active)\",\n  preferred-alignment=\"left\",\n  hideOnPrint,\n  @close=\"handleClose\",\n)\n  template(#activator)\n    SecondaryAction(\n      :disclosure=\"true\",\n      :icon=\"icon\",\n      :accessibilityLabel=\"accessibilityLabel\",\n      :disabled=\"disabled\",\n      @click=\"handleClick\",\n    ) {{ title }}\n  ActionList(\n    :items=\"actions\",\n    :sections=\"sections\",\n    @action-any-item=\"handleClose\",\n  )\n  div(\n    v-if=\"slots.default\",\n    :class=\"styles.Details\",\n  )\n    slot\n</template>\n\n<script lang=\"ts\">\nexport default {\n  inheritAttrs: false,\n}\n</script>\n\n<script setup lang=\"ts\">\nimport { useSlots } from 'vue';\nimport type {\n  IconableAction,\n  ActionListItemDescriptor,\n  ActionListSection,\n} from '@/utilities/types';\nimport { ActionList } from '@/components';\nimport styles from '@polaris/components/ActionMenu/components/MenuGroup/MenuGroup.module.css';\nimport { SecondaryAction } from '../SecondaryAction';\n\nexport interface MenuGroupProps {\n  badge?: {\n    status: 'new';\n    content: string;\n  };\n  /** Menu group title */\n  title: string;\n  /** List of actions */\n  actions: ActionListItemDescriptor[];\n  /** Icon to display */\n  icon?: IconableAction['icon'];\n  /** Zero-indexed numerical position. Overrides the group's order in the menu. */\n  index?: number;\n  /** Visually hidden menu description for screen readers */\n  accessibilityLabel?: string;\n  /** Whether or not the menu is open */\n  active?: boolean;\n  /** Whether or not the menu is disable */\n  disabled?: boolean;\n  /** Collection of sectioned action items */\n  sections?: ActionListSection[];\n}\n\nconst props = defineProps<MenuGroupProps>();\n\nconst slots = useSlots();\n\nconst emits = defineEmits<{\n  (e: 'click'): void;\n  (e: 'open', title: string): void;\n  (e: 'close', title: string): void;\n}>();\n\nconst handleClose = () => {\n  emits('close', props.title);\n};\n\nconst handleClick = () => {\n  emits('click');\n  emits('open', props.title);\n};\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;AA6BA,MAAA,cAAe;AAAA,EACb,cAAc;AAChB;;;;;;;;;;;;;;;;;AAqCA,UAAM,QAAQ;AAEd,UAAM,QAAQ;AAEd,UAAM,QAAQ;AAMd,UAAM,cAAc,MAAM;AAClB,YAAA,SAAS,MAAM,KAAK;AAAA,IAAA;AAG5B,UAAM,cAAc,MAAM;AACxB,YAAM,OAAO;AACP,YAAA,QAAQ,MAAM,KAAK;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}