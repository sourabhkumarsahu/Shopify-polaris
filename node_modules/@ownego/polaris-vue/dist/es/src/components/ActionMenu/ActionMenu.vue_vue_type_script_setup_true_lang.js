import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, createBlock, unref, createCommentVNode } from "vue";
import { c as classNames } from "../../utilities/css.js";
import { _ as _sfc_main$2 } from "./components/Actions/Actions.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "./components/RollupActions/RollupActions.vue_vue_type_script_setup_true_lang.js";
const ActionMenu = "Polaris-ActionMenu";
const styles = {
  ActionMenu
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "ActionMenu",
  props: {
    actions: {},
    groups: {},
    rollup: { type: Boolean },
    rollupActionsLabel: {}
  },
  emits: ["action-rollup"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const actionMenuClassNames = computed(
      () => classNames(
        styles.ActionMenu,
        props.rollup && styles.rollup
      )
    );
    const rollupSections = computed(
      () => {
        var _a;
        return (_a = props.groups) == null ? void 0 : _a.map((group) => convertGroupToSection(group));
      }
    );
    const actionListItems = computed(() => props.actions);
    const convertGroupToSection = ({
      title,
      actions,
      disabled
    }) => {
      return {
        title,
        items: actions.map((action) => ({
          ...action,
          disabled: disabled || action.disabled
        }))
      };
    };
    const onActionRollUp = (hasRolledUp) => {
      emits("action-rollup", hasRolledUp);
    };
    return (_ctx, _cache) => {
      var _a, _b;
      return ((_a = _ctx.actions) == null ? void 0 : _a.length) !== 0 || ((_b = _ctx.groups) == null ? void 0 : _b.length) !== 0 ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(actionMenuClassNames.value)
      }, [
        _ctx.rollup ? (openBlock(), createBlock(unref(_sfc_main$1), {
          key: 0,
          accessibilityLabel: _ctx.rollupActionsLabel,
          items: actionListItems.value,
          sections: rollupSections.value
        }, null, 8, ["accessibilityLabel", "items", "sections"])) : (openBlock(), createBlock(unref(_sfc_main$2), {
          key: 1,
          actions: _ctx.actions,
          groups: _ctx.groups,
          onActionRollup: onActionRollUp
        }, null, 8, ["actions", "groups"]))
      ], 2)) : createCommentVNode("", true);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=ActionMenu.vue_vue_type_script_setup_true_lang.js.map
