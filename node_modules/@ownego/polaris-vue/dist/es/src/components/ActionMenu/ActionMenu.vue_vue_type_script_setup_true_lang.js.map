{"version":3,"file":"ActionMenu.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/ActionMenu/ActionMenu.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  v-if=\"actions?.length !== 0 || groups?.length !== 0\",\n  :class=\"actionMenuClassNames\",\n)\n  RollupActions(\n    v-if=\"rollup\",\n    :accessibilityLabel=\"rollupActionsLabel\",\n    :items=\"actionListItems\",\n    :sections=\"rollupSections\",\n  )\n  Actions(\n    v-else,\n    :actions=\"actions\",\n    :groups=\"groups\",\n    @action-rollup=\"onActionRollUp\",\n  )\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport { classNames } from '@/utilities/css';\nimport type {\n  MenuActionDescriptor,\n  MenuGroupDescriptor,\n  ActionListSection,\n  ActionListItemDescriptor,\n} from '@/utilities/types';\nimport { Actions, RollupActions } from './components';\nimport styles from '@polaris/components/ActionMenu/ActionMenu.module.css';\n\nexport interface ActionMenuProps {\n  /** Collection of page-level secondary actions */\n  actions?: MenuActionDescriptor[];\n  /** Collection of page-level action groups */\n  groups?: MenuGroupDescriptor[];\n  /** Roll up all actions into a Popover > ActionList */\n  rollup?: boolean;\n  /** Label for rolled up actions activator */\n  rollupActionsLabel?: string;\n}\n\nconst props = defineProps<ActionMenuProps>();\n\nconst emits = defineEmits<{\n  /** Callback that returns true when secondary actions are rolled up into action groups, and false when not */\n  (event: 'action-rollup', hasRolledUp: boolean): void;\n}>();\n\nconst actionMenuClassNames = computed(() =>\n  classNames(\n    styles.ActionMenu,\n    props.rollup && styles.rollup,\n  ),\n);\n\nconst rollupSections = computed(() =>\n  props.groups?.map((group) => convertGroupToSection(group)),\n);\n\nconst actionListItems = computed(() => props.actions as ActionListItemDescriptor[]);\n\nconst convertGroupToSection = ({\n  title,\n  actions,\n  disabled,\n}: MenuGroupDescriptor) => {\n  return {\n    title,\n    items: actions.map((action) => ({\n      ...action,\n      disabled: disabled || action.disabled,\n    })),\n  } as ActionListSection;\n}\n\nconst onActionRollUp = (hasRolledUp: boolean) => {\n  emits('action-rollup', hasRolledUp);\n};\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AA0CA,UAAM,QAAQ;AAEd,UAAM,QAAQ;AAKd,UAAM,uBAAuB;AAAA,MAAS,MACpC;AAAA,QACE,OAAO;AAAA,QACP,MAAM,UAAU,OAAO;AAAA,MACzB;AAAA,IAAA;AAGF,UAAM,iBAAiB;AAAA,MAAS,MAC9B;;AAAA,2BAAM,WAAN,mBAAc,IAAI,CAAC,UAAU,sBAAsB,KAAK;AAAA;AAAA,IAAC;AAG3D,UAAM,kBAAkB,SAAS,MAAM,MAAM,OAAqC;AAElF,UAAM,wBAAwB,CAAC;AAAA,MAC7B;AAAA,MACA;AAAA,MACA;AAAA,IAAA,MACyB;AAClB,aAAA;AAAA,QACL;AAAA,QACA,OAAO,QAAQ,IAAI,CAAC,YAAY;AAAA,UAC9B,GAAG;AAAA,UACH,UAAU,YAAY,OAAO;AAAA,QAAA,EAC7B;AAAA,MAAA;AAAA,IACJ;AAGI,UAAA,iBAAiB,CAAC,gBAAyB;AAC/C,YAAM,iBAAiB,WAAW;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;"}