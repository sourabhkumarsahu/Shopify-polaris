import { defineComponent, useSlots, computed, openBlock, createElementBlock, normalizeClass, unref, createBlock, createSlots, withCtx, createVNode, mergeProps, renderSlot } from "vue";
import { c as classNames } from "../../../../utilities/css.js";
import { u as useHasSlot } from "../../../../use/useHasSlot.js";
import { _ as _sfc_main$2 } from "../../../Button/Button.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../../Tooltip/Tooltip.vue_vue_type_script_setup_true_lang.js";
const SecondaryAction = "Polaris-ActionMenu-SecondaryAction";
const critical = "Polaris-ActionMenu-SecondaryAction--critical";
const styles = {
  SecondaryAction,
  critical
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "SecondaryAction",
  props: {
    helpText: {},
    destructive: { type: Boolean },
    size: {},
    textAlign: {},
    fullWidth: { type: Boolean },
    disclosure: { type: [String, Boolean] },
    removeUnderline: { type: Boolean },
    icon: {},
    dataPrimaryLink: { type: Boolean },
    tone: {},
    variant: {},
    id: {},
    url: {},
    external: { type: Boolean },
    target: {},
    download: { type: [String, Boolean] },
    submit: { type: Boolean },
    disabled: { type: Boolean },
    loading: { type: Boolean },
    pressed: { type: Boolean },
    accessibilityLabel: {},
    role: {},
    ariaControls: {},
    ariaExpanded: { type: Boolean },
    ariaDescribedBy: {},
    ariaChecked: {}
  },
  emits: ["click"],
  setup(__props, { emit: __emit }) {
    const slots = useSlots();
    const props = __props;
    const emits = __emit;
    const { hasSlot } = useHasSlot();
    const className = computed(
      () => classNames(
        styles.SecondaryAction,
        props.tone === "critical" && styles.critical
      )
    );
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(className.value)
      }, [
        _ctx.helpText || unref(hasSlot)(slots.helpText) ? (openBlock(), createBlock(unref(_sfc_main$1), {
          key: 0,
          preferredPosition: "below",
          content: _ctx.helpText || ""
        }, createSlots({
          default: withCtx(() => [
            createVNode(unref(_sfc_main$2), mergeProps(props, {
              onClick: _cache[0] || (_cache[0] = ($event) => emits("click")),
              tone: _ctx.destructive ? "critical" : void 0
            }), {
              default: withCtx(() => [
                renderSlot(_ctx.$slots, "default")
              ]),
              _: 3
            }, 16, ["tone"])
          ]),
          _: 2
        }, [
          unref(hasSlot)(slots.helpText) ? {
            name: "content",
            fn: withCtx(() => [
              renderSlot(_ctx.$slots, "helpText")
            ]),
            key: "0"
          } : void 0
        ]), 1032, ["content"])) : (openBlock(), createBlock(unref(_sfc_main$2), mergeProps({ key: 1 }, props, {
          tone: _ctx.destructive ? "critical" : void 0,
          onClick: _cache[1] || (_cache[1] = ($event) => emits("click"))
        }), {
          default: withCtx(() => [
            renderSlot(_ctx.$slots, "default")
          ]),
          _: 3
        }, 16, ["tone"]))
      ], 2);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=SecondaryAction.vue_vue_type_script_setup_true_lang.js.map
