{"version":3,"file":"ResourceList.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/ResourceList/ResourceList.vue"],"sourcesContent":["<template lang=\"pug\">\n//-FilterControl\ndiv(\n  v-if=\"hasSlot(slots.filterControl)\",\n  :class=\"classNames(!flushFilters && styles.FiltersWrapper)\",\n)\n  slot(name=\"filterControl\")\ndiv(\n  :class=\"resourceListWrapperClassName\",\n)\n  //-HeaderMarkup\n  div(\n    v-if=\"showHeaderMarkup\",\n    :class=\"styles.HeaderOuterWrapper\",\n  )\n    Sticky(\n      :bounding-element=\"listRef\",\n      @sticky-change=\"handleStickyChange\",\n    )\n      div(:class=\"headerClassName\")\n        //- Header wrapper overlay\n        div(v-if=\"loading\", :class=\"styles['HeaderWrapper-overlay']\")\n        //- Header content wrapper\n        div(:class=\"styles.HeaderContentWrapper\")\n          div(:class=\"styles.HeaderTitleWrapper\")\n            Text(\n              as=\"span\",\n              variant=\"bodyMd\",\n            ) {{ headerTitle }}\n          div(v-if=\"isSelectable\", :class=\"styles.CheckableButtonWrapper\")\n            CheckableButton(\n              :accessibilityLabel=\"bulkActionsAccessibilityLabel\",\n              :label=\"headerTitle\",\n              :disabled=\"loading\",\n              :selected=\"selectAllSelectState\",\n              @toggle-all=\"handleToggleAll\",\n            )\n          div(\n            v-if=\"hasSlot(slots.alternateTool) && !showSortingSelect\",\n            :class=\"styles.AlternateToolWrapper\",\n          )\n            slot(name=\"alternateTool\")\n          div(v-if=\"showSortingSelect && sortOptions\", :className=\"styles.SortWrapper\")\n            Select(\n              :value=\"sortValueSelect\",\n              :labelInline=\"!smallScreen\",\n              :labelHidden=\"smallScreen\",\n              :options=\"sortOptions\",\n              :disabled=\"selectMode\",\n              @change=\"onSortChange\",\n            )\n              template(#label) {{ i18n.translate('Polaris.ResourceList.sortingLabel') }}\n\n          div(v-if=\"isSelectable\", :class=\"styles.SelectButtonWrapper\")\n            Button(\n              :disabled=\"selectMode\",\n              :icon=\"CheckboxIcon\",\n              @click=\"() => handleSelectMode(true)\",\n            ) {{ i18n.translate('Polaris.ResourceList.selectButtonText') }}\n        //- BulkAction\n        div(\n          v-if=\"isSelectable\",\n          :class=\"bulkActionClassNames\",\n        )\n          BulkActions(\n            ref=\"CheckableButtonRef\",\n            button-size=\"medium\",\n            :paginated-select-all-action=\"paginatedSelectAllAction\",\n            :paginated-select-all-text=\"paginatedSelectAllText\",\n            :accessibility-label=\"bulkActionsAccessibilityLabel\",\n            :selected=\"selectAllSelectState\",\n            :promotedActions=\"promotedBulkActions\",\n            :actions=\"bulkActions\",\n            :disabled=\"loading\",\n            :select-mode=\"selectMode\",\n            :label=\"selectAllActionsLabel\",\n            @toggle-all=\"handleToggleAll\",\n            @select-mode-toggle=\"handleSelectMode\",\n          )\n  //-List\n  ul(\n    v-if=\"itemsExist\",\n    :class=\"resourceListClassName\",\n    :aria-busy=\"loading\",\n    ref=\"listRef\",\n    aria-live=\"polite\",\n  )\n    template(v-if=\"loading\")\n      li(\n        :class=\"styles.SpinnerContainer\",\n        :style=\"spinnerStyle\",\n      )\n        Spinner(\n          :size=\"spinnerSize\",\n          accessibilityLabel=\"Items are loading\",\n        )\n      li(:class=\"styles.LoadingOverlay\")\n    slot\n  //- Empty Search\n  template(v-if=\"showEmptySearchState && hasSlot(slots.emptySearchState)\")\n    slot(name=\"emptySearchState\")\n  template(v-else-if=\"showEmptySearchState\")\n    div(:class=\"styles.EmptySearchResultWrapper\")\n      EmptySearchResult(v-bind=\"emptySearchResultText\", with-illustration)\n  //- Empty State\n  template(v-if=\"showEmptyState\")\n    slot(name=\"emptyState\")\n  //- Loading\n  div(v-if=\"loading && !itemsExist\", :class=\"className\", tabindex=\"-1\")\n    template(v-if=\"loading\")\n      li(:class=\"styles.SpinnerContainer\", :style=\"spinnerStyle\")\n        Spinner(:size=\"spinnerSize\", accessibilityLabel=\"Items are loading\")\n      li(:class=\"styles.LoadingOverlay\")\n  //- Pagination\n  div(\n    v-if=\"pagination\",\n    :class=\"styles.PaginationWrapper\",\n  )\n    Pagination(type=\"table\", v-bind=\"pagination\")\n</template>\n\n<script setup lang=\"ts\">\nimport { type VNode , type VNodeArrayChildren, ref, computed, onMounted, watch, provide } from 'vue';\nimport { themeDefault, toPx } from '@shopify/polaris-tokens';\nimport { debounce } from '@polaris/utilities/debounce';\nimport { useEventListener } from '@/utilities/use-event-listener';\nimport { classNames } from '@/utilities/css';\nimport useI18n from '@/use/useI18n';\nimport { useExtractFragment } from '@/use/useExtractFragment';\nimport { useHasSlot } from '@/use/useHasSlot';\nimport type { CheckableButtons, CheckboxHandles, VueNode, ResourceListContextType } from '@/utilities/types';\nimport {\n  Button,\n  Sticky,\n  Spinner,\n  Select,\n  EmptySearchResult,\n  BulkActions,\n  CheckableButton,\n  Pagination,\n  Text,\n} from '@/components';\nimport type { PaginationProps } from '@/components/Pagination/types';\nimport type { BulkActionsProps } from '@/components/BulkActions/types';\nimport { SELECT_ALL_ITEMS } from '@/components/IndexProvider/types';\nimport type { SelectOption } from '@/components/Select/types';\nimport styles from '@polaris/components/ResourceList/ResourceList.module.css';\nimport CheckboxIcon from '@icons/CheckboxIcon.svg';\n\nconst SMALL_SPINNER_HEIGHT = 28;\nconst LARGE_SPINNER_HEIGHT = 45;\n\ntype ResourceListSelectedItems = string[] | 'All';\n\ninterface ResourceListItemData {\n  [data: string]: any;\n}\n\nfunction getAllItemsOnPage<TItemType extends ResourceListItemData>(\n  items: TItemType[],\n  idForItem: (item: TItemType, index: number) => string,\n) {\n  return items.map((item: TItemType, index: number) => {\n    return idForItem(item, index);\n  });\n}\n\nconst isBreakpointsXS = () => {\n  return typeof window === 'undefined'\n    ? false\n    : window.innerWidth <\n        parseFloat(toPx(themeDefault.breakpoints['breakpoints-sm']) ?? '');\n};\n\nfunction defaultIdForItem<TItemType extends ResourceListItemData>(\n  item: TItemType,\n  index: number,\n): string {\n  if (item.props.id) {\n    return item.props.id;\n  }\n\n  return Object.prototype.hasOwnProperty.call(item, 'id')\n    ? item.id\n    : index.toString();\n}\n\nexport type ResourceListPaginationProps = Omit<PaginationProps, 'type'>;\ntype TItemType = any;\nexport interface ResourceListProps<\n  TItemType extends ResourceListItemData = ResourceListItemData,\n> {\n  /** Item data; each item is passed to renderItem */\n  items: TItemType[];\n  /** Whether to remove all padding around the filter controls. Should be true if using Filters, and false if using LegacyFilters.  */\n  flushFilters?: boolean;\n  /** Name of the resource, such as customers or products */\n  resourceName?: {\n    singular: string;\n    plural: string;\n  };\n  /** Up to 2 bulk actions that will be given more prominence */\n  promotedBulkActions?: BulkActionsProps['promotedActions'];\n  /** Actions available on the currently selected items */\n  bulkActions?: BulkActionsProps['actions'];\n  /** Collection of IDs for the currently selected items */\n  selectedItems?: ResourceListSelectedItems;\n  /** Whether or not the list has filter(s) applied */\n  isFiltered?: boolean;\n  /** Renders a Select All button at the top of the list and checkboxes in front of each list item. For use when bulkActions aren't provided. **/\n  selectable?: boolean;\n  /** Whether or not there are more items than currently set on the items prop. Determines whether or not to set the paginatedSelectAllAction and paginatedSelectAllText props on the BulkActions component. */\n  hasMoreItems?: boolean;\n  /** Overlays item list with a spinner while a background action is being performed */\n  loading?: boolean;\n  /** Boolean to show or hide the header */\n  showHeader?: boolean;\n  /** Total number of resources */\n  totalItemsCount?: number;\n  /** Current value of the sort control */\n  sortValue?: string;\n  /** Collection of sort options to choose from */\n  sortOptions?: SelectOption[];\n  /** Custom header text displayed above the list instead of the resource count. */\n  headerContent?: string;\n  /** Function to customize the unique ID for each item */\n  idForItem?(item: TItemType, index: number): string;\n  /** Function to resolve the ids of items */\n  resolveItemId?(item: TItemType): string;\n  /** Properties to enable pagination at the bottom of the list. */\n  pagination?: ResourceListPaginationProps;\n}\n\nexport type ResourceListEmits = {\n  /** Callback when sort option is changed */\n  'selection-change': [selectedItems: ResourceListSelectedItems];\n  /** Callback when selection is changed */\n  'sort-change': [selected: string, id?: string];\n};\n\nexport type ResourceListSlots = {\n  filterControl?: (_?: VueNode) => VNode[];\n  /** The markup to display when no resources exist yet. Renders when set and items is empty. */\n  emptyState?: (_?: VueNode) => VNode[];\n  /** The markup to display when no results are returned on search or filter of the list. Renders when `filterControl` is set, items are empty, and `emptyState` is not set.\n   * @default EmptySearchResult\n   */\n  emptySearchState?: (_?: VueNode) => VNode[];\n   /** Node to display instead of the sort control */\n  alternateTool?: (_?: VueNode) => VNode[];\n  default?: (_?: VueNode) => VNode[];\n};\n\nconst props = withDefaults(defineProps<ResourceListProps>(), {\n  selectedItems: [] as any,\n  showHeader: true,\n});\nconst emits = defineEmits<ResourceListEmits>();\nconst slots = defineSlots<ResourceListSlots>();\n\nconst i18n = useI18n();\nconst { extractElement } = useExtractFragment();\nconst { hasSlot } = useHasSlot();\n\nconst selectMode = ref<boolean>(Boolean(props.selectedItems && props.selectedItems.length > 0));\nconst loadingPosition = ref(0);\nconst lastSelected = ref<number | undefined>();\nconst smallScreen = ref(isBreakpointsXS());\nconst checkableButtons = ref<CheckableButtons>(new Map());\nconst isSticky = ref(false);\n\nconst defaultResourceName = {\n  singular: i18n.translate('Polaris.ResourceList.defaultItemSingular'),\n  plural: i18n.translate('Polaris.ResourceList.defaultItemPlural'),\n};\n\nconst listRef = ref<HTMLUListElement | null>(null);\n\nconst items = computed(() => {\n  let tmpItems: VNodeArrayChildren = [];\n  if (slots.default) {\n    const groups = slots.default().map(group => {\n      return extractElement(group);\n    });\n    tmpItems = groups.flat();\n  }\n\n  return tmpItems;\n});\nconst selectedItemsCount = ref(props.selectedItems === SELECT_ALL_ITEMS ? `${items.value.length}+` : props.selectedItems?.length);\n\nconst sortValueSelect = computed(() => {\n  return props.sortValue || '';\n});\n\nconst isSelectable = computed(() => {\n  return Boolean(\n    (props.promotedBulkActions && props.promotedBulkActions.length > 0) ||\n    (props.bulkActions && props.bulkActions.length > 0) ||\n    props.selectable,\n  ) && !smallScreen.value;\n});\n\nconst resourceName = computed(() => props.resourceName\n  ? props.resourceName\n  : defaultResourceName,\n);\n\nconst className = computed(() => classNames(\n  styles.ItemWrapper,\n  props.loading && styles['ItemWrapper-isLoading'],\n));\n\nconst resourceListClassName = computed(() => classNames(\n  styles.ResourceList,\n  // props.loading && styles.disabledPointerEvents,\n  selectMode.value && styles.disableTextSelection,\n));\n\nconst itemsExist = computed(() => items.value.length > 0);\n\nconst needsHeader = computed(() => {\n  return isSelectable.value || (props.sortOptions && props.sortOptions.length > 0) || hasSlot(slots.alternateTool);\n});\n\nconst showEmptyState = computed(() => hasSlot(slots.emptyState) && !itemsExist.value && !props.loading);\n\nconst showEmptySearchState = computed(() => !showEmptyState.value && hasSlot(slots.filterControl) && !itemsExist.value && !props.loading);\n\nconst showSortingSelect = computed(() => props.sortOptions && props.sortOptions.length > 0 && !hasSlot(slots.alternateTool));\n\nconst showHeaderMarkup = computed(() => {\n  return !showEmptyState.value\n    && props.showHeader\n    && !showEmptySearchState.value\n    && (props.showHeader || needsHeader.value)\n    && listRef.value;\n});\nconst defaultTopPadding = 8;\nconst topPadding = computed(() => loadingPosition.value > 0 ? loadingPosition.value : defaultTopPadding);\nconst spinnerStyle = computed(() => ({ paddingTop: `${topPadding.value}px` }));\nconst spinnerSize = computed(() => items.value.length < 2 ? 'small' : 'large');\n\nconst resourceListWrapperClassName = computed(() => classNames(\n  styles.ResourceListWrapper,\n  Boolean(isSelectable.value) && selectMode.value\n    && !props.pagination && styles.ResourceListWrapperWithBulkActions,\n));\n\nconst headerClassName = computed(() => {\n  return classNames(\n    styles.HeaderWrapper,\n    props.sortOptions &&\n      props.sortOptions.length > 0 &&\n      !hasSlot(slots.alternateTool) &&\n      styles['HeaderWrapper-hasSort'],\n    hasSlot(slots.alternateTool) && styles['HeaderWrapper-hasAlternateTool'],\n    isSelectable.value && styles['HeaderWrapper-hasSelect'],\n    props.loading && styles['HeaderWrapper-disabled'],\n    isSelectable.value && selectMode.value && styles['HeaderWrapper-inSelectMode'],\n    isSticky.value && styles['HeaderWrapper-isSticky'],\n  );\n});\n\nconst bulkActionClassNames = computed(() => classNames(\n  styles.BulkActionsWrapper,\n  selectMode.value && styles.BulkActionsWrapperVisible,\n));\n\nconst headerTitle = computed(() => {\n  const itemsCount = items.value.length;\n  const resource =\n    !props.loading &&\n    ((!props.totalItemsCount && itemsCount === 1) || props.totalItemsCount === 1)\n      ? resourceName.value.singular\n      : resourceName.value.plural;\n\n  if (props.loading) {\n    return i18n.translate('Polaris.ResourceList.loading', {resource});\n  } else if (props.totalItemsCount) {\n    return i18n.translate('Polaris.ResourceList.showingTotalCount', {\n      itemsCount,\n      totalItemsCount: props.totalItemsCount,\n      resource,\n    });\n  } else {\n    return i18n.translate('Polaris.ResourceList.showing', {\n      itemsCount,\n      resource,\n    });\n  }\n});\n\nconst selectAllActionsLabel = computed(() => i18n.translate( 'Polaris.ResourceList.selected', {\n  selectedItemsCount: `${selectedItemsCount.value}`,\n}));\n\nconst bulkActionsAccessibilityLabel = computed(() => {\n  const selectedItemsCount = props.selectedItems?.length;\n  const totalItemsCount = items.value.length;\n  const allSelected = selectedItemsCount === totalItemsCount;\n\n  if (totalItemsCount === 1 && allSelected) {\n    return i18n.translate(\n      'Polaris.ResourceList.a11yCheckboxDeselectAllSingle',\n      {\n        resourceNameSingular: resourceName.value.singular,\n      },\n    );\n  } else if (totalItemsCount === 1) {\n    return i18n.translate(\n      'Polaris.ResourceList.a11yCheckboxSelectAllSingle',\n      {\n        resourceNameSingular: resourceName.value.singular,\n      },\n    );\n  } else if (allSelected) {\n    return i18n.translate(\n      'Polaris.ResourceList.a11yCheckboxDeselectAllMultiple',\n      {\n        itemsLength: items.value.length,\n        resourceNamePlural: resourceName.value.plural,\n      },\n    );\n  } else {\n    return i18n.translate(\n      'Polaris.ResourceList.a11yCheckboxSelectAllMultiple',\n      {\n        itemsLength: items.value.length,\n        resourceNamePlural: resourceName.value.plural,\n      },\n    );\n  }\n});\n\nconst handleStickyChange = (value: boolean) => {\n  isSticky.value = value;\n};\n\nconst selectAllSelectState = computed<boolean | 'indeterminate'>(() => {\n  const { selectedItems, items } = props;\n  let selectState: boolean | 'indeterminate' = 'indeterminate';\n  if (\n    !selectedItems ||\n    (Array.isArray(selectedItems) && selectedItems.length === 0)\n  ) {\n    selectState = false;\n  } else if (\n    selectedItems === SELECT_ALL_ITEMS ||\n    (Array.isArray(selectedItems) && selectedItems.length === items.length)\n  ) {\n    selectState = true;\n  }\n\n  return selectState;\n});\n\nconst paginatedSelectAllText = computed(() => {\n  if (!isSelectable.value || !props.hasMoreItems) {\n    return;\n  }\n\n  if (props.selectedItems === SELECT_ALL_ITEMS\n  || (Array.isArray(props.selectedItems) && props.selectedItems.length === items.value.length)\n  ) {\n    return i18n.translate(\n      props.isFiltered\n        ? 'Polaris.ResourceList.allFilteredItemsSelected'\n        : 'Polaris.ResourceList.allItemsSelected',\n      {\n        itemsLength: items.value.length,\n        resourceNamePlural: resourceName.value.plural,\n      },\n    );\n  }\n\n  return '';\n});\n\nconst paginatedSelectAllAction = computed(() => {\n  if (!isSelectable.value || !props.hasMoreItems) {\n    return;\n  }\n\n  const actionText =\n    props.selectedItems === SELECT_ALL_ITEMS\n    || (Array.isArray(props.selectedItems) && props.selectedItems.length === items.value.length)\n      ? i18n.translate('Polaris.Common.undo')\n      : i18n.translate(\n        props.isFiltered\n          ? 'Polaris.ResourceList.selectAllFilteredItems'\n          : 'Polaris.ResourceList.selectAllItems',\n        {\n          itemsLength: items.value.length,\n          resourceNamePlural: resourceName.value.plural,\n        },\n      );\n\n  return {\n    content: actionText,\n    onAction: handleSelectAllItemsInStore,\n  };\n});\n\nconst generateItemId = (item: any, index: number) => {\n  if (props.idForItem) {\n    return props.idForItem(item, index);\n  }\n  return defaultIdForItem(item, index);\n};\n\nconst emptySearchResultText = computed(() => ({\n  title: i18n.translate('Polaris.ResourceList.emptySearchResultTitle', {\n    resourceNamePlural: resourceName.value.plural,\n  }),\n  description: i18n.translate(\n    'Polaris.ResourceList.emptySearchResultDescription',\n  ),\n}));\n\nconst handleSelectAllItemsInStore = () => {\n  const newlySelectedItems =\n    props.selectedItems === SELECT_ALL_ITEMS\n    || (Array.isArray(props.selectedItems) && props.selectedItems.length === items.value.length)\n      ? []\n      : getAllItemsOnPage(items.value, generateItemId);\n\n  emits('selection-change', newlySelectedItems);\n};\n\nconst handleSelectMode = (tmpSelectMode: boolean) => {\n  selectMode.value = tmpSelectMode;\n  if (!tmpSelectMode) {\n    emits('selection-change', []);\n  }\n};\n\nconst handleResize = debounce(\n  () => {\n    const newSmallScreen = isBreakpointsXS();\n\n    if (\n      props.selectedItems &&\n      props.selectedItems.length === 0 &&\n      selectMode &&\n      !newSmallScreen\n    ) {\n      handleSelectMode(false);\n    }\n\n    if (smallScreen.value !== newSmallScreen) {\n      smallScreen.value = newSmallScreen;\n    }\n  },\n  50,\n  {leading: true, trailing: true, maxWait: 50},\n);\n\nconst setLoadingPosition = () => {\n  if (listRef.value != null) {\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    const overlay = listRef.value.getBoundingClientRect();\n\n    const viewportHeight = Math.max(\n      document.documentElement ? document.documentElement.clientHeight : 0,\n      window.innerHeight || 0,\n    );\n\n    const overflow = viewportHeight - overlay.height;\n\n    const spinnerHeight =\n      items.value.length === 1 ? SMALL_SPINNER_HEIGHT : LARGE_SPINNER_HEIGHT;\n\n    const spinnerPosition =\n      overflow > 0\n        ? (overlay.height - spinnerHeight) / 2\n        : (viewportHeight - overlay.top - spinnerHeight) / 2;\n\n    loadingPosition.value = spinnerPosition;\n  }\n};\n\nconst handleMultiSelectionChange = (\n  lastSelectedChange: number,\n  currentSelected: number,\n  resolveItemId: (item: TItemType) => string,\n) => {\n  const min = Math.min(lastSelectedChange, currentSelected);\n  const max = Math.max(lastSelectedChange, currentSelected);\n  return items.value.slice(min, max + 1).map(resolveItemId);\n};\n\nconst handleSelectionChange = (\n  selected: boolean,\n  id: string,\n  sortOrder: number | undefined,\n  shiftKey: boolean,\n) => {\n  if (props.selectedItems === null) {\n    return;\n  }\n\n  let newlySelectedItems =\n    props.selectedItems === SELECT_ALL_ITEMS\n      ? getAllItemsOnPage(items.value, generateItemId)\n      : [...(props.selectedItems as string[])];\n\n  if (sortOrder !== undefined) {\n    lastSelected.value = sortOrder;\n  }\n\n  const lastSelectedFromState = lastSelected.value;\n\n  let selectedIds: string[] = [id];\n\n  if (\n    shiftKey &&\n    lastSelectedFromState != null &&\n    sortOrder !== undefined &&\n    props.resolveItemId\n  ) {\n    selectedIds = handleMultiSelectionChange(\n      lastSelectedFromState,\n      sortOrder,\n      props.resolveItemId,\n    );\n  }\n  newlySelectedItems = [...new Set([...newlySelectedItems, ...selectedIds])];\n\n  if (!selected) {\n    for (const selectedId of selectedIds) {\n      newlySelectedItems.splice(newlySelectedItems.indexOf(selectedId), 1);\n    }\n  }\n\n  if (newlySelectedItems.length === 0 && !isBreakpointsXS()) {\n    handleSelectMode(false);\n  } else if (newlySelectedItems.length > 0) {\n    handleSelectMode(true);\n  }\n\n  emits('selection-change', newlySelectedItems);\n};\n\nconst onSortChange = (selected: string) => {\n  emits('sort-change', selected);\n};\n\nconst handleToggleAll = () => {\n  let newlySelectedItems: string[];\n\n  if (\n    (Array.isArray(props.selectedItems) && props.selectedItems.length === items.value.length)\n    || props.selectedItems === SELECT_ALL_ITEMS\n  ) {\n    newlySelectedItems = [];\n  } else {\n    newlySelectedItems = items.value.map((item, index) => {\n      return generateItemId(item, index);\n    });\n  }\n\n  if (newlySelectedItems.length === 0 && !isBreakpointsXS()) {\n    handleSelectMode(false);\n  } else if (newlySelectedItems.length > 0) {\n    handleSelectMode(true);\n  }\n\n  let checkbox: CheckboxHandles | undefined;\n\n  if (isBreakpointsXS()) {\n    checkbox = checkableButtons.value.get('bulkSm');\n  } else if (newlySelectedItems.length === 0) {\n    checkbox = checkableButtons.value.get('plain');\n  } else {\n    checkbox = checkableButtons.value.get('bulkLg');\n  }\n\n  emits('selection-change', newlySelectedItems);\n\n  // setTimeout ensures execution after the Transition on BulkActions\n  setTimeout(() => {\n    checkbox && checkbox.focus();\n  }, 0);\n};\n\nonMounted(() => {\n  if (props.loading) {\n    setLoadingPosition();\n  }\n\n  useEventListener('resize', handleResize);\n});\n\nwatch(\n  () => props.loading,\n  (newLoading) => {\n    if (newLoading) {\n      setLoadingPosition();\n    }\n  },\n);\n\nwatch(\n  () => [props.selectedItems, selectMode.value],\n  ([newSelectedItems, newSelectMode], [oldSelectedItems]) => {\n    if (newSelectedItems !== oldSelectedItems) {\n      if (newSelectedItems && (newSelectedItems as string[]).length > 0 && !newSelectMode) {\n        selectMode.value = true;\n      }\n      if ((!newSelectedItems || (newSelectedItems as string[]).length === 0) && !isBreakpointsXS()) {\n        selectMode.value = false;\n      }\n    }\n  },\n);\n\nwatch(\n  () => props.selectedItems,\n  (newSelectedItems) => {\n    if (newSelectedItems && (newSelectedItems === SELECT_ALL_ITEMS || newSelectedItems.length > 0)) {\n      selectedItemsCount.value = newSelectedItems === SELECT_ALL_ITEMS\n        ? `${items.value.length}+`\n        : newSelectedItems.length;\n    }\n  },\n  {\n    immediate: true,\n  }\n);\n\nconst selected = computed(() => {\n  return props.selectedItems || [];\n});\n\nprovide<ResourceListContextType>('resource-list-context', {\n  selectable: isSelectable,\n  selectedItems: selected,\n  selectMode: selectMode,\n  resourceName: props.resourceName,\n  loading: props.loading,\n  hasBulkActions: Boolean(props.bulkActions),\n  onSelectionChange: handleSelectionChange,\n});\n</script>\n"],"names":["items","_useSlots","selectedItemsCount","_a","selected"],"mappings":"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"}