{"version":3,"file":"ChoiceList.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/ChoiceList/ChoiceList.vue"],"sourcesContent":["<template lang=\"pug\">\nBlockStack(\n  as=\"fieldset\"\n  :gap=\"{xs: '400', md: '0'}\"\n  :aria-invalid=\"error != null\"\n  :id=\"finalName\"\n)\n  Box(\n    v-if=\"hasSlot(slots.title) || title\"\n    as=\"legend\"\n    :padding-block-end=\"{xs: '0', md: '100'}\"\n  )\n    Text(\n      as=\"span\",\n      variant=\"bodyMd\",\n      :visually-hidden=\"titleHidden\",\n    )\n      slot(v-if=\"hasSlot(slots.title)\", name=\"title\")\n      template(v-else) {{ title }}\n\n  BlockStack(\n    as=\"ul\"\n    :gap=\"{xs: '400', md: '0'}\"\n  )\n    li(\n      v-for=\"choice in choices\",\n      :key=\"choice.value\",\n    )\n      Bleed(:margin-block-end=\"choice.helpText ? {xs: '100', md: '0'} : {xs: '0'}\")\n        component(\n          :is=\"allowMultiple ? Checkbox : RadioButton\"\n          :name=\"finalName\"\n          :value=\"choice.value\"\n          :id=\"choice.id\"\n          :disabled=\"choice.disabled || disabled\"\n          :fill=\"{xs: true, sm: false}\"\n          :checked=\"choiceIsSelected(choice)\"\n          :aria-describedby=\"error && choice.describedByError ? errorTextID(finalName) : undefined\"\n          :tone=\"tone\"\n          @change=\"handleChange\"\n        )\n          template(#label, v-if=\"choice.label\") {{ choice.label }}\n          template(#helpText, v-if=\"choice.helpText\") {{ choice.helpText }}\n\n        div(\n          v-if=\"choice.renderChildren\",\n          :class=\"styles.ChoiceChildren\",\n        )\n          Box(:padding-block-start=\"{xs: '400', md: '0'}\")\n            component(:is=\"choice.renderChildren\")\n  Box(\n    v-if=\"error\"\n    :padding-block-start=\"{xs: '0', md: '100'}\"\n    padding-block-end=\"200\"\n  )\n    InlineError(:message=\"error\" :field-id=\"finalName\")\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, getCurrentInstance } from 'vue';\nimport { useHasSlot } from '@/use/useHasSlot';\n// @ts-ignore Note: using component:is in template\nimport { Box, Bleed, BlockStack, Checkbox, InlineError, RadioButton, Text } from '@/components';\nimport { errorTextID } from '@/components/InlineError/utils';\nimport type { Choice, ChoiceListProps, ChoiceListSlots, ChoiceListEvents } from './types';\nimport styles from '@polaris/components/ChoiceList/ChoiceList.module.css';\n\nconst props = withDefaults(defineProps<ChoiceListProps>(), {\n  disabled: false,\n});\nconst slots = defineSlots<ChoiceListSlots>();\nconst emits = defineEmits<ChoiceListEvents>();\n\nconst model = defineModel<string[]>({\n  default: [],\n});\n\nconst { hasSlot } = useHasSlot();\n\nconst uniqId = getCurrentInstance()?.uid;\nconst name = computed(() => String(props.name ?? uniqId));\nconst finalName = computed(() => props.allowMultiple ? `${name.value}[]` : name.value);\n\nconst handleChange = (checked: boolean, value: string): void => {\n  const newValue = updateSelectedChoices(value, checked);\n\n  model.value = newValue;\n  emits('change', newValue, finalName.value);\n}\n\nconst choiceIsSelected = ({value}: Choice) => {\n  return model.value.includes(value);\n}\n\nfunction updateSelectedChoices(\n  value: string,\n  checked: boolean,\n) {\n  if (checked) {\n    return props.allowMultiple ? [...model.value, value] : [value];\n  }\n\n  return model.value.filter((selectedChoice) => selectedChoice !== value);\n}\n</script>\n"],"names":["_useSlots","_useModel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,UAAM,QAAQ;AAGd,UAAM,QAAQA;AACd,UAAM,QAAQ;AAER,UAAA,QAAQC,SAEb,SAAA,YAAA;AAEK,UAAA,EAAE,YAAY;AAEd,UAAA,UAAS,wBAAsB,MAAtB,mBAAsB;AACrC,UAAM,OAAO,SAAS,MAAM,OAAO,MAAM,QAAQ,MAAM,CAAC;AAClD,UAAA,YAAY,SAAS,MAAM,MAAM,gBAAgB,GAAG,KAAK,KAAK,OAAO,KAAK,KAAK;AAE/E,UAAA,eAAe,CAAC,SAAkB,UAAwB;AACxD,YAAA,WAAW,sBAAsB,OAAO,OAAO;AAErD,YAAM,QAAQ;AACR,YAAA,UAAU,UAAU,UAAU,KAAK;AAAA,IAAA;AAG3C,UAAM,mBAAmB,CAAC,EAAC,YAAmB;AACrC,aAAA,MAAM,MAAM,SAAS,KAAK;AAAA,IAAA;AAG1B,aAAA,sBACP,OACA,SACA;AACA,UAAI,SAAS;AACJ,eAAA,MAAM,gBAAgB,CAAC,GAAG,MAAM,OAAO,KAAK,IAAI,CAAC,KAAK;AAAA,MAC/D;AAEA,aAAO,MAAM,MAAM,OAAO,CAAC,mBAAmB,mBAAmB,KAAK;AAAA,IACxE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}