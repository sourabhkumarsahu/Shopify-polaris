import { defineComponent, computed, openBlock, createBlock, unref } from "vue";
import { d as ArrowLeftIcon } from "../../../vendor.js";
import { h as handleMouseUpByBlurring } from "../../utilities/focus.js";
import { _ as _sfc_main$1 } from "../Button/Button.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Breadcrumbs",
  props: {
    backAction: {}
  },
  setup(__props) {
    const props = __props;
    const url = computed(
      () => "url" in props.backAction ? props.backAction.url : void 0
    );
    const callbackOnAction = computed(
      () => "onAction" in props.backAction ? props.backAction.onAction : void 0
    );
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), {
        key: _ctx.backAction.content,
        url: url.value,
        icon: unref(ArrowLeftIcon),
        accessibilityLabel: _ctx.backAction.accessibilityLabel ?? _ctx.backAction.content,
        onClick: callbackOnAction.value,
        onPointerdown: unref(handleMouseUpByBlurring)
      }, null, 8, ["url", "icon", "accessibilityLabel", "onClick", "onPointerdown"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Breadcrumbs.vue_vue_type_script_setup_true_lang.js.map
