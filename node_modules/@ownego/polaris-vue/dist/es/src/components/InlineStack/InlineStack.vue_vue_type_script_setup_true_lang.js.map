{"version":3,"file":"InlineStack.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/InlineStack/InlineStack.vue"],"sourcesContent":["<template lang=\"pug\">\ncomponent(\n  :is=\"as\",\n  :class=\"className\",\n  :style=\"style\",\n)\n  slot\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { VueNode } from '@/utilities/types';\nimport { getResponsiveProps, classNames, getResponsiveValue } from '@/utilities/css';\nimport type { InlineStackProps } from './types';\nimport styles from '@polaris/components/InlineStack/InlineStack.module.css';\n\nexport type InlineStackSlots = {\n  default: (_: VueNode) => any;\n}\n\ndefineSlots<InlineStackSlots>();\n\nconst props = withDefaults(defineProps<InlineStackProps>(), {\n  as: 'div',\n  wrap: true,\n  direction: 'row',\n});\n\nconst style = computed(() => {\n  return {\n    '--pc-inline-stack-align': props.align,\n    '--pc-inline-stack-block-align': props.blockAlign,\n    '--pc-inline-stack-wrap': props.wrap ? 'wrap' : 'nowrap',\n    ...getResponsiveProps('inline-stack', 'gap', 'space', props.gap),\n    ...getResponsiveValue('inline-stack', 'flex-direction', props.direction),\n  }\n});\n\nconst className = computed(() => {\n  return classNames(\n    styles.InlineStack,\n  );\n});\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAsBA,UAAM,QAAQ;AAMR,UAAA,QAAQ,SAAS,MAAM;AACpB,aAAA;AAAA,QACL,2BAA2B,MAAM;AAAA,QACjC,iCAAiC,MAAM;AAAA,QACvC,0BAA0B,MAAM,OAAO,SAAS;AAAA,QAChD,GAAG,mBAAmB,gBAAgB,OAAO,SAAS,MAAM,GAAG;AAAA,QAC/D,GAAG,mBAAmB,gBAAgB,kBAAkB,MAAM,SAAS;AAAA,MAAA;AAAA,IACzE,CACD;AAEK,UAAA,YAAY,SAAS,MAAM;AACxB,aAAA;AAAA,QACL,OAAO;AAAA,MAAA;AAAA,IACT,CACD;;;;;;;;;;;;;;"}