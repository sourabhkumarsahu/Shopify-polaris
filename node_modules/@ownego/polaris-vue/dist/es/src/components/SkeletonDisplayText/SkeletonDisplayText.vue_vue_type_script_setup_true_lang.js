import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, normalizeStyle, unref } from "vue";
import { c as classNames, v as variationName, s as sanitizeCustomProperties } from "../../utilities/css.js";
const DisplayText = "Polaris-SkeletonDisplayText__DisplayText";
const sizeSmall = "Polaris-SkeletonDisplayText--sizeSmall";
const sizeMedium = "Polaris-SkeletonDisplayText--sizeMedium";
const sizeLarge = "Polaris-SkeletonDisplayText--sizeLarge";
const sizeExtraLarge = "Polaris-SkeletonDisplayText--sizeExtraLarge";
const styles = {
  DisplayText,
  sizeSmall,
  sizeMedium,
  sizeLarge,
  sizeExtraLarge
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "SkeletonDisplayText",
  props: {
    size: { default: "medium" },
    maxWidth: {}
  },
  setup(__props) {
    const props = __props;
    const className = computed(
      () => classNames(
        styles.DisplayText,
        props.size && styles[variationName("size", props.size)]
      )
    );
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(className.value),
        style: normalizeStyle(unref(sanitizeCustomProperties)({ "--pc-skeleton-display-text-max-width": _ctx.maxWidth ?? void 0 }))
      }, null, 6);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=SkeletonDisplayText.vue_vue_type_script_setup_true_lang.js.map
