import { defineComponent, openBlock, createBlock, unref, withCtx, createVNode } from "vue";
import { u as useToggle } from "../../../../use/useToggle.js";
import { _ as _sfc_main$3 } from "../../../ActionList/ActionList.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../BulkActionButton/BulkActionButton.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../../Popover/Popover.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "BulkActionMenu",
  props: {
    actions: {},
    title: {},
    isNewBadgeInBadgeActions: { type: Boolean },
    size: {}
  },
  setup(__props) {
    const {
      value: isVisible,
      toggle: toggleMenuVisibility
    } = useToggle(false);
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), {
        active: unref(isVisible),
        preferInputActivator: "",
        onClose: unref(toggleMenuVisibility)
      }, {
        activator: withCtx(() => [
          createVNode(unref(_sfc_main$2), {
            "show-content-in-button": "",
            size: _ctx.size,
            disclosure: true,
            content: _ctx.title,
            indicator: _ctx.isNewBadgeInBadgeActions,
            onAction: unref(toggleMenuVisibility)
          }, null, 8, ["size", "content", "indicator", "onAction"])
        ]),
        default: withCtx(() => [
          createVNode(unref(_sfc_main$3), {
            items: _ctx.actions,
            onActionAnyItem: unref(toggleMenuVisibility)
          }, null, 8, ["items", "onActionAnyItem"])
        ]),
        _: 1
      }, 8, ["active", "onClose"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=BulkActionMenu.vue_vue_type_script_setup_true_lang.js.map
