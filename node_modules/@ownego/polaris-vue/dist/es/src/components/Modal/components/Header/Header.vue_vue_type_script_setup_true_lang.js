import { defineComponent, useSlots, computed, openBlock, createBlock, unref, withCtx, createVNode, renderSlot } from "vue";
import { u as useHasSlot } from "../../../../use/useHasSlot.js";
import { _ as _sfc_main$1 } from "../../../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../../../InlineGrid/InlineGrid.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$4 } from "../../../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../CloseButton/CloseButton.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$5 } from "../../../Text/Text.vue_vue_type_script_setup_true_lang.js";
const headerPaddingInline = "400";
const headerPaddingBlock = "400";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Header",
  props: {
    id: {},
    titleHidden: { type: Boolean },
    closing: { type: Boolean }
  },
  emits: ["close"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    const slots = useSlots();
    const { hasSlot } = useHasSlot();
    const isDefaultSlotUsed = computed(() => hasSlot(slots.default));
    return (_ctx, _cache) => {
      return _ctx.titleHidden || !isDefaultSlotUsed.value ? (openBlock(), createBlock(unref(_sfc_main$1), {
        key: 0,
        position: "absolute",
        "inset-inline-end": headerPaddingInline,
        "inset-block-start": headerPaddingBlock,
        "z-index": "1"
      }, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), {
            onClick: _cache[0] || (_cache[0] = ($event) => emits("close"))
          })
        ]),
        _: 1
      })) : (openBlock(), createBlock(unref(_sfc_main$1), {
        key: 1,
        "padding-block-start": "400",
        "padding-block-end": "400",
        "padding-inline-start": headerPaddingInline,
        "padding-inline-end": headerPaddingBlock,
        "border-block-end-width": "025",
        "border-color": "border",
        background: "bg-surface-tertiary"
      }, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$3), {
            gap: "400",
            columns: { xs: "1fr auto" }
          }, {
            default: withCtx(() => [
              createVNode(unref(_sfc_main$4), {
                gap: "400",
                "block-align": "center"
              }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$5), {
                    "break-word": "",
                    as: "h2",
                    variant: "headingMd",
                    id: _ctx.id
                  }, {
                    default: withCtx(() => [
                      renderSlot(_ctx.$slots, "default")
                    ]),
                    _: 3
                  }, 8, ["id"])
                ]),
                _: 3
              }),
              createVNode(unref(_sfc_main$2), {
                pressed: _ctx.closing,
                onClick: _cache[1] || (_cache[1] = ($event) => emits("close"))
              }, null, 8, ["pressed"])
            ]),
            _: 3
          })
        ]),
        _: 3
      }));
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Header.vue_vue_type_script_setup_true_lang.js.map
