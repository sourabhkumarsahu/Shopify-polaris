{"version":3,"file":"Dialog.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../src/components/Modal/components/Dialog/Dialog.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  ref=\"containerNode\",\n  data-polaris-layer,\n  data-polaris-overlay,\n  :class=\"styles.Container\",\n)\n  TrapFocus\n    div(\n      role=\"dialog\",\n      tabindex=\"-1\",\n      aria-modal,\n      :aria-label=\"labelledBy\",\n      :aria-labelledby=\"labelledBy\",\n      :class=\"styles.Dialog\",\n    )\n      div(:class=\"classes\")\n        KeypressListener(\n          key-event=\"keydown\",\n          :key-code=\"Key.Escape\",\n          :handler=\"handleKeyDown\",\n        )\n        KeypressListener(\n          :key-code=\"Key.Escape\",\n          :handler=\"handleKeyUp\",\n        )\n        slot\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onBeforeUnmount, onMounted, ref } from 'vue';\nimport { classNames, variationName } from '@/utilities/css';\nimport styles from '@polaris/components/Modal/components/Dialog/Dialog.module.css';\nimport { focusFirstFocusableNode } from '@/utilities/focus';\nimport { KeypressListener, TrapFocus } from '@/components';\nimport { Key } from '@/utilities/types';\nimport type { ModalSize } from '../../utils';\n\nexport interface DialogProps {\n  labelledBy?: string;\n  limitHeight?: boolean;\n  size?: ModalSize;\n  in?: boolean;\n  hasToasts?: boolean;\n}\n\nconst props = defineProps<DialogProps>();\n\nconst emit = defineEmits<{\n  (event: 'close'): void;\n  (event: 'closing', value: boolean): void;\n  (event: 'entered'): void;\n  (event: 'exited'): void;\n}>();\n\nconst dialogNode = ref<HTMLElement | null>(null);\nconst closing = ref(false);\n\nconst classes = computed(() => {\n  return classNames(\n    styles.Modal,\n    props.size && styles[variationName('size', props.size)],\n    props.limitHeight && styles.limitHeight,\n  );\n});\n\nonMounted(() => {\n  if (dialogNode.value && dialogNode.value.contains(document.activeElement)) {\n    focusFirstFocusableNode(dialogNode.value);\n  }\n\n  emit('entered');\n});\n\nonBeforeUnmount(() => {\n  emit('exited');\n});\n\nconst handleKeyDown = () => {\n  closing.value = true;\n  emit('closing', true);\n};\n\nconst handleKeyUp = () => {\n  closing.value = false;\n  emit('closing', false);\n  emit('close');\n};\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,UAAM,QAAQ;AAEd,UAAM,OAAO;AAOP,UAAA,aAAa,IAAwB,IAAI;AACzC,UAAA,UAAU,IAAI,KAAK;AAEnB,UAAA,UAAU,SAAS,MAAM;AACtB,aAAA;AAAA,QACL,OAAO;AAAA,QACP,MAAM,QAAQ,OAAO,cAAc,QAAQ,MAAM,IAAI,CAAC;AAAA,QACtD,MAAM,eAAe,OAAO;AAAA,MAAA;AAAA,IAC9B,CACD;AAED,cAAU,MAAM;AACd,UAAI,WAAW,SAAS,WAAW,MAAM,SAAS,SAAS,aAAa,GAAG;AACzE,gCAAwB,WAAW,KAAK;AAAA,MAC1C;AAEA,WAAK,SAAS;AAAA,IAAA,CACf;AAED,oBAAgB,MAAM;AACpB,WAAK,QAAQ;AAAA,IAAA,CACd;AAED,UAAM,gBAAgB,MAAM;AAC1B,cAAQ,QAAQ;AAChB,WAAK,WAAW,IAAI;AAAA,IAAA;AAGtB,UAAM,cAAc,MAAM;AACxB,cAAQ,QAAQ;AAChB,WAAK,WAAW,KAAK;AACrB,WAAK,OAAO;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}