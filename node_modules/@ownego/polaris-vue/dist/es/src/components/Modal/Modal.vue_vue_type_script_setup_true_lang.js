import { defineComponent, useSlots, ref, provide, openBlock, createElementBlock, Fragment, unref, createBlock, withCtx, renderSlot, createCommentVNode, createVNode, normalizeClass, normalizeStyle } from "vue";
import { u as useId } from "../../use/useId.js";
import { u as useI18n } from "../../use/useI18n.js";
import { u as useHasSlot } from "../../use/useHasSlot.js";
import { f as focusFirstFocusableNode } from "../../utilities/focus.js";
import { _ as _sfc_main$a } from "../Backdrop/Backdrop.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$5 } from "../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "./components/Dialog/Dialog.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$9 } from "./components/Footer/Footer.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$4 } from "./components/Header/Header.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$7 } from "./components/Section/Section.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../Portal/Portal.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$8 } from "../Scrollable/Scrollable.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$6 } from "../Spinner/Spinner.vue_vue_type_script_setup_true_lang.js";
const Body = "Polaris-Modal__Body";
const NoScrollBody = "Polaris-Modal__NoScrollBody";
const IFrame = "Polaris-Modal__IFrame";
const styles = {
  Body,
  NoScrollBody,
  IFrame
};
const _hoisted_1 = ["name", "title", "src"];
const IFRAME_LOADING_HEIGHT = 200;
const DEFAULT_IFRAME_CONTENT_HEIGHT = 400;
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Modal",
  props: {
    open: { type: Boolean },
    src: {},
    iframeName: {},
    titleHidden: { type: Boolean, default: false },
    sectioned: { type: Boolean },
    size: {},
    limitHeight: { type: Boolean },
    loading: { type: Boolean },
    noScroll: { type: Boolean },
    clickOutsideToClose: { type: Boolean, default: true },
    primaryAction: {},
    secondaryActions: {}
  },
  emits: ["iframe-load", "transition-end", "scrolled-to-bottom", "close"],
  setup(__props, { emit: __emit }) {
    const emits = __emit;
    const slots = useSlots();
    const { hasSlot } = useHasSlot();
    const i18n = useI18n();
    const headerId = String(useId());
    const iframeTitle = i18n.translate("Polaris.Modal.iframeTitle");
    const activatorNode = ref(null);
    const iframeHeight = ref(IFRAME_LOADING_HEIGHT);
    const closing = ref(false);
    const handleIframeLoad = (evt) => {
      const iframe = evt.target;
      if (iframe && iframe.contentWindow) {
        try {
          iframeHeight.value = iframe.contentWindow.document.body.scrollHeight;
        } catch (_error) {
          iframeHeight.value = DEFAULT_IFRAME_CONTENT_HEIGHT;
        }
      }
      emits("iframe-load", evt);
    };
    const handleEntered = () => {
      emits("transition-end");
    };
    const handleExited = () => {
      iframeHeight.value = IFRAME_LOADING_HEIGHT;
      const node = activatorNode.value;
      if (node) {
        requestAnimationFrame(() => focusFirstFocusableNode(node));
      }
    };
    const setClosing = (newVal) => {
      closing.value = newVal;
    };
    provide("within-content-context", true);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(Fragment, null, [
        unref(hasSlot)(unref(slots).activator) ? (openBlock(), createBlock(unref(_sfc_main$1), {
          key: 0,
          ref: "activatorRef"
        }, {
          default: withCtx(() => [
            renderSlot(_ctx.$slots, "activator")
          ]),
          _: 3
        }, 512)) : createCommentVNode("", true),
        _ctx.open ? (openBlock(), createBlock(unref(_sfc_main$2), {
          key: 1,
          "id-prefix": "modal"
        }, {
          default: withCtx(() => [
            createVNode(unref(_sfc_main$3), {
              "labelled-by": unref(headerId),
              size: _ctx.size,
              "limit-height": _ctx.limitHeight,
              onClose: _cache[2] || (_cache[2] = ($event) => emits("close")),
              onClosing: setClosing,
              onEntered: handleEntered,
              onExited: handleExited
            }, {
              default: withCtx(() => [
                createVNode(unref(_sfc_main$4), {
                  "title-hidden": _ctx.titleHidden,
                  id: unref(headerId),
                  closing: closing.value,
                  onClose: _cache[0] || (_cache[0] = ($event) => emits("close"))
                }, {
                  default: withCtx(() => [
                    renderSlot(_ctx.$slots, "title")
                  ]),
                  _: 3
                }, 8, ["title-hidden", "id", "closing"]),
                _ctx.src ? (openBlock(), createElementBlock("iframe", {
                  key: 0,
                  name: _ctx.iframeName,
                  title: unref(iframeTitle),
                  src: _ctx.src,
                  class: normalizeClass(unref(styles).Iframe),
                  style: normalizeStyle({ height: `${iframeHeight.value}px` }),
                  onLoad: handleIframeLoad
                }, null, 46, _hoisted_1)) : _ctx.noScroll ? (openBlock(), createElementBlock("div", {
                  key: 1,
                  class: normalizeClass(unref(styles).noScrollBody)
                }, [
                  createVNode(unref(_sfc_main$1), {
                    width: "100%",
                    "overflow-x": "hidden",
                    "overflow-y": "hidden"
                  }, {
                    default: withCtx(() => [
                      _ctx.loading ? (openBlock(), createBlock(unref(_sfc_main$1), {
                        key: 0,
                        padding: "400"
                      }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$5), {
                            gap: "400",
                            align: "center",
                            "block-align": "center"
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$6))
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                        _ctx.sectioned ? (openBlock(), createBlock(unref(_sfc_main$7), {
                          key: 0,
                          "title-hidden": _ctx.titleHidden
                        }, {
                          default: withCtx(() => [
                            renderSlot(_ctx.$slots, "default")
                          ]),
                          _: 3
                        }, 8, ["title-hidden"])) : renderSlot(_ctx.$slots, "default", { key: 1 })
                      ], 64))
                    ]),
                    _: 3
                  })
                ], 2)) : (openBlock(), createBlock(unref(_sfc_main$8), {
                  key: 2,
                  shadow: "",
                  class: normalizeClass(unref(styles).Body),
                  onScrolledToBottom: _cache[1] || (_cache[1] = ($event) => emits("scrolled-to-bottom"))
                }, {
                  default: withCtx(() => [
                    _ctx.loading ? (openBlock(), createBlock(unref(_sfc_main$1), {
                      key: 0,
                      padding: "400"
                    }, {
                      default: withCtx(() => [
                        createVNode(unref(_sfc_main$5), {
                          gap: "400",
                          align: "center",
                          "block-align": "center"
                        }, {
                          default: withCtx(() => [
                            createVNode(unref(_sfc_main$6))
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })) : (openBlock(), createElementBlock(Fragment, { key: 1 }, [
                      _ctx.sectioned ? (openBlock(), createBlock(unref(_sfc_main$7), {
                        key: 0,
                        "title-hidden": _ctx.titleHidden
                      }, {
                        default: withCtx(() => [
                          renderSlot(_ctx.$slots, "default")
                        ]),
                        _: 3
                      }, 8, ["title-hidden"])) : renderSlot(_ctx.$slots, "default", { key: 1 })
                    ], 64))
                  ]),
                  _: 3
                }, 8, ["class"])),
                unref(hasSlot)(unref(slots).footer) || _ctx.primaryAction || _ctx.secondaryActions ? (openBlock(), createBlock(unref(_sfc_main$9), {
                  key: 3,
                  "primary-action": _ctx.primaryAction,
                  "secondary-actions": _ctx.secondaryActions
                }, {
                  default: withCtx(() => [
                    renderSlot(_ctx.$slots, "footer")
                  ]),
                  _: 3
                }, 8, ["primary-action", "secondary-actions"])) : createCommentVNode("", true)
              ]),
              _: 3
            }, 8, ["labelled-by", "size", "limit-height"]),
            createVNode(unref(_sfc_main$a), {
              onClosing: setClosing,
              onClick: _cache[3] || (_cache[3] = ($event) => _ctx.clickOutsideToClose ? emits("close") : void 0)
            })
          ]),
          _: 3
        })) : createCommentVNode("", true)
      ], 64);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Modal.vue_vue_type_script_setup_true_lang.js.map
