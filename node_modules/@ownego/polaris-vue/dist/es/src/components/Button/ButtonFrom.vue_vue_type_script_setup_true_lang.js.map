{"version":3,"file":"ButtonFrom.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Button/ButtonFrom.vue"],"sourcesContent":["<template lang=\"pug\">\nButton(\n  :tone=\"tone\",\n  :variant=\"plainVariant || destructiveVariant\",\n  v-bind=\"bindProps\",\n  @click=\"handleClick\",\n)\n  template(v-if=\"action.content\") {{ action.content }}\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport Button from './Button.vue';\nimport type { ComplexAction, ButtonProps } from './types';\n\n\ninterface Props {\n  action: ComplexAction;\n  overrides?: Partial<ButtonProps>,\n}\n\nconst props = defineProps<Props>();\n\nconst plainVariant = computed(() => props.action.plain ? 'plain' : undefined);\nconst destructiveVariant = computed(() => props.action.destructive ? 'primary' : undefined);\nconst tone = computed(() => !props.overrides?.tone && props.action.destructive ? 'critical' : props.overrides?.tone);\nconst bindProps = computed(() => {\n  if (!props.action) {\n    return {};\n  }\n\n  const { onAction, content, plain, destructive, ...other } = props.action;\n\n  return { ...other, ...props.overrides };\n});\n\nconst handleClick = () => {\n  if (props.action && props.action.onAction) {\n    props.action.onAction();\n  }\n};\n</script>\n"],"names":[],"mappings":";;;;;;;;;AAqBA,UAAM,QAAQ;AAEd,UAAM,eAAe,SAAS,MAAM,MAAM,OAAO,QAAQ,UAAU,MAAS;AAC5E,UAAM,qBAAqB,SAAS,MAAM,MAAM,OAAO,cAAc,YAAY,MAAS;AAC1F,UAAM,OAAO,SAAS,MAAM;;AAAA,gBAAC,WAAM,cAAN,mBAAiB,SAAQ,MAAM,OAAO,cAAc,cAAa,WAAM,cAAN,mBAAiB;AAAA,KAAI;AAC7G,UAAA,YAAY,SAAS,MAAM;AAC3B,UAAA,CAAC,MAAM,QAAQ;AACjB,eAAO;MACT;AAEM,YAAA,EAAE,UAAU,SAAS,OAAO,aAAa,GAAG,MAAA,IAAU,MAAM;AAElE,aAAO,EAAE,GAAG,OAAO,GAAG,MAAM,UAAU;AAAA,IAAA,CACvC;AAED,UAAM,cAAc,MAAM;AACxB,UAAI,MAAM,UAAU,MAAM,OAAO,UAAU;AACzC,cAAM,OAAO;MACf;AAAA,IAAA;;;;;;;;;;;;;;;;"}