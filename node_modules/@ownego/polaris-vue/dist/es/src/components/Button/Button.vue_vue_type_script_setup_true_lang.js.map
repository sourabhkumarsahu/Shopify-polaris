{"version":3,"file":"Button.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Button/Button.vue"],"sourcesContent":["<template lang=\"pug\">\nUnstyledButton(\n  v-bind=\"{...commonProps, ...linkProps, ...actionProps}\",\n  v-on=\"listeners\",\n  @mouseup=\"handleMouseUpByBlurring\",\n)\n  span(v-if=\"loading\", :class=\"styles.Spinner\")\n    Spinner(\n      size=\"small\",\n      :accessibility-label=\"i18n.translate('Polaris.Button.spinnerAccessibilityLabel')\",\n    )\n  span(\n    v-if=\"icon || hasSlot(slots.icon)\",\n    :class=\"loading ? styles.hidden : styles.Icon\",\n  )\n    slot(v-if=\"hasSlot(slots.icon)\" name=\"icon\")\n    Icon(v-else-if=\"icon\", :source=\"loading ? 'placeholder' : icon\")\n  Text(\n    v-if=\"hasChildren\",\n    as=\"span\",\n    :variant=\"textVariant\",\n    :fontWeight=\"textFontWeight\",\n    :key=\"disabled ? 'text-disabled' : 'text'\"\n  )\n    slot\n  span(\n    v-if=\"disclosure\",\n    :class=\"loading ? styles.hidden : styles.Icon\",\n  )\n    Icon(:source=\"disclosureIconSource\")\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, useSlots, useAttrs } from 'vue';\nimport { capitalize } from '@polaris/utilities/capitalize';\nimport { classNames, variationName } from '@/utilities/css';\nimport type { VueNode } from '@/utilities/types';\nimport useI18n from '@/use/useI18n';\nimport { useHasSlot } from '@/use/useHasSlot';\nimport { useBreakpoints } from '@/use/useBreakpoints';\nimport type { ButtonProps } from './types';\nimport { Spinner, Icon, Text } from '@/components';\nimport { UnstyledButton } from '../UnstyledButton';\nimport SelectIcon from '@icons/SelectIcon.svg';\nimport ChevronDownIcon from '@icons/ChevronDownIcon.svg';\nimport ChevronUpIcon from '@icons/ChevronUpIcon.svg';\nimport { handleMouseUpByBlurring } from '@/utilities/focus';\nimport styles from '@polaris/components/Button/Button.module.css';\n\ndefineSlots<{\n  /** The content to display inside the button */\n  default: (_: VueNode) => any;\n  /** Icon to display to the left of the button content */\n  icon?: (_: VueNode) => any;\n}>();\n\nconst slots = useSlots();\nconst attrs = useAttrs();\nconst i18n = useI18n();\nconst { hasSlot } = useHasSlot();\n\nconst breakpoints = useBreakpoints();\nconst { mdUp } = breakpoints.value;\n\nconst props = withDefaults(defineProps<ButtonProps>(), {\n  size: 'medium',\n  textAlign: 'center',\n  variant: 'secondary',\n});\n\nconst listeners = computed(() => {\n  const events = ['blur', 'click', 'focus', 'keydown', 'keypress', 'keyup', 'mouseenter', 'touchstart', 'pointerdown'];\n  const eventBindings: Record<string, unknown> = {};\n\n  for (const event of events) {\n    const eventName = `on${capitalize(event)}`;\n\n    if (attrs[eventName]) {\n      eventBindings[event] = attrs[eventName];\n    }\n  }\n\n  return eventBindings;\n});\nconst hasPlainText = computed(() => ['plain', 'monochromePlain'].includes(props.variant));\nconst textFontWeight = computed(() => {\n  if (hasPlainText.value) {\n    return 'regular';\n  }\n\n  if (props.variant === 'primary') {\n    return mdUp ? 'medium' : 'semibold';\n  }\n\n  return 'medium';\n});\nconst textVariant = computed(() => {\n  if (props.size === 'large' || hasPlainText.value && props.size !== 'micro') {\n    return 'bodyMd';\n  }\n\n  return 'bodySm';\n});\nconst hasChildren = computed(() => hasSlot(slots.default));\nconst isDisabled = computed(() => props.disabled || props.loading);\nconst className = computed(() => classNames(\n  styles.Button,\n  styles.pressable,\n  styles[variationName('variant', props.variant)],\n  styles[variationName('size', props.size)],\n  styles[variationName('textAlign', props.textAlign)],\n  props.fullWidth && styles.fullWidth,\n  props.disclosure && styles.disclosure,\n  (props.icon || hasSlot(slots.icon)) && hasSlot(slots.default) && styles.iconWithText,\n  (props.icon || hasSlot(slots.icon)) && !hasSlot(slots.default) && styles.iconOnly,\n  isDisabled.value && styles.disabled,\n  props.loading && styles.loading,\n  props.pressed && !props.disabled && !props.url && styles.pressed,\n  props.removeUnderline && styles.removeUnderline,\n  props.tone && styles[variationName('tone', props.tone)],\n));\n\nconst commonProps = computed(() => {\n  const { id, accessibilityLabel, ariaDescribedBy, role } = props;\n\n  return {\n    id,\n    className: className.value,\n    role,\n    accessibilityLabel,\n    ariaDescribedBy,\n    'data-primary-link': props.dataPrimaryLink ? true : undefined,\n  };\n});\nconst linkProps = computed(() => {\n  const { external, url, download } = props;\n\n  return {\n    url,\n    external,\n    download: download ?? undefined,\n  };\n});\nconst actionProps = computed(() => {\n  const { submit, loading, ariaChecked, ariaControls, ariaExpanded, pressed } = props;\n\n  return {\n    submit,\n    disabled: isDisabled.value,\n    loading,\n    ariaChecked,\n    ariaControls,\n    ariaExpanded,\n    pressed,\n  };\n});\n\nconst disclosureIconSource = computed(() => {\n  if (props.loading) {\n    return 'placeholder';\n  }\n\n  if (props.disclosure === 'select') {\n    return SelectIcon;\n  }\n\n  return props.disclosure === 'up' ? ChevronUpIcon : ChevronDownIcon;\n})\n</script>\n"],"names":["loading","pressed"],"mappings":"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"}