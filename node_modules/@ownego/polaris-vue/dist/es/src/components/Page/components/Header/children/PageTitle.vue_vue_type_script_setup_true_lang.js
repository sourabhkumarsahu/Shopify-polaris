import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, createVNode, unref, withCtx, renderSlot } from "vue";
import { s as styles } from "../Header.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../components/Title/Title.vue_vue_type_script_setup_true_lang.js";
import { c as classNames } from "../../../../../utilities/css.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "PageTitle",
  props: {
    title: {},
    subtitle: {},
    compactTitle: { type: Boolean },
    hasSubtitleMaxWidth: { type: Boolean }
  },
  setup(__props) {
    const props = __props;
    const titleWrapperclassName = computed(() => classNames(
      styles.TitleWrapper,
      !props.hasSubtitleMaxWidth && styles.TitleWrapperExpand
    ));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(titleWrapperclassName.value)
      }, [
        createVNode(unref(_sfc_main$1), {
          title: _ctx.title,
          subtitle: _ctx.subtitle,
          compactTitle: _ctx.compactTitle,
          hasSubtitleMaxWidth: _ctx.hasSubtitleMaxWidth
        }, {
          default: withCtx(() => [
            renderSlot(_ctx.$slots, "default")
          ]),
          _: 3
        }, 8, ["title", "subtitle", "compactTitle", "hasSubtitleMaxWidth"])
      ], 2);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=PageTitle.vue_vue_type_script_setup_true_lang.js.map
