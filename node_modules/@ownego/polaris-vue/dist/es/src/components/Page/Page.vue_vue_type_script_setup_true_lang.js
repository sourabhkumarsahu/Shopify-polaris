import { defineComponent, useSlots, computed, openBlock, createElementBlock, normalizeClass, createBlock, unref, normalizeProps, mergeProps, createSlots, withCtx, renderSlot, createCommentVNode, createElementVNode } from "vue";
import { c as classNames } from "../../utilities/css.js";
import { _ as _sfc_main$1 } from "./components/Header/Header.vue_vue_type_script_setup_true_lang.js";
import { u as useHasSlot } from "../../use/useHasSlot.js";
const Page = "Polaris-Page";
const fullWidth = "Polaris-Page--fullWidth";
const narrowWidth = "Polaris-Page--narrowWidth";
const Content = "Polaris-Page__Content";
const styles = {
  Page,
  fullWidth,
  narrowWidth,
  Content
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Page",
  props: {
    fullWidth: { type: Boolean },
    narrowWidth: { type: Boolean },
    titleHidden: { type: Boolean },
    pageReadyAccessibilityLabel: {},
    filterActions: { type: Boolean },
    primaryAction: {},
    pagination: {},
    backAction: {},
    secondaryActions: {},
    actionGroups: {},
    additionalMetadata: {},
    title: {},
    subtitle: {},
    compactTitle: { type: Boolean },
    hasSubtitleMaxWidth: { type: Boolean }
  },
  setup(__props) {
    const props = __props;
    const slots = useSlots();
    const { hasSlot } = useHasSlot();
    const pageClassName = computed(
      () => classNames(
        styles.Page,
        props.fullWidth && styles.fullWidth,
        props.narrowWidth && styles.narrowWidth
      )
    );
    const hasHeaderContent = computed(
      () => props.title || props.subtitle || (props.primaryAction || hasSlot(slots.primaryAction)) || (props.secondaryActions || hasSlot(slots.secondaryActions)) && (props.secondaryActions && !hasSlot(slots.secondaryActions) && props.secondaryActions.length > 0 || hasSlot(slots.secondaryActions) && !props.secondaryActions && !slots.secondaryActions.length) || props.actionGroups && props.actionGroups.length > 0 || props.backAction
    );
    const contentClassName = computed(
      () => classNames(!hasHeaderContent && styles.Content)
    );
    const headerProps = computed(() => {
      const { fullWidth: fullWidth2, narrowWidth: narrowWidth2, ...rest } = props;
      return { ...rest };
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(pageClassName.value)
      }, [
        hasHeaderContent.value ? (openBlock(), createBlock(unref(_sfc_main$1), normalizeProps(mergeProps({ key: 0 }, headerProps.value)), createSlots({ _: 2 }, [
          unref(hasSlot)(slots.pageTitle) ? {
            name: "pageTitle",
            fn: withCtx(() => [
              renderSlot(_ctx.$slots, "pageTitle")
            ]),
            key: "0"
          } : void 0,
          unref(hasSlot)(slots.secondaryActions) ? {
            name: "secondaryActions",
            fn: withCtx(() => [
              renderSlot(_ctx.$slots, "secondaryActions")
            ]),
            key: "1"
          } : void 0,
          unref(hasSlot)(slots.primaryAction) ? {
            name: "primaryAction",
            fn: withCtx(() => [
              renderSlot(_ctx.$slots, "primaryAction")
            ]),
            key: "2"
          } : void 0,
          unref(hasSlot)(slots.additionalMetadata) ? {
            name: "additionalMetadata",
            fn: withCtx(() => [
              renderSlot(_ctx.$slots, "additionalMetadata")
            ]),
            key: "3"
          } : void 0,
          unref(hasSlot)(slots.pagination) ? {
            name: "pagination",
            fn: withCtx(() => [
              renderSlot(_ctx.$slots, "pagination")
            ]),
            key: "4"
          } : void 0
        ]), 1040)) : createCommentVNode("", true),
        createElementVNode("div", {
          class: normalizeClass(contentClassName.value)
        }, [
          renderSlot(_ctx.$slots, "default")
        ], 2)
      ], 2);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Page.vue_vue_type_script_setup_true_lang.js.map
