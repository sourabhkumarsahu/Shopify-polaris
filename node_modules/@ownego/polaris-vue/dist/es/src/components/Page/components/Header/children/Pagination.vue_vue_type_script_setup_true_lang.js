import { defineComponent, useSlots, resolveComponent, unref, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, normalizeProps, guardReactiveProps, renderSlot, createCommentVNode } from "vue";
import { u as useHasSlot } from "../../../../../use/useHasSlot.js";
import { u as useMediaQueryContext } from "../../../../../use/useMediaQuery.js";
import { _ as _sfc_main$1 } from "../../../../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { s as styles } from "../Header.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Pagination",
  props: {
    pagination: {}
  },
  setup(__props) {
    const slots = useSlots();
    const { hasSlot } = useHasSlot();
    const { isNavigationCollapsed } = useMediaQueryContext();
    return (_ctx, _cache) => {
      const _component_Pagination = resolveComponent("Pagination", true);
      return _ctx.pagination && !unref(isNavigationCollapsed) ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: normalizeClass(unref(styles).PaginationWrapper)
      }, [
        createVNode(unref(_sfc_main$1), { printHidden: "" }, {
          default: withCtx(() => [
            createVNode(_component_Pagination, normalizeProps(guardReactiveProps(_ctx.pagination)), {
              default: withCtx(() => [
                unref(hasSlot)(unref(slots).default) ? renderSlot(_ctx.$slots, "default", { key: 0 }) : createCommentVNode("", true)
              ]),
              _: 3
            }, 16)
          ]),
          _: 3
        })
      ], 2)) : createCommentVNode("", true);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Pagination.vue_vue_type_script_setup_true_lang.js.map
