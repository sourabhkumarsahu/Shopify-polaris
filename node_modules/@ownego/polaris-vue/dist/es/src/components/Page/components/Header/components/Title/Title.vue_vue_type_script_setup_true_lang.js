import { defineComponent, computed, openBlock, createElementBlock, Fragment, createElementVNode, normalizeClass, unref, createVNode, withCtx, createTextVNode, toDisplayString, createCommentVNode, renderSlot } from "vue";
import { c as classNames } from "../../../../../../utilities/css.js";
import { _ as _sfc_main$2 } from "../../../../../Bleed/Bleed.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../../../../Text/Text.vue_vue_type_script_setup_true_lang.js";
const Title = "Polaris-Header-Title";
const TitleWithSubtitle = "Polaris-Header-Title__TitleWithSubtitle";
const TitleWrapper = "Polaris-Header-Title__TitleWrapper";
const SubTitle = "Polaris-Header-Title__SubTitle";
const SubtitleCompact = "Polaris-Header-Title__SubtitleCompact";
const SubtitleMaxWidth = "Polaris-Header-Title__SubtitleMaxWidth";
const styles = {
  Title,
  TitleWithSubtitle,
  TitleWrapper,
  SubTitle,
  SubtitleCompact,
  SubtitleMaxWidth
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "Title",
  props: {
    title: {},
    subtitle: {},
    compactTitle: { type: Boolean },
    hasSubtitleMaxWidth: { type: Boolean }
  },
  setup(__props) {
    const props = __props;
    const className = computed(() => classNames(
      styles.Title,
      props.subtitle && styles.TitleWithSubtitle,
      props.hasSubtitleMaxWidth && styles.SubtitleMaxWidth
    ));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(Fragment, null, [
        createElementVNode("div", {
          class: normalizeClass(unref(styles).TitleWrapper)
        }, [
          _ctx.title ? (openBlock(), createElementBlock("h1", {
            key: 0,
            class: normalizeClass(className.value)
          }, [
            createVNode(unref(_sfc_main$1), {
              as: "span",
              variant: "headingLg",
              "font-weight": "bold"
            }, {
              default: withCtx(() => [
                createTextVNode(toDisplayString(_ctx.title), 1)
              ]),
              _: 1
            })
          ], 2)) : createCommentVNode("", true),
          createVNode(unref(_sfc_main$2), { marginBlock: "100" }, {
            default: withCtx(() => [
              renderSlot(_ctx.$slots, "default")
            ]),
            _: 3
          })
        ], 2),
        _ctx.subtitle ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: normalizeClass(unref(classNames)(unref(styles).SubTitle, _ctx.compactTitle && unref(styles).SubtitleCompact))
        }, [
          createVNode(unref(_sfc_main$1), {
            as: "p",
            variant: "bodySm",
            tone: "subdued"
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString(_ctx.subtitle), 1)
            ]),
            _: 1
          })
        ], 2)) : createCommentVNode("", true)
      ], 64);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=Title.vue_vue_type_script_setup_true_lang.js.map
