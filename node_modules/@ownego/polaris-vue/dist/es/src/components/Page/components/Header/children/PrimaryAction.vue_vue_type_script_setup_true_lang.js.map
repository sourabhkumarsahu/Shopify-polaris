{"version":3,"file":"PrimaryAction.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../../../src/components/Page/components/Header/children/PrimaryAction.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(:class=\"styles.PrimaryActionWrapper\")\n  Box(printHidden)\n    slot(v-if=\"hasSlot(slots.default)\")\n    template(v-else)\n      Tooltip(\n        v-if=\"helpText\",\n        :content=\"`${helpText}`\",\n      )\n        ButtonFrom(\n          :action=\"iconOnly\",\n          :overrides=\"{ variant: primary ? 'primary' : undefined }\",\n          @action=\"() => { onAction && onAction() }\",\n          @mouseenter=\"() => { onMouseEnter && onMouseEnter() }\",\n          @touchstart=\"() => { onTouchStart && onTouchStart() }\",\n        )\n      ButtonFrom(\n        v-else,\n        :action=\"iconOnly\",\n        :overrides=\"{ variant: primary ? 'primary' : undefined }\",\n        @action=\"() => { onAction && onAction() }\",\n        @mouseenter=\"() => { onMouseEnter && onMouseEnter() }\",\n        @touchstart=\"() => { onTouchStart && onTouchStart() }\",\n      )\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, useSlots } from 'vue';\nimport { Box, Tooltip, ButtonFrom } from '@/components';\nimport { useMediaQueryContext } from '@/use/useMediaQuery';\nimport { useHasSlot } from '@/use/useHasSlot';\nimport styles from '@polaris/components/Page/components/Header/Header.module.css';\nimport type { PrimaryActionType } from '../Header.vue';\n\nconst props = defineProps<PrimaryActionType>();\n\nconst slots = useSlots();\n\nconst { hasSlot } = useHasSlot();\nconst { isNavigationCollapsed } = useMediaQueryContext();\n\nconst primary = computed(() => {\n  return !props.primary ? true : props.primary;\n});\n\nconst iconOnly = computed(() => {\n  return shouldShowIconOnly(isNavigationCollapsed.value, props);\n});\n\nfunction shouldShowIconOnly(\n  isMobile: boolean,\n  action: PrimaryActionType,\n): PrimaryActionType {\n  let { content, accessibilityLabel, icon } = action;\n  if (icon == null) {\n    return { ...action, icon: undefined };\n  }\n\n  if (isMobile) {\n    accessibilityLabel = accessibilityLabel || content;\n    content = undefined;\n  }\n\n  return {\n    ...action,\n    content,\n    accessibilityLabel,\n    icon,\n  };\n}\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,UAAM,QAAQ;AAEd,UAAM,QAAQ;AAER,UAAA,EAAE,YAAY;AACd,UAAA,EAAE,0BAA0B;AAE5B,UAAA,UAAU,SAAS,MAAM;AAC7B,aAAO,CAAC,MAAM,UAAU,OAAO,MAAM;AAAA,IAAA,CACtC;AAEK,UAAA,WAAW,SAAS,MAAM;AACvB,aAAA,mBAAmB,sBAAsB,OAAO,KAAK;AAAA,IAAA,CAC7D;AAEQ,aAAA,mBACP,UACA,QACmB;AACnB,UAAI,EAAE,SAAS,oBAAoB,KAAA,IAAS;AAC5C,UAAI,QAAQ,MAAM;AAChB,eAAO,EAAE,GAAG,QAAQ,MAAM,OAAU;AAAA,MACtC;AAEA,UAAI,UAAU;AACZ,6BAAqB,sBAAsB;AACjC,kBAAA;AAAA,MACZ;AAEO,aAAA;AAAA,QACL,GAAG;AAAA,QACH;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}