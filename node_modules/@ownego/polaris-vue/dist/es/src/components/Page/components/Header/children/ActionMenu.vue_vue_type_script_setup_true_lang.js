import { defineComponent, useSlots, computed, unref, renderSlot, openBlock, createBlock, createCommentVNode } from "vue";
import { _ as _sfc_main$1 } from "../../../../ActionMenu/ActionMenu.vue_vue_type_script_setup_true_lang.js";
import { u as useMediaQueryContext } from "../../../../../use/useMediaQuery.js";
import { u as useHasSlot } from "../../../../../use/useHasSlot.js";
import { u as useI18n } from "../../../../../use/useI18n.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "ActionMenu",
  props: {
    title: {},
    secondaryActions: {},
    actionGroups: {}
  },
  emits: ["action-rollup"],
  setup(__props, { emit: __emit }) {
    const props = __props;
    const emits = __emit;
    const slots = useSlots();
    const { hasSlot } = useHasSlot();
    const { isNavigationCollapsed } = useMediaQueryContext();
    const i18n = useI18n();
    const rollupActionsLabel = computed(
      () => props.title ? i18n.translate("Polaris.Page.Header.rollupActionsLabel", { title: props.title }) : void 0
    );
    const hasActionMenu = computed(
      () => props.secondaryActions && props.secondaryActions.length > 0 || hasGroupsWithActions(props.actionGroups)
    );
    const onActionRollup = (hasRolledUp) => {
      emits("action-rollup", hasRolledUp);
    };
    function hasGroupsWithActions(groups = []) {
      return groups.length === 0 ? false : groups.some((group) => group.actions.length > 0);
    }
    return (_ctx, _cache) => {
      return unref(hasSlot)(unref(slots).default) ? renderSlot(_ctx.$slots, "default", { key: 0 }) : hasActionMenu.value ? (openBlock(), createBlock(unref(_sfc_main$1), {
        key: 1,
        actions: _ctx.secondaryActions,
        groups: _ctx.actionGroups,
        rollup: unref(isNavigationCollapsed),
        rollupActionsLabel: rollupActionsLabel.value,
        onActionRollup
      }, null, 8, ["actions", "groups", "rollup", "rollupActionsLabel"])) : createCommentVNode("", true);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=ActionMenu.vue_vue_type_script_setup_true_lang.js.map
