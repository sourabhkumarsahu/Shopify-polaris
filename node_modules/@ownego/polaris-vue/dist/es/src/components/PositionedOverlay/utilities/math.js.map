{"version":3,"file":"math.js","sources":["../../../../../../src/components/PositionedOverlay/utilities/math.ts"],"sourcesContent":["import { Rect } from '@/utilities/geometry';\n\nexport type PreferredPosition = 'above' | 'below' | 'mostSpace' | 'cover';\n\nexport type PreferredAlignment = 'left' | 'center' | 'right';\n\nexport interface Margins {\n  activator: number;\n  container: number;\n  horizontal: number;\n}\n\nexport function calculateVerticalPosition(\n  activatorRect: Rect,\n  overlayRect: Rect,\n  overlayMargins: Margins,\n  scrollableContainerRect: Rect,\n  containerRect: Rect,\n  preferredPosition: PreferredPosition,\n  fixed: boolean | undefined,\n  topBarOffset = 0,\n) {\n  const activatorTop = activatorRect.top;\n  const activatorBottom = activatorTop + activatorRect.height;\n  const spaceAbove = activatorRect.top - topBarOffset;\n  const spaceBelow =\n    containerRect.height - activatorRect.top - activatorRect.height;\n\n  const desiredHeight = overlayRect.height;\n  const verticalMargins = overlayMargins.activator + overlayMargins.container;\n  const minimumSpaceToScroll = overlayMargins.container;\n  const distanceToTopScroll =\n    activatorRect.top - Math.max(scrollableContainerRect.top, 0);\n  const distanceToBottomScroll =\n    containerRect.top +\n    Math.min(\n      containerRect.height,\n      scrollableContainerRect.top + scrollableContainerRect.height,\n    ) -\n    (activatorRect.top + activatorRect.height);\n  const enoughSpaceFromTopScroll = distanceToTopScroll >= minimumSpaceToScroll;\n  const enoughSpaceFromBottomScroll =\n    distanceToBottomScroll >= minimumSpaceToScroll;\n  const heightIfAbove = Math.min(spaceAbove, desiredHeight);\n  const heightIfBelow = Math.min(spaceBelow, desiredHeight);\n  const heightIfAboveCover = Math.min(\n    spaceAbove + activatorRect.height,\n    desiredHeight,\n  );\n  const heightIfBelowCover = Math.min(\n    spaceBelow + activatorRect.height,\n    desiredHeight,\n  );\n  const containerRectTop = fixed ? 0 : containerRect.top;\n\n  const positionIfAbove = {\n    height: heightIfAbove - verticalMargins,\n    top: activatorTop + containerRectTop - heightIfAbove,\n    positioning: 'above',\n  };\n\n  const positionIfBelow = {\n    height: heightIfBelow - verticalMargins,\n    top: activatorBottom + containerRectTop,\n    positioning: 'below',\n  };\n\n  const positionIfCoverBelow = {\n    height: heightIfBelowCover - verticalMargins,\n    top: activatorTop + containerRectTop,\n    positioning: 'cover',\n  };\n\n  const positionIfCoverAbove = {\n    height: heightIfAboveCover - verticalMargins,\n    top:\n      activatorTop +\n      containerRectTop -\n      heightIfAbove +\n      activatorRect.height +\n      verticalMargins,\n    positioning: 'cover',\n  };\n\n  if (preferredPosition === 'above') {\n    return (enoughSpaceFromTopScroll ||\n      (distanceToTopScroll >= distanceToBottomScroll &&\n        !enoughSpaceFromBottomScroll)) &&\n      (spaceAbove > desiredHeight || spaceAbove > spaceBelow)\n      ? positionIfAbove\n      : positionIfBelow;\n  }\n\n  if (preferredPosition === 'below') {\n    return (enoughSpaceFromBottomScroll ||\n      (distanceToBottomScroll >= distanceToTopScroll &&\n        !enoughSpaceFromTopScroll)) &&\n      (spaceBelow > desiredHeight || spaceBelow > spaceAbove)\n      ? positionIfBelow\n      : positionIfAbove;\n  }\n\n  if (preferredPosition === 'cover') {\n    return (enoughSpaceFromBottomScroll ||\n      (distanceToBottomScroll >= distanceToTopScroll &&\n        !enoughSpaceFromTopScroll)) &&\n      (spaceBelow + activatorRect.height > desiredHeight ||\n        spaceBelow > spaceAbove)\n      ? positionIfCoverBelow\n      : positionIfCoverAbove;\n  }\n\n  if (enoughSpaceFromTopScroll && enoughSpaceFromBottomScroll) {\n    return spaceAbove > spaceBelow ? positionIfAbove : positionIfBelow;\n  }\n\n  return distanceToTopScroll > minimumSpaceToScroll\n    ? positionIfAbove\n    : positionIfBelow;\n}\n\nexport function calculateHorizontalPosition(\n  activatorRect: Rect,\n  overlayRect: Rect,\n  containerRect: Rect,\n  overlayMargins: Margins,\n  preferredAlignment: PreferredAlignment,\n) {\n  const maximum = containerRect.width - overlayRect.width;\n\n  if (preferredAlignment === 'left') {\n    return Math.min(\n      maximum,\n      Math.max(0, activatorRect.left - overlayMargins.horizontal),\n    );\n  } else if (preferredAlignment === 'right') {\n    const activatorRight =\n      containerRect.width - (activatorRect.left + activatorRect.width);\n\n    return Math.min(\n      maximum,\n      Math.max(0, activatorRight - overlayMargins.horizontal),\n    );\n  }\n\n  return Math.min(\n    maximum,\n    Math.max(0, activatorRect.center.x - overlayRect.width / 2),\n  );\n}\n\nexport function rectIsOutsideOfRect(inner: Rect, outer: Rect) {\n  const {center} = inner;\n\n  return center.y < outer.top || center.y > outer.top + outer.height;\n}\n\nexport function intersectionWithViewport(\n  rect: Rect,\n  viewport: Rect = windowRect(),\n) {\n  const top = Math.max(rect.top, 0);\n  const left = Math.max(rect.left, 0);\n  const bottom = Math.min(rect.top + rect.height, viewport.height);\n  const right = Math.min(rect.left + rect.width, viewport.width);\n\n  return new Rect({\n    top,\n    left,\n    height: bottom - top,\n    width: right - left,\n  });\n}\n\nexport function windowRect(node?: HTMLElement) {\n  const document = node?.ownerDocument || globalThis.document;\n  const window = document.defaultView || globalThis.window;\n\n  return new Rect({\n    top: window.scrollY,\n    left: window.scrollX,\n    height: window.innerHeight,\n    width: document.body.clientWidth,\n  });\n}\n"],"names":[],"mappings":";AAYgB,SAAA,0BACd,eACA,aACA,gBACA,yBACA,eACA,mBACA,OACA,eAAe,GACf;AACA,QAAM,eAAe,cAAc;AAC7B,QAAA,kBAAkB,eAAe,cAAc;AAC/C,QAAA,aAAa,cAAc,MAAM;AACvC,QAAM,aACJ,cAAc,SAAS,cAAc,MAAM,cAAc;AAE3D,QAAM,gBAAgB,YAAY;AAC5B,QAAA,kBAAkB,eAAe,YAAY,eAAe;AAClE,QAAM,uBAAuB,eAAe;AAC5C,QAAM,sBACJ,cAAc,MAAM,KAAK,IAAI,wBAAwB,KAAK,CAAC;AACvD,QAAA,yBACJ,cAAc,MACd,KAAK;AAAA,IACH,cAAc;AAAA,IACd,wBAAwB,MAAM,wBAAwB;AAAA,EACxD,KACC,cAAc,MAAM,cAAc;AACrC,QAAM,2BAA2B,uBAAuB;AACxD,QAAM,8BACJ,0BAA0B;AAC5B,QAAM,gBAAgB,KAAK,IAAI,YAAY,aAAa;AACxD,QAAM,gBAAgB,KAAK,IAAI,YAAY,aAAa;AACxD,QAAM,qBAAqB,KAAK;AAAA,IAC9B,aAAa,cAAc;AAAA,IAC3B;AAAA,EAAA;AAEF,QAAM,qBAAqB,KAAK;AAAA,IAC9B,aAAa,cAAc;AAAA,IAC3B;AAAA,EAAA;AAEI,QAAA,mBAAmB,QAAQ,IAAI,cAAc;AAEnD,QAAM,kBAAkB;AAAA,IACtB,QAAQ,gBAAgB;AAAA,IACxB,KAAK,eAAe,mBAAmB;AAAA,IACvC,aAAa;AAAA,EAAA;AAGf,QAAM,kBAAkB;AAAA,IACtB,QAAQ,gBAAgB;AAAA,IACxB,KAAK,kBAAkB;AAAA,IACvB,aAAa;AAAA,EAAA;AAGf,QAAM,uBAAuB;AAAA,IAC3B,QAAQ,qBAAqB;AAAA,IAC7B,KAAK,eAAe;AAAA,IACpB,aAAa;AAAA,EAAA;AAGf,QAAM,uBAAuB;AAAA,IAC3B,QAAQ,qBAAqB;AAAA,IAC7B,KACE,eACA,mBACA,gBACA,cAAc,SACd;AAAA,IACF,aAAa;AAAA,EAAA;AAGf,MAAI,sBAAsB,SAAS;AACzB,YAAA,4BACL,uBAAuB,0BACtB,CAAC,iCACF,aAAa,iBAAiB,aAAa,cAC1C,kBACA;AAAA,EACN;AAEA,MAAI,sBAAsB,SAAS;AACzB,YAAA,+BACL,0BAA0B,uBACzB,CAAC,8BACF,aAAa,iBAAiB,aAAa,cAC1C,kBACA;AAAA,EACN;AAEA,MAAI,sBAAsB,SAAS;AACzB,YAAA,+BACL,0BAA0B,uBACzB,CAAC,8BACF,aAAa,cAAc,SAAS,iBACnC,aAAa,cACb,uBACA;AAAA,EACN;AAEA,MAAI,4BAA4B,6BAA6B;AACpD,WAAA,aAAa,aAAa,kBAAkB;AAAA,EACrD;AAEO,SAAA,sBAAsB,uBACzB,kBACA;AACN;AAEO,SAAS,4BACd,eACA,aACA,eACA,gBACA,oBACA;AACM,QAAA,UAAU,cAAc,QAAQ,YAAY;AAElD,MAAI,uBAAuB,QAAQ;AACjC,WAAO,KAAK;AAAA,MACV;AAAA,MACA,KAAK,IAAI,GAAG,cAAc,OAAO,eAAe,UAAU;AAAA,IAAA;AAAA,EAC5D,WACS,uBAAuB,SAAS;AACzC,UAAM,iBACJ,cAAc,SAAS,cAAc,OAAO,cAAc;AAE5D,WAAO,KAAK;AAAA,MACV;AAAA,MACA,KAAK,IAAI,GAAG,iBAAiB,eAAe,UAAU;AAAA,IAAA;AAAA,EAE1D;AAEA,SAAO,KAAK;AAAA,IACV;AAAA,IACA,KAAK,IAAI,GAAG,cAAc,OAAO,IAAI,YAAY,QAAQ,CAAC;AAAA,EAAA;AAE9D;AAEgB,SAAA,oBAAoB,OAAa,OAAa;AACtD,QAAA,EAAC,OAAU,IAAA;AAEV,SAAA,OAAO,IAAI,MAAM,OAAO,OAAO,IAAI,MAAM,MAAM,MAAM;AAC9D;AAEO,SAAS,yBACd,MACA,WAAiB,cACjB;AACA,QAAM,MAAM,KAAK,IAAI,KAAK,KAAK,CAAC;AAChC,QAAM,OAAO,KAAK,IAAI,KAAK,MAAM,CAAC;AAC5B,QAAA,SAAS,KAAK,IAAI,KAAK,MAAM,KAAK,QAAQ,SAAS,MAAM;AACzD,QAAA,QAAQ,KAAK,IAAI,KAAK,OAAO,KAAK,OAAO,SAAS,KAAK;AAE7D,SAAO,IAAI,KAAK;AAAA,IACd;AAAA,IACA;AAAA,IACA,QAAQ,SAAS;AAAA,IACjB,OAAO,QAAQ;AAAA,EAAA,CAChB;AACH;AAEO,SAAS,WAAW,MAAoB;AACvC,QAAA,YAAW,6BAAM,kBAAiB,WAAW;AAC7C,QAAA,SAAS,SAAS,eAAe,WAAW;AAElD,SAAO,IAAI,KAAK;AAAA,IACd,KAAK,OAAO;AAAA,IACZ,MAAM,OAAO;AAAA,IACb,QAAQ,OAAO;AAAA,IACf,OAAO,SAAS,KAAK;AAAA,EAAA,CACtB;AACH;"}