import { defineComponent, useSlots, getCurrentInstance, computed, openBlock, createBlock, unref, withCtx, createElementVNode, normalizeClass, renderSlot, createVNode, createTextVNode, toDisplayString, createCommentVNode } from "vue";
import { u as useI18n } from "../../use/useI18n.js";
import { u as useHasSlot } from "../../use/useHasSlot.js";
import { _ as _sfc_main$8 } from "../ActionList/ActionList.vue_vue_type_script_setup_true_lang.js";
import { c as classNames } from "../../utilities/css.js";
import { M as MenuHorizontalIcon, X as XIcon } from "../../../vendor.js";
import { _ as _sfc_main$3 } from "../BlockStack/BlockStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { u as useToggle } from "../../use/useToggle.js";
import { _ as _sfc_main$7 } from "../Button/Button.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$a } from "../Button/ButtonFrom.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$9 } from "../ButtonGroup/ButtonGroup.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$4 } from "../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../LegacyCard/LegacyCard.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$6 } from "../Popover/Popover.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$5 } from "../Text/Text.vue_vue_type_script_setup_true_lang.js";
const MediaCard = "Polaris-MediaCard";
const portrait = "Polaris-MediaCard--portrait";
const MediaContainer = "Polaris-MediaCard__MediaContainer";
const sizeSmall = "Polaris-MediaCard--sizeSmall";
const InfoContainer = "Polaris-MediaCard__InfoContainer";
const ActionContainer = "Polaris-MediaCard__ActionContainer";
const styles = {
  MediaCard,
  portrait,
  MediaContainer,
  sizeSmall,
  InfoContainer,
  ActionContainer
};
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "MediaCard",
  props: {
    description: {},
    primaryAction: {},
    secondaryAction: {},
    popoverActions: { default: () => [] },
    portrait: { type: Boolean, default: false },
    size: { default: "medium" },
    title: {}
  },
  emits: ["dismiss"],
  setup(__props, { emit: __emit }) {
    const slots = useSlots();
    const props = __props;
    const emits = __emit;
    const i18n = useI18n();
    const { hasSlot } = useHasSlot();
    const { value: popoverActive, toggle: togglePopoverActive } = useToggle(false);
    const currentInstance = getCurrentInstance();
    const mediaCardClassName = computed(() => classNames(
      styles.MediaCard,
      props.portrait && styles.portrait
    ));
    const mediaContainerClassName = computed(() => classNames(
      styles.MediaContainer,
      props.portrait && styles.portrait,
      props.size === "small" && styles.sizeSmall
    ));
    const infoContainerClassName = computed(() => classNames(
      styles.InfoContainer,
      props.portrait && styles.portrait,
      props.size === "small" && styles.sizeSmall
    ));
    const actionClassName = computed(() => classNames(
      styles.ActionContainer,
      props.portrait && styles.portrait
    ));
    const hasDismiss = computed(() => {
      var _a;
      return Boolean((_a = currentInstance == null ? void 0 : currentInstance.vnode.props) == null ? void 0 : _a.onDismiss);
    });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), null, {
        default: withCtx(() => [
          createElementVNode("div", {
            class: normalizeClass(mediaCardClassName.value)
          }, [
            createElementVNode("div", {
              class: normalizeClass(mediaContainerClassName.value)
            }, [
              renderSlot(_ctx.$slots, "default")
            ], 2),
            createElementVNode("div", {
              class: normalizeClass(infoContainerClassName.value)
            }, [
              createVNode(unref(_sfc_main$2), { padding: "500" }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$3), { gap: "200" }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$4), {
                        align: "space-between",
                        wrap: false,
                        gap: "200"
                      }, {
                        default: withCtx(() => [
                          unref(hasSlot)(slots.title) ? renderSlot(_ctx.$slots, "title", { key: 0 }) : (openBlock(), createBlock(unref(_sfc_main$5), {
                            key: 1,
                            variant: "headingSm",
                            as: "h2"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(toDisplayString(_ctx.title), 1)
                            ]),
                            _: 1
                          })),
                          _ctx.popoverActions.length > 0 || hasDismiss.value ? (openBlock(), createBlock(unref(_sfc_main$2), {
                            key: 2,
                            position: "absolute",
                            insetInlineEnd: "500",
                            zIndex: "var(--p-z-index-2)"
                          }, {
                            default: withCtx(() => [
                              createVNode(unref(_sfc_main$4), {
                                gap: "100",
                                wrap: false
                              }, {
                                default: withCtx(() => [
                                  _ctx.popoverActions.length > 0 ? (openBlock(), createBlock(unref(_sfc_main$6), {
                                    key: 0,
                                    active: unref(popoverActive),
                                    onClose: unref(togglePopoverActive),
                                    preferredAlignment: "left",
                                    preferredPosition: "below"
                                  }, {
                                    activator: withCtx(() => [
                                      createVNode(unref(_sfc_main$4), { blockAlign: "center" }, {
                                        default: withCtx(() => [
                                          createVNode(unref(_sfc_main$7), {
                                            variant: "tertiary",
                                            size: "slim",
                                            icon: unref(MenuHorizontalIcon),
                                            accessibilityLabel: unref(i18n).translate("Polaris.MediaCard.popoverButton"),
                                            onClick: unref(togglePopoverActive)
                                          }, null, 8, ["icon", "accessibilityLabel", "onClick"])
                                        ]),
                                        _: 1
                                      })
                                    ]),
                                    default: withCtx(() => [
                                      createVNode(unref(_sfc_main$8), {
                                        items: _ctx.popoverActions,
                                        onActionAnyItem: unref(togglePopoverActive)
                                      }, null, 8, ["items", "onActionAnyItem"])
                                    ]),
                                    _: 1
                                  }, 8, ["active", "onClose"])) : createCommentVNode("", true),
                                  hasDismiss.value ? (openBlock(), createBlock(unref(_sfc_main$7), {
                                    key: 1,
                                    size: "slim",
                                    variant: "tertiary",
                                    icon: unref(XIcon),
                                    accessibilityLabel: unref(i18n).translate("Polaris.MediaCard.dismissButton"),
                                    onClick: _cache[0] || (_cache[0] = ($event) => emits("dismiss"))
                                  }, null, 8, ["icon", "accessibilityLabel"])) : createCommentVNode("", true)
                                ]),
                                _: 1
                              })
                            ]),
                            _: 1
                          })) : createCommentVNode("", true)
                        ]),
                        _: 3
                      }),
                      createVNode(unref(_sfc_main$5), {
                        as: "p",
                        variant: "bodySm"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(toDisplayString(_ctx.description), 1)
                        ]),
                        _: 1
                      }),
                      createElementVNode("div", {
                        class: normalizeClass(actionClassName.value)
                      }, [
                        createVNode(unref(_sfc_main$9), null, {
                          default: withCtx(() => [
                            _ctx.primaryAction ? (openBlock(), createBlock(unref(_sfc_main$a), {
                              key: 0,
                              action: _ctx.primaryAction
                            }, null, 8, ["action"])) : createCommentVNode("", true),
                            _ctx.secondaryAction ? (openBlock(), createBlock(unref(_sfc_main$a), {
                              key: 1,
                              action: _ctx.secondaryAction
                            }, null, 8, ["action"])) : createCommentVNode("", true)
                          ]),
                          _: 1
                        })
                      ], 2)
                    ]),
                    _: 3
                  })
                ]),
                _: 3
              })
            ], 2)
          ], 2)
        ]),
        _: 3
      });
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=MediaCard.vue_vue_type_script_setup_true_lang.js.map
