import { defineComponent, openBlock, createBlock, unref, withCtx, createVNode, resolveDynamicComponent, createCommentVNode, renderSlot } from "vue";
import { _ as _sfc_main$3 } from "../../BlockStack/BlockStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$2 } from "../../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "WithinContentContainerBanner",
  props: {
    backgroundColor: {},
    textColor: {},
    bannerTitle: { type: [String, Number, Boolean, Function, Object, null] },
    bannerIcon: { type: [String, Number, Boolean, Function, Object, null] },
    actionButtons: { type: [String, Number, Boolean, Function, Object, null] },
    dismissButton: { type: [String, Number, Boolean, Function, Object, null] }
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), {
        width: "100%",
        borderRadius: "200",
        background: _ctx.backgroundColor,
        padding: "200",
        color: _ctx.textColor
      }, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), {
            align: "space-between",
            blockAlign: "start",
            wrap: false,
            gap: "200"
          }, {
            default: withCtx(() => [
              createVNode(unref(_sfc_main$2), {
                gap: "150",
                wrap: false
              }, {
                default: withCtx(() => [
                  _ctx.bannerIcon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.bannerIcon), { key: 0 })) : createCommentVNode("", true),
                  createVNode(unref(_sfc_main$1), { width: "100%" }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$3), { gap: "200" }, {
                        default: withCtx(() => [
                          createVNode(unref(_sfc_main$3), { gap: "050" }, {
                            default: withCtx(() => [
                              _ctx.bannerTitle ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.bannerTitle), { key: 0 })) : createCommentVNode("", true),
                              renderSlot(_ctx.$slots, "default")
                            ]),
                            _: 3
                          }),
                          _ctx.actionButtons ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.actionButtons), { key: 0 })) : createCommentVNode("", true)
                        ]),
                        _: 3
                      })
                    ]),
                    _: 3
                  })
                ]),
                _: 3
              }),
              _ctx.dismissButton ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.dismissButton), { key: 0 })) : createCommentVNode("", true)
            ]),
            _: 3
          })
        ]),
        _: 3
      }, 8, ["background", "color"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=WithinContentContainerBanner.vue_vue_type_script_setup_true_lang.js.map
