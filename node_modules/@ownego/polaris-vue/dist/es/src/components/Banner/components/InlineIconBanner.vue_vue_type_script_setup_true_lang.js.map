{"version":3,"file":"InlineIconBanner.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../src/components/Banner/components/InlineIconBanner.vue"],"sourcesContent":["<template lang=\"pug\">\nBox(\n  width=\"100%\",\n  borderRadius=\"300\",\n  padding=\"300\",\n)\n  InlineStack(\n    align=\"space-between\",\n    :blockAlign=\"blockAlign\",\n    :wrap=\"false\",\n  )\n    Box(width=\"100%\")\n      InlineStack(\n        gap=\"200\",\n        :wrap=\"false\",\n        :blockAlign=\"blockAlign\",\n      )\n        div(v-if=\"bannerIcon\", ref=\"iconNode\")\n          Box(\n            borderRadius=\"200\",\n            :background=\"backgroundColor\",\n            padding=\"100\",\n          )\n            component(:is=\"bannerIcon\")\n        Box(ref=\"contentNode\", width=\"100%\")\n          BlockStack(gap=\"200\")\n            slot\n            template(v-if=\"actionButtons\")\n              component(:is=\"actionButtons\")\n    div(\n      ref=\"dismissIconNode\",\n      :class=\"styles.DismissIcon\",\n    )\n      template(v-if=\"dismissButton\")\n        component(:is=\"dismissButton\")\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onMounted, onBeforeUnmount } from 'vue';\nimport type { VueNode } from '@/utilities/types';\nimport { Box, BlockStack, InlineStack } from '@/components';\nimport type { BannerLayoutProps } from '../types';\nimport type { InlineStackProps } from '../../InlineStack/types';\nimport styles from '@polaris/components/Banner/Banner.module.css';\n\ntype BannerLayoutSlots = {\n  default: (_: VueNode) => any;\n};\n\ndefineSlots<BannerLayoutSlots>();\n\ndefineProps<BannerLayoutProps & {\n  bannerIcon?: VueNode;\n  actionButtons?: VueNode;\n  dismissButton?: VueNode;\n}>();\n\nconst blockAlign = ref<InlineStackProps['blockAlign']>('center');\nconst contentNode = ref<HTMLDivElement | null>(null);\nconst iconNode = ref<HTMLDivElement | null>(null);\nconst dismissIconNode = ref<HTMLDivElement | null>(null);\n\nconst handleResize = () => {\n  const contentHeight = contentNode.value?.offsetHeight;\n  const iconBoxHeight =\n    iconNode.value?.offsetHeight || dismissIconNode.value?.offsetHeight;\n\n  if (!contentHeight || !iconBoxHeight) return;\n\n  contentHeight > iconBoxHeight\n    ? blockAlign.value = 'start'\n    : blockAlign.value = 'center';\n}\n\nonMounted(() => {\n  handleResize();\n\n  watch(handleResize, () => handleResize());\n\n  window.addEventListener('resize', handleResize);\n});\n\nonBeforeUnmount(() => {\n  window.removeEventListener('resize', handleResize);\n});\n</script>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAyDM,UAAA,aAAa,IAAoC,QAAQ;AACzD,UAAA,cAAc,IAA2B,IAAI;AAC7C,UAAA,WAAW,IAA2B,IAAI;AAC1C,UAAA,kBAAkB,IAA2B,IAAI;AAEvD,UAAM,eAAe,MAAM;;AACnB,YAAA,iBAAgB,iBAAY,UAAZ,mBAAmB;AACzC,YAAM,kBACJ,cAAS,UAAT,mBAAgB,mBAAgB,qBAAgB,UAAhB,mBAAuB;AAErD,UAAA,CAAC,iBAAiB,CAAC,cAAe;AAEtC,sBAAgB,gBACZ,WAAW,QAAQ,UACnB,WAAW,QAAQ;AAAA,IAAA;AAGzB,cAAU,MAAM;AACD;AAEP,YAAA,cAAc,MAAM,aAAA,CAAc;AAEjC,aAAA,iBAAiB,UAAU,YAAY;AAAA,IAAA,CAC/C;AAED,oBAAgB,MAAM;AACb,aAAA,oBAAoB,UAAU,YAAY;AAAA,IAAA,CAClD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}