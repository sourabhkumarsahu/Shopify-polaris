import { defineComponent, useSlots, computed, openBlock, createBlock, unref, withCtx, createVNode, resolveDynamicComponent, createCommentVNode, renderSlot } from "vue";
import { u as useBreakpoints } from "../../../use/useBreakpoints.js";
import { _ as _sfc_main$2 } from "../../BlockStack/BlockStack.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$1 } from "../../Box/Box.vue_vue_type_script_setup_true_lang.js";
import { _ as _sfc_main$3 } from "../../InlineStack/InlineStack.vue_vue_type_script_setup_true_lang.js";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "DefaultBanner",
  props: {
    backgroundColor: {},
    textColor: {},
    bannerIcon: { type: [String, Number, Boolean, Function, Object, null] },
    bannerTitle: { type: [String, Number, Boolean, Function, Object, null] },
    actionButtons: { type: [String, Number, Boolean, Function, Object, null] },
    dismissButton: { type: [String, Number, Boolean, Function, Object, null] }
  },
  setup(__props) {
    const slots = useSlots();
    const props = __props;
    const breakpoints = useBreakpoints();
    const hasContent = computed(() => slots.default || props.actionButtons);
    return (_ctx, _cache) => {
      return openBlock(), createBlock(unref(_sfc_main$1), { width: "100%" }, {
        default: withCtx(() => [
          createVNode(unref(_sfc_main$2), { align: "space-between" }, {
            default: withCtx(() => [
              createVNode(unref(_sfc_main$1), {
                background: _ctx.backgroundColor,
                color: _ctx.textColor,
                borderStartStartRadius: unref(breakpoints).smUp ? "300" : void 0,
                borderStartEndRadius: unref(breakpoints).smUp ? "300" : void 0,
                borderEndStartRadius: !hasContent.value && unref(breakpoints).smUp ? "300" : void 0,
                borderEndEndRadius: !hasContent.value && unref(breakpoints).smUp ? "300" : void 0,
                padding: "300"
              }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$3), {
                    align: "space-between",
                    blockAlign: "center",
                    gap: "200",
                    wrap: false
                  }, {
                    default: withCtx(() => [
                      createVNode(unref(_sfc_main$3), {
                        gap: "100",
                        wrap: false
                      }, {
                        default: withCtx(() => [
                          _ctx.bannerIcon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.bannerIcon), { key: 0 })) : createCommentVNode("", true),
                          _ctx.bannerTitle ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.bannerTitle), { key: 1 })) : createCommentVNode("", true)
                        ]),
                        _: 1
                      }),
                      _ctx.dismissButton ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.dismissButton), { key: 0 })) : createCommentVNode("", true)
                    ]),
                    _: 1
                  })
                ]),
                _: 1
              }, 8, ["background", "color", "borderStartStartRadius", "borderStartEndRadius", "borderEndStartRadius", "borderEndEndRadius"]),
              Boolean(hasContent.value) ? (openBlock(), createBlock(unref(_sfc_main$1), {
                key: 0,
                padding: { xs: "300", md: "400" },
                paddingBlockStart: "300"
              }, {
                default: withCtx(() => [
                  createVNode(unref(_sfc_main$2), { gap: "200" }, {
                    default: withCtx(() => [
                      renderSlot(_ctx.$slots, "default"),
                      _ctx.actionButtons ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.actionButtons), { key: 0 })) : createCommentVNode("", true)
                    ]),
                    _: 3
                  })
                ]),
                _: 3
              })) : createCommentVNode("", true)
            ]),
            _: 3
          })
        ]),
        _: 3
      });
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=DefaultBanner.vue_vue_type_script_setup_true_lang.js.map
