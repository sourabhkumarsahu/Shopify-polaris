{"version":3,"file":"DefaultBanner.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../../src/components/Banner/components/DefaultBanner.vue"],"sourcesContent":["<template lang=\"pug\">\nBox(width=\"100%\")\n  BlockStack(align=\"space-between\")\n    Box(\n      :background=\"backgroundColor\",\n      :color=\"textColor\",\n      :borderStartStartRadius=\"breakpoints.smUp ? '300' : undefined\",\n      :borderStartEndRadius=\"breakpoints.smUp ? '300' : undefined\",\n      :borderEndStartRadius=\"!hasContent && breakpoints.smUp ? '300' : undefined\",\n      :borderEndEndRadius=\"!hasContent && breakpoints.smUp ? '300' : undefined\",\n      padding=\"300\",\n    )\n      InlineStack(\n        align=\"space-between\",\n        blockAlign=\"center\",\n        gap=\"200\",\n        :wrap=\"false\",\n      )\n        InlineStack(gap=\"100\", :wrap=\"false\")\n          template(v-if=\"bannerIcon\")\n            component(:is=\"bannerIcon\")\n          template(v-if=\"bannerTitle\")\n            component(:is=\"bannerTitle\")\n        template(v-if=\"dismissButton\")\n          component(:is=\"dismissButton\")\n    Box(\n      v-if=\"Boolean(hasContent)\",\n      :padding=\"{ xs: '300', md: '400'}\",\n      paddingBlockStart=\"300\",\n    )\n      BlockStack(gap=\"200\")\n        slot\n        template(v-if=\"actionButtons\")\n          component(:is=\"actionButtons\")\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { VueNode } from '@/utilities/types';\nimport { Box, BlockStack, InlineStack } from '@/components';\nimport { useBreakpoints } from '@/use/useBreakpoints';\nimport type { BannerLayoutProps } from '../types';\n\ntype DefaultBannerSlots = {\n  default: (_: VueNode) => any;\n};\n\nconst slots = defineSlots<DefaultBannerSlots>();\n\nconst props = defineProps<BannerLayoutProps & {\n  bannerIcon?: VueNode;\n  bannerTitle?: VueNode;\n  actionButtons?: VueNode;\n  dismissButton?: VueNode;\n}>();\n\nconst breakpoints = useBreakpoints();\n\nconst hasContent = computed(() => slots.default || props.actionButtons);\n</script>\n"],"names":["_useSlots"],"mappings":";;;;;;;;;;;;;;;;;;;;AA+CA,UAAM,QAAQA;AAEd,UAAM,QAAQ;AAOd,UAAM,cAAc;AAEpB,UAAM,aAAa,SAAS,MAAM,MAAM,WAAW,MAAM,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}