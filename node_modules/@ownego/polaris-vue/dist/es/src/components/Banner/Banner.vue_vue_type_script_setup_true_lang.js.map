{"version":3,"file":"Banner.vue_vue_type_script_setup_true_lang.js","sources":["../../../../../src/components/Banner/Banner.vue"],"sourcesContent":["<template lang=\"pug\">\ndiv(\n  ref=\"wrapperRef\",\n  :class=\"className\",\n  :tabIndex=\"0\",\n  :role=\"tone === 'warning' || tone === 'critical' ? 'alert' : 'status'\",\n  :aria-live=\"stopAnnouncements ? 'off' : 'polite'\",\n  @mouseup=\"handleMouseUp\",\n  @keyup=\"handleKeyUp\",\n  @blur=\"handleBlur\",\n)\n  BannerLayout(\n    v-bind=\"{ ...props }\",\n    v-on=\"listeners\",\n  )\n    slot\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, provide, getCurrentInstance } from 'vue';\nimport { classNames } from '@/utilities/css';\nimport type { VueNode } from '@/utilities/types';\nimport styles from '@polaris/components/Banner/Banner.module.css';\nimport BannerLayout from './components/BannerLayout.vue';\nimport type { BannerProps } from './types';\nimport useWithinContentContext from './context';\n\ndefineSlots<{\n  /** The content to display inside the button */\n  default: (_: VueNode) => any;\n}>();\n\nconst props = withDefaults(defineProps<BannerProps>(), {\n  tone: 'info',\n});\n\nconst currentInstance = getCurrentInstance();\n\ndefineExpose({\n  focus: () => {\n    if (wrapperRef.value) {\n      wrapperRef.value.focus();\n      shouldShowFocus.value = true;\n    }\n  },\n});\n\nconst withinContentContainer = useWithinContentContext();\n\nconst wrapperRef = ref<HTMLInputElement | null>(null);\nconst shouldShowFocus = ref<boolean>(false);\n\nconst listeners = computed(() => {\n  const eventBindings: Record<string, unknown> = {};\n\n  if (currentInstance?.vnode.props?.onDismiss) {\n    eventBindings['dismiss'] = currentInstance.vnode.props.onDismiss;\n  }\n\n  return eventBindings;\n});\n\nconst handleKeyUp = (event: KeyboardEvent) => {\n  if (event.target === wrapperRef.value) {\n    shouldShowFocus.value = true;\n  }\n};\n\nconst handleBlur = () => shouldShowFocus.value = false;\n\nconst handleMouseUp = (event: MouseEvent) => {\n  const target = event.currentTarget as HTMLDivElement;\n  target.blur();\n  shouldShowFocus.value = false;\n};\n\nconst className = computed(() => classNames(\n  styles.Banner,\n  shouldShowFocus.value && styles.keyFocused,\n  withinContentContainer ? styles.withinContentContainer : styles.withinPage,\n));\n\nprovide('banner-context', false);\n</script>\n"],"names":["withinContentContainer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,UAAM,QAAQ;AAId,UAAM,kBAAkB;AAEX,aAAA;AAAA,MACX,OAAO,MAAM;AACX,YAAI,WAAW,OAAO;AACpB,qBAAW,MAAM;AACjB,0BAAgB,QAAQ;AAAA,QAC1B;AAAA,MACF;AAAA,IAAA,CACD;AAED,UAAMA,0BAAyB;AAEzB,UAAA,aAAa,IAA6B,IAAI;AAC9C,UAAA,kBAAkB,IAAa,KAAK;AAEpC,UAAA,YAAY,SAAS,MAAM;;AAC/B,YAAM,gBAAyC,CAAA;AAE3C,WAAA,wDAAiB,MAAM,UAAvB,mBAA8B,WAAW;AAC3C,sBAAc,SAAS,IAAI,gBAAgB,MAAM,MAAM;AAAA,MACzD;AAEO,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,cAAc,CAAC,UAAyB;AACxC,UAAA,MAAM,WAAW,WAAW,OAAO;AACrC,wBAAgB,QAAQ;AAAA,MAC1B;AAAA,IAAA;AAGI,UAAA,aAAa,MAAM,gBAAgB,QAAQ;AAE3C,UAAA,gBAAgB,CAAC,UAAsB;AAC3C,YAAM,SAAS,MAAM;AACrB,aAAO,KAAK;AACZ,sBAAgB,QAAQ;AAAA,IAAA;AAGpB,UAAA,YAAY,SAAS,MAAM;AAAA,MAC/B,OAAO;AAAA,MACP,gBAAgB,SAAS,OAAO;AAAA,MAChCA,0BAAyB,OAAO,yBAAyB,OAAO;AAAA,IAAA,CACjE;AAED,YAAQ,kBAAkB,KAAK;;;;;;;;;;;;;;;;;;;;;;;"}